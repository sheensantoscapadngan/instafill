{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroButton from \"./PDFAcroButton\";\nimport { AcroButtonFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError } from \"../errors\";\n\nvar PDFAcroRadioButton =\n/** @class */\nfunction (_super) {\n  __extends(PDFAcroRadioButton, _super);\n\n  function PDFAcroRadioButton() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PDFAcroRadioButton.prototype.setValue = function (value) {\n    var onValues = this.getOnValues();\n\n    if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n      throw new InvalidAcroFieldValueError();\n    }\n\n    this.dict.set(PDFName.of('V'), value);\n    var widgets = this.getWidgets();\n\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var widget = widgets[idx];\n      var state = widget.getOnValue() === value ? value : PDFName.of('Off');\n      widget.setAppearanceState(state);\n    }\n  };\n\n  PDFAcroRadioButton.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFName) return v;\n    return PDFName.of('Off');\n  };\n\n  PDFAcroRadioButton.prototype.getOnValues = function () {\n    var widgets = this.getWidgets();\n    var onValues = [];\n\n    for (var idx = 0, len = widgets.length; idx < len; idx++) {\n      var onValue = widgets[idx].getOnValue();\n      if (onValue) onValues.push(onValue);\n    }\n\n    return onValues;\n  };\n\n  PDFAcroRadioButton.fromDict = function (dict, ref) {\n    return new PDFAcroRadioButton(dict, ref);\n  };\n\n  PDFAcroRadioButton.create = function (context) {\n    var dict = context.obj({\n      FT: 'Btn',\n      Ff: AcroButtonFlags.Radio,\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroRadioButton(dict, ref);\n  };\n\n  return PDFAcroRadioButton;\n}(PDFAcroButton);\n\nexport default PDFAcroRadioButton;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroRadioButton.ts"],"names":[],"mappings":";AAEA,OAAO,OAAP,MAAc,oBAAd;AACA,OAAO,aAAP,MAAoB,iBAApB;AAEA,SAAS,eAAT,QAA0B,SAA1B;AACA,SAAS,0BAAT,QAAqC,WAArC;;AAEA,IAAA,kBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,kBAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,kBAAA,GAAA;;AA+CC;;AAjCC,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,KAAT,EAAuB;AACrB,QAAM,QAAQ,GAAG,KAAK,WAAL,EAAjB;;AACA,QAAI,CAAC,QAAQ,CAAC,QAAT,CAAkB,KAAlB,CAAD,IAA6B,KAAK,KAAK,OAAO,CAAC,EAAR,CAAW,KAAX,CAA3C,EAA8D;AAC5D,YAAM,IAAI,0BAAJ,EAAN;AACD;;AAED,SAAK,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,EAAR,CAAW,GAAX,CAAd,EAA+B,KAA/B;AAEA,QAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,OAAO,CAAC,MAAhC,EAAwC,GAAG,GAAG,GAA9C,EAAmD,GAAG,EAAtD,EAA0D;AACxD,UAAM,MAAM,GAAG,OAAO,CAAC,GAAD,CAAtB;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,UAAP,OAAwB,KAAxB,GAAgC,KAAhC,GAAwC,OAAO,CAAC,EAAR,CAAW,KAAX,CAAtD;AACA,MAAA,MAAM,CAAC,kBAAP,CAA0B,KAA1B;AACD;AACF,GAdD;;AAgBA,EAAA,kBAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,QAAM,CAAC,GAAG,KAAK,CAAL,EAAV;AACA,QAAI,CAAC,YAAY,OAAjB,EAA0B,OAAO,CAAP;AAC1B,WAAO,OAAO,CAAC,EAAR,CAAW,KAAX,CAAP;AACD,GAJD;;AAMA,EAAA,kBAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAM,OAAO,GAAG,KAAK,UAAL,EAAhB;AAEA,QAAM,QAAQ,GAAc,EAA5B;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,OAAO,CAAC,MAAhC,EAAwC,GAAG,GAAG,GAA9C,EAAmD,GAAG,EAAtD,EAA0D;AACxD,UAAM,OAAO,GAAG,OAAO,CAAC,GAAD,CAAP,CAAa,UAAb,EAAhB;AACA,UAAI,OAAJ,EAAa,QAAQ,CAAC,IAAT,CAAc,OAAd;AACd;;AAED,WAAO,QAAP;AACD,GAVD;;AAnCO,EAAA,kBAAA,CAAA,QAAA,GAAW,UAAC,IAAD,EAAgB,GAAhB,EAA2B;AAC3C,WAAA,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,GAA7B,CAAA;AAAiC,GAD5B;;AAGA,EAAA,kBAAA,CAAA,MAAA,GAAS,UAAC,OAAD,EAAoB;AAClC,QAAM,IAAI,GAAG,OAAO,CAAC,GAAR,CAAY;AACvB,MAAA,EAAE,EAAE,KADmB;AAEvB,MAAA,EAAE,EAAE,eAAe,CAAC,KAFG;AAGvB,MAAA,IAAI,EAAE;AAHiB,KAAZ,CAAb;AAKA,QAAM,GAAG,GAAG,OAAO,CAAC,QAAR,CAAiB,IAAjB,CAAZ;AACA,WAAO,IAAI,kBAAJ,CAAuB,IAAvB,EAA6B,GAA7B,CAAP;AACD,GARM;;AA2CT,SAAA,kBAAA;AAAC,CA/CD,CAAiC,aAAjC,CAAA;;AAiDA,eAAe,kBAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroButton from \"./PDFAcroButton\";\nimport { AcroButtonFlags } from \"./flags\";\nimport { InvalidAcroFieldValueError } from \"../errors\";\nvar PDFAcroRadioButton = /** @class */ (function (_super) {\n    __extends(PDFAcroRadioButton, _super);\n    function PDFAcroRadioButton() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFAcroRadioButton.prototype.setValue = function (value) {\n        var onValues = this.getOnValues();\n        if (!onValues.includes(value) && value !== PDFName.of('Off')) {\n            throw new InvalidAcroFieldValueError();\n        }\n        this.dict.set(PDFName.of('V'), value);\n        var widgets = this.getWidgets();\n        for (var idx = 0, len = widgets.length; idx < len; idx++) {\n            var widget = widgets[idx];\n            var state = widget.getOnValue() === value ? value : PDFName.of('Off');\n            widget.setAppearanceState(state);\n        }\n    };\n    PDFAcroRadioButton.prototype.getValue = function () {\n        var v = this.V();\n        if (v instanceof PDFName)\n            return v;\n        return PDFName.of('Off');\n    };\n    PDFAcroRadioButton.prototype.getOnValues = function () {\n        var widgets = this.getWidgets();\n        var onValues = [];\n        for (var idx = 0, len = widgets.length; idx < len; idx++) {\n            var onValue = widgets[idx].getOnValue();\n            if (onValue)\n                onValues.push(onValue);\n        }\n        return onValues;\n    };\n    PDFAcroRadioButton.fromDict = function (dict, ref) {\n        return new PDFAcroRadioButton(dict, ref);\n    };\n    PDFAcroRadioButton.create = function (context) {\n        var dict = context.obj({\n            FT: 'Btn',\n            Ff: AcroButtonFlags.Radio,\n            Kids: [],\n        });\n        var ref = context.register(dict);\n        return new PDFAcroRadioButton(dict, ref);\n    };\n    return PDFAcroRadioButton;\n}(PDFAcroButton));\nexport default PDFAcroRadioButton;\n//# sourceMappingURL=PDFAcroRadioButton.js.map"]},"metadata":{},"sourceType":"module"}