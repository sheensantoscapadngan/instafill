{"ast":null,"code":"import { transformAxes } from '../../../render/html/utils/transform.js';\n\nfunction resetRotate(child) {\n  // If there's no detected rotation values, we can early return without a forced render.\n  var hasRotate = false; // Keep a record of all the values we've reset\n\n  var resetValues = {}; // Check the rotate value of all axes and reset to 0\n\n  for (var i = 0; i < transformAxes.length; i++) {\n    var axis = transformAxes[i];\n    var key = \"rotate\" + axis; // If this rotation doesn't exist as a motion value, then we don't\n    // need to reset it\n\n    if (!child.hasValue(key) || child.getStaticValue(key) === 0) continue;\n    hasRotate = true; // Record the rotation and then temporarily set it to 0\n\n    resetValues[key] = child.getStaticValue(key);\n    child.setStaticValue(key, 0);\n  } // If there's no rotation values, we don't need to do any more.\n\n\n  if (!hasRotate) return; // Force a render of this element to apply the transform with all rotations\n  // set to 0.\n\n  child.syncRender(); // Put back all the values we reset\n\n  for (var key in resetValues) {\n    child.setStaticValue(key, resetValues[key]);\n  } // Schedule a render for the next frame. This ensures we won't visually\n  // see the element with the reset rotate value applied.\n\n\n  child.scheduleRender();\n}\n\nexport { resetRotate };","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/rotate.js"],"names":["transformAxes","resetRotate","child","hasRotate","resetValues","i","length","axis","key","hasValue","getStaticValue","setStaticValue","syncRender","scheduleRender"],"mappings":"AAAA,SAASA,aAAT,QAA8B,yCAA9B;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB;AACA,MAAIC,SAAS,GAAG,KAAhB,CAFwB,CAGxB;;AACA,MAAIC,WAAW,GAAG,EAAlB,CAJwB,CAKxB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,aAAa,CAACM,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC3C,QAAIE,IAAI,GAAGP,aAAa,CAACK,CAAD,CAAxB;AACA,QAAIG,GAAG,GAAG,WAAWD,IAArB,CAF2C,CAG3C;AACA;;AACA,QAAI,CAACL,KAAK,CAACO,QAAN,CAAeD,GAAf,CAAD,IAAwBN,KAAK,CAACQ,cAAN,CAAqBF,GAArB,MAA8B,CAA1D,EACI;AACJL,IAAAA,SAAS,GAAG,IAAZ,CAP2C,CAQ3C;;AACAC,IAAAA,WAAW,CAACI,GAAD,CAAX,GAAmBN,KAAK,CAACQ,cAAN,CAAqBF,GAArB,CAAnB;AACAN,IAAAA,KAAK,CAACS,cAAN,CAAqBH,GAArB,EAA0B,CAA1B;AACH,GAjBuB,CAkBxB;;;AACA,MAAI,CAACL,SAAL,EACI,OApBoB,CAqBxB;AACA;;AACAD,EAAAA,KAAK,CAACU,UAAN,GAvBwB,CAwBxB;;AACA,OAAK,IAAIJ,GAAT,IAAgBJ,WAAhB,EAA6B;AACzBF,IAAAA,KAAK,CAACS,cAAN,CAAqBH,GAArB,EAA0BJ,WAAW,CAACI,GAAD,CAArC;AACH,GA3BuB,CA4BxB;AACA;;;AACAN,EAAAA,KAAK,CAACW,cAAN;AACH;;AAED,SAASZ,WAAT","sourcesContent":["import { transformAxes } from '../../../render/html/utils/transform.js';\r\n\r\nfunction resetRotate(child) {\r\n    // If there's no detected rotation values, we can early return without a forced render.\r\n    var hasRotate = false;\r\n    // Keep a record of all the values we've reset\r\n    var resetValues = {};\r\n    // Check the rotate value of all axes and reset to 0\r\n    for (var i = 0; i < transformAxes.length; i++) {\r\n        var axis = transformAxes[i];\r\n        var key = \"rotate\" + axis;\r\n        // If this rotation doesn't exist as a motion value, then we don't\r\n        // need to reset it\r\n        if (!child.hasValue(key) || child.getStaticValue(key) === 0)\r\n            continue;\r\n        hasRotate = true;\r\n        // Record the rotation and then temporarily set it to 0\r\n        resetValues[key] = child.getStaticValue(key);\r\n        child.setStaticValue(key, 0);\r\n    }\r\n    // If there's no rotation values, we don't need to do any more.\r\n    if (!hasRotate)\r\n        return;\r\n    // Force a render of this element to apply the transform with all rotations\r\n    // set to 0.\r\n    child.syncRender();\r\n    // Put back all the values we reset\r\n    for (var key in resetValues) {\r\n        child.setStaticValue(key, resetValues[key]);\r\n    }\r\n    // Schedule a render for the next frame. This ensures we won't visually\r\n    // see the element with the reset rotate value applied.\r\n    child.scheduleRender();\r\n}\r\n\r\nexport { resetRotate };\r\n"]},"metadata":{},"sourceType":"module"}