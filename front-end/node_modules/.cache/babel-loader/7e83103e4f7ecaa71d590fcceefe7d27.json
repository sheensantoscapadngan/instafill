{"ast":null,"code":"import firebase from 'firebase/app';\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyCgBgYQYByo-4RHmLohvtBb33UFknX8SF0\",\n  authDomain: \"third-wharf-305714.firebaseapp.com\",\n  projectId: \"third-wharf-305714\",\n  storageBucket: \"third-wharf-305714.appspot.com\",\n  messagingSenderId: \"331162434345\",\n  appId: \"1:331162434345:web:44502b8a1634eeb815d538\",\n  measurementId: \"G-028M52HL27\"\n};\nconst app = firebase.initializeApp(firebaseConfig);\nexport const auth = app.auth();\nexport const db = firebase.firestore();\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const signInWithGoogle = () => {\n  auth.signInWithPopup(googleProvider).then(res => {\n    checkIfUserExists(res.user);\n  }).catch(error => {\n    console.log(error.message);\n  });\n};\nexport const signOut = () => {\n  auth.signOut().then(res => {\n    window.location.reload();\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const checkIfUserExists = user => {\n  let email = user.email;\n  db.collection('users').doc(email).get().then(snapshot => {\n    if (!snapshot.exists) {\n      console.log(\"USER DOES NOT EXIST\");\n      createUserDB(user.email);\n    } else {\n      console.log(\"USER EXISTS\");\n    }\n  });\n};\n\nconst createUserDB = email => {\n  db.collection('users').doc(email).set({\n    energy: 3\n  });\n  console.log(\"USER CREATED\");\n};\n\nexport default app;","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/src/services/firebase.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","initializeApp","auth","db","firestore","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","checkIfUserExists","user","catch","error","console","log","message","signOut","window","location","reload","email","collection","doc","get","snapshot","exists","createUserDB","set","energy"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AACA,OAAO,oBAAP;AAEA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,MAAM,EAAE,yCADS;AAEjBC,EAAAA,UAAU,EAAE,oCAFK;AAGjBC,EAAAA,SAAS,EAAE,oBAHM;AAIjBC,EAAAA,aAAa,EAAE,gCAJE;AAKjBC,EAAAA,iBAAiB,EAAE,cALF;AAMjBC,EAAAA,KAAK,EAAE,2CANU;AAOjBC,EAAAA,aAAa,EAAE;AAPE,CAArB;AAUA,MAAMC,GAAG,GAAGT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB,CAAZ;AACA,OAAO,MAAMU,IAAI,GAAGF,GAAG,CAACE,IAAJ,EAAb;AACP,OAAO,MAAMC,EAAE,GAAGZ,QAAQ,CAACa,SAAT,EAAX;AAEP,MAAMC,cAAc,GAAG,IAAId,QAAQ,CAACW,IAAT,CAAcI,kBAAlB,EAAvB;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAK;AACjCL,EAAAA,IAAI,CAACM,eAAL,CAAqBH,cAArB,EAAqCI,IAArC,CAA2CC,GAAD,IAAO;AAC7CC,IAAAA,iBAAiB,CAACD,GAAG,CAACE,IAAL,CAAjB;AACH,GAFD,EAEGC,KAFH,CAEUC,KAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMC,OAAO,GAAG,MAAK;AACxBhB,EAAAA,IAAI,CAACgB,OAAL,GAAeT,IAAf,CAAqBC,GAAD,IAAO;AACvBS,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,GAFD,EAEGR,KAFH,CAEUC,KAAD,IAAS;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAJD;AAKH,CANM;AAQP,OAAO,MAAMH,iBAAiB,GAAIC,IAAD,IAAS;AACtC,MAAIU,KAAK,GAAGV,IAAI,CAACU,KAAjB;AACAnB,EAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,KAA3B,EAAkCG,GAAlC,GAAwChB,IAAxC,CAA8CiB,QAAD,IAAY;AACrD,QAAG,CAACA,QAAQ,CAACC,MAAb,EAAoB;AAChBZ,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAY,MAAAA,YAAY,CAAChB,IAAI,CAACU,KAAN,CAAZ;AACH,KAHD,MAGK;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,GAPD;AAQH,CAVM;;AAYP,MAAMY,YAAY,GAAIN,KAAD,IAAU;AAC3BnB,EAAAA,EAAE,CAACoB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,KAA3B,EAAkCO,GAAlC,CAAsC;AAACC,IAAAA,MAAM,EAAC;AAAR,GAAtC;AACAf,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACH,CAHD;;AAKA,eAAehB,GAAf","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\nimport \"firebase/firestore\"\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCgBgYQYByo-4RHmLohvtBb33UFknX8SF0\",\r\n    authDomain: \"third-wharf-305714.firebaseapp.com\",\r\n    projectId: \"third-wharf-305714\",\r\n    storageBucket: \"third-wharf-305714.appspot.com\",\r\n    messagingSenderId: \"331162434345\",\r\n    appId: \"1:331162434345:web:44502b8a1634eeb815d538\",\r\n    measurementId: \"G-028M52HL27\"\r\n  };\r\n\r\nconst app = firebase.initializeApp(firebaseConfig)\r\nexport const auth = app.auth()\r\nexport const db = firebase.firestore()\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider()\r\nexport const signInWithGoogle = () =>{\r\n    auth.signInWithPopup(googleProvider).then((res)=>{\r\n        checkIfUserExists(res.user)\r\n    }).catch((error)=>{\r\n        console.log(error.message)\r\n    })\r\n}\r\n\r\nexport const signOut = () =>{\r\n    auth.signOut().then((res)=>{\r\n        window.location.reload()\r\n    }).catch((error)=>{\r\n        console.log(error)\r\n    })\r\n}\r\n\r\nexport const checkIfUserExists = (user) =>{\r\n    let email = user.email\r\n    db.collection('users').doc(email).get().then((snapshot)=>{\r\n        if(!snapshot.exists){\r\n            console.log(\"USER DOES NOT EXIST\")\r\n            createUserDB(user.email)\r\n        }else{\r\n            console.log(\"USER EXISTS\")\r\n        }\r\n    })\r\n}\r\n\r\nconst createUserDB = (email) =>{\r\n    db.collection('users').doc(email).set({energy:3})\r\n    console.log(\"USER CREATED\")\r\n}\r\n\r\nexport default app  \r\n\r\n"]},"metadata":{},"sourceType":"module"}