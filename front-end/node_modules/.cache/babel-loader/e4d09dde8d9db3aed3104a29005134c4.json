{"ast":null,"code":"var _jsxFileName = \"F:\\\\github_repos\\\\instafill\\\\front-end\\\\src\\\\components\\\\common\\\\dropzone\\\\DropzoneMASTER.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, Component } from 'react';\nimport './Dropzone.css';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faUpload);\n\nconst getColor = props => {\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }*/\n  return '#00abeb';\n};\n\nconst Container = styled.div`\n\n  border-color: ${props => getColor(props)};\n\n`;\n_c = Container;\n\nfunction DropzoneMASTER(props) {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    setFileUpload();\n    /*let formData = new FormData()\r\n    formData.append('master',acceptedFiles[0])\r\n      \r\n    \r\n    axios({\r\n      url: '/process',\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formData\r\n    }).then((res)=>{\r\n      \r\n    })*/\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: '.txt',\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Container, { ...getRootProps({\n        isDragActive,\n        isDragAccept,\n        isDragReject\n      }),\n      className: \"inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"upload\",\n        size: \"3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"DROP FILES HERE OR \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"browse\",\n          children: \"BROWSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop files in this area for quick upload to the cloud or use file explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropzoneMASTER, \"01C6TFJdtA8T2mvZ6q1X61tfCkI=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = DropzoneMASTER;\n\n/*#__PURE__*/\n_jsxDEV(DropzoneMASTER, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 1\n}, this);\n\nexport default DropzoneMASTER;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"DropzoneMASTER\");","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/src/components/common/dropzone/DropzoneMASTER.jsx"],"names":["React","useCallback","Component","styled","axios","FontAwesomeIcon","library","faUpload","useDropzone","add","getColor","props","Container","div","DropzoneMASTER","onDrop","acceptedFiles","setFileUpload","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAO,gBAAP;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AAEA,SAAQC,WAAR,QAA0B,gBAA1B;;AAEAF,OAAO,CAACG,GAAR,CAAYF,QAAZ;;AAEA,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,SAAO,SAAP;AACD,CAXD;;AAaA,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAI;AAC7B;AACA,kBAAkBF,KAAK,IAAID,QAAQ,CAACC,KAAD,CAAQ;AAC3C;AACA,CAJA;KAAMC,S;;AAON,SAASE,cAAT,CAAwBH,KAAxB,EAA+B;AAAA;;AAE7B,QAAMI,MAAM,GAAGd,WAAW,CAACe,aAAa,IAAG;AACzCC,IAAAA,aAAa;AACb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGG,GAlByB,EAkBvB,EAlBuB,CAA1B;AAoBA,QAAM;AACJC,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFd,WAAW,CAAC;AAACe,IAAAA,MAAM,EAAE,MAAT;AAAgBR,IAAAA;AAAhB,GAAD,CANf;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,SAAD,OAAeG,YAAY,CAAC;AAACE,QAAAA,YAAD;AAAeC,QAAAA,YAAf;AAA6BC,QAAAA;AAA7B,OAAD,CAA3B;AAAyE,MAAA,SAAS,EAAC,iBAAnF;AAAA,8BACE,sBAAWH,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,IAAI,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AAAA;AAAA;AAAA;AAAA,cATF,eAUE;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,uDAAuB;AAAM,UAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAA;AAAA;AAAA;AAAA,cAZF,eAaE;AAAA;AAAA;AAAA;AAAA,cAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GArDQL,c;UA4BHN,W;;;MA5BGM,c;;AAuDT;AAAA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;;AACA,eAAeA,cAAf","sourcesContent":["import React, { useCallback, Component } from 'react';\r\nimport './Dropzone.css'\r\n\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nlibrary.add(faUpload)\r\n\r\nconst getColor = (props) => {\r\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }*/\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n  border-color: ${props => getColor(props)};\r\n\r\n`;\r\n\r\n\r\nfunction DropzoneMASTER(props) {\r\n\r\n  const onDrop = useCallback(acceptedFiles =>{\r\n    setFileUpload()\r\n    /*let formData = new FormData()\r\n    formData.append('master',acceptedFiles[0])\r\n\r\n    \r\n    \r\n    axios({\r\n      url: '/process',\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formData\r\n    }).then((res)=>{\r\n      \r\n    })*/\r\n\r\n  }, [])\r\n  \r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.txt',onDrop});\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})} className=\"inner-container\">\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<DropzoneMASTER />\r\nexport default DropzoneMASTER;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}