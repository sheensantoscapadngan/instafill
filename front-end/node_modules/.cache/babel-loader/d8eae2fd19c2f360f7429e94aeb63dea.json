{"ast":null,"code":"import { useContext, createElement } from 'react';\nimport { __spread, __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\n/**\r\n * Load features via renderless components based on the provided MotionProps.\r\n * TODO: Look into porting this to a component-less appraoch.\r\n */\n\nfunction useFeatures(defaultFeatures, visualElement, props) {\n  var plugins = useContext(MotionConfigContext);\n\n  var allFeatures = __spread(defaultFeatures, plugins.features);\n\n  var numFeatures = allFeatures.length;\n  var features = []; // Decide which features we should render and add them to the returned array\n\n  for (var i = 0; i < numFeatures; i++) {\n    var _a = allFeatures[i],\n        shouldRender = _a.shouldRender,\n        key = _a.key,\n        getComponent = _a.getComponent;\n\n    if (shouldRender(props)) {\n      var Component = getComponent(props);\n      Component && features.push(createElement(Component, __assign({\n        key: key\n      }, props, {\n        visualElement: visualElement\n      })));\n    }\n  }\n\n  return features;\n}\n\nexport { useFeatures };","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/node_modules/framer-motion/dist/es/motion/features/use-features.js"],"names":["useContext","createElement","__spread","__assign","MotionConfigContext","useFeatures","defaultFeatures","visualElement","props","plugins","allFeatures","features","numFeatures","length","i","_a","shouldRender","key","getComponent","Component","push"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,aAArB,QAA0C,OAA1C;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,SAASC,mBAAT,QAAoC,sCAApC;AAEA;AACA;AACA;AACA;;AACA,SAASC,WAAT,CAAqBC,eAArB,EAAsCC,aAAtC,EAAqDC,KAArD,EAA4D;AACxD,MAAIC,OAAO,GAAGT,UAAU,CAACI,mBAAD,CAAxB;;AACA,MAAIM,WAAW,GAAGR,QAAQ,CAACI,eAAD,EAAkBG,OAAO,CAACE,QAA1B,CAA1B;;AACA,MAAIC,WAAW,GAAGF,WAAW,CAACG,MAA9B;AACA,MAAIF,QAAQ,GAAG,EAAf,CAJwD,CAKxD;;AACA,OAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,WAApB,EAAiCE,CAAC,EAAlC,EAAsC;AAClC,QAAIC,EAAE,GAAGL,WAAW,CAACI,CAAD,CAApB;AAAA,QAAyBE,YAAY,GAAGD,EAAE,CAACC,YAA3C;AAAA,QAAyDC,GAAG,GAAGF,EAAE,CAACE,GAAlE;AAAA,QAAuEC,YAAY,GAAGH,EAAE,CAACG,YAAzF;;AACA,QAAIF,YAAY,CAACR,KAAD,CAAhB,EAAyB;AACrB,UAAIW,SAAS,GAAGD,YAAY,CAACV,KAAD,CAA5B;AACAW,MAAAA,SAAS,IACLR,QAAQ,CAACS,IAAT,CAAcnB,aAAa,CAACkB,SAAD,EAAYhB,QAAQ,CAAC;AAAEc,QAAAA,GAAG,EAAEA;AAAP,OAAD,EAAeT,KAAf,EAAsB;AAAED,QAAAA,aAAa,EAAEA;AAAjB,OAAtB,CAApB,CAA3B,CADJ;AAEH;AACJ;;AACD,SAAOI,QAAP;AACH;;AAED,SAASN,WAAT","sourcesContent":["import { useContext, createElement } from 'react';\r\nimport { __spread, __assign } from 'tslib';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\r\n\r\n/**\r\n * Load features via renderless components based on the provided MotionProps.\r\n * TODO: Look into porting this to a component-less appraoch.\r\n */\r\nfunction useFeatures(defaultFeatures, visualElement, props) {\r\n    var plugins = useContext(MotionConfigContext);\r\n    var allFeatures = __spread(defaultFeatures, plugins.features);\r\n    var numFeatures = allFeatures.length;\r\n    var features = [];\r\n    // Decide which features we should render and add them to the returned array\r\n    for (var i = 0; i < numFeatures; i++) {\r\n        var _a = allFeatures[i], shouldRender = _a.shouldRender, key = _a.key, getComponent = _a.getComponent;\r\n        if (shouldRender(props)) {\r\n            var Component = getComponent(props);\r\n            Component &&\r\n                features.push(createElement(Component, __assign({ key: key }, props, { visualElement: visualElement })));\r\n        }\r\n    }\r\n    return features;\r\n}\r\n\r\nexport { useFeatures };\r\n"]},"metadata":{},"sourceType":"module"}