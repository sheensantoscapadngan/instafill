{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\n\nvar PDFAcroText =\n/** @class */\nfunction (_super) {\n  __extends(PDFAcroText, _super);\n\n  function PDFAcroText() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PDFAcroText.prototype.MaxLen = function () {\n    var maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n    if (maxLen instanceof PDFNumber) return maxLen;\n    return undefined;\n  };\n\n  PDFAcroText.prototype.Q = function () {\n    var q = this.dict.lookup(PDFName.of('Q'));\n    if (q instanceof PDFNumber) return q;\n    return undefined;\n  };\n\n  PDFAcroText.prototype.setMaxLength = function (maxLength) {\n    this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n  };\n\n  PDFAcroText.prototype.removeMaxLength = function () {\n    this.dict.delete(PDFName.of('MaxLen'));\n  };\n\n  PDFAcroText.prototype.getMaxLength = function () {\n    var _a;\n\n    return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n\n  PDFAcroText.prototype.setQuadding = function (quadding) {\n    this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n  };\n\n  PDFAcroText.prototype.getQuadding = function () {\n    var _a;\n\n    return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n  };\n\n  PDFAcroText.prototype.setValue = function (value) {\n    this.dict.set(PDFName.of('V'), value); // const widgets = this.getWidgets();\n    // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n    //   const widget = widgets[idx];\n    //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n    //   widget.setAppearanceState(state);\n    // }\n  };\n\n  PDFAcroText.prototype.removeValue = function () {\n    this.dict.delete(PDFName.of('V'));\n  };\n\n  PDFAcroText.prototype.getValue = function () {\n    var v = this.V();\n    if (v instanceof PDFString || v instanceof PDFHexString) return v;\n    return undefined;\n  };\n\n  PDFAcroText.fromDict = function (dict, ref) {\n    return new PDFAcroText(dict, ref);\n  };\n\n  PDFAcroText.create = function (context) {\n    var dict = context.obj({\n      FT: 'Tx',\n      Kids: []\n    });\n    var ref = context.register(dict);\n    return new PDFAcroText(dict, ref);\n  };\n\n  return PDFAcroText;\n}(PDFAcroTerminal);\n\nexport default PDFAcroText;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroText.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFAcroTerminal from \"./PDFAcroTerminal\";\nvar PDFAcroText = /** @class */ (function (_super) {\n    __extends(PDFAcroText, _super);\n    function PDFAcroText() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFAcroText.prototype.MaxLen = function () {\n        var maxLen = this.dict.lookup(PDFName.of('MaxLen'));\n        if (maxLen instanceof PDFNumber)\n            return maxLen;\n        return undefined;\n    };\n    PDFAcroText.prototype.Q = function () {\n        var q = this.dict.lookup(PDFName.of('Q'));\n        if (q instanceof PDFNumber)\n            return q;\n        return undefined;\n    };\n    PDFAcroText.prototype.setMaxLength = function (maxLength) {\n        this.dict.set(PDFName.of('MaxLen'), PDFNumber.of(maxLength));\n    };\n    PDFAcroText.prototype.removeMaxLength = function () {\n        this.dict.delete(PDFName.of('MaxLen'));\n    };\n    PDFAcroText.prototype.getMaxLength = function () {\n        var _a;\n        return (_a = this.MaxLen()) === null || _a === void 0 ? void 0 : _a.asNumber();\n    };\n    PDFAcroText.prototype.setQuadding = function (quadding) {\n        this.dict.set(PDFName.of('Q'), PDFNumber.of(quadding));\n    };\n    PDFAcroText.prototype.getQuadding = function () {\n        var _a;\n        return (_a = this.Q()) === null || _a === void 0 ? void 0 : _a.asNumber();\n    };\n    PDFAcroText.prototype.setValue = function (value) {\n        this.dict.set(PDFName.of('V'), value);\n        // const widgets = this.getWidgets();\n        // for (let idx = 0, len = widgets.length; idx < len; idx++) {\n        //   const widget = widgets[idx];\n        //   const state = widget.getOnValue() === value ? value : PDFName.of('Off');\n        //   widget.setAppearanceState(state);\n        // }\n    };\n    PDFAcroText.prototype.removeValue = function () {\n        this.dict.delete(PDFName.of('V'));\n    };\n    PDFAcroText.prototype.getValue = function () {\n        var v = this.V();\n        if (v instanceof PDFString || v instanceof PDFHexString)\n            return v;\n        return undefined;\n    };\n    PDFAcroText.fromDict = function (dict, ref) { return new PDFAcroText(dict, ref); };\n    PDFAcroText.create = function (context) {\n        var dict = context.obj({\n            FT: 'Tx',\n            Kids: [],\n        });\n        var ref = context.register(dict);\n        return new PDFAcroText(dict, ref);\n    };\n    return PDFAcroText;\n}(PDFAcroTerminal));\nexport default PDFAcroText;\n//# sourceMappingURL=PDFAcroText.js.map"]},"metadata":{},"sourceType":"module"}