{"ast":null,"code":"import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, rotateDegrees, setGraphicsState, setDashPattern, beginMarkedContent, endMarkedContent, clip, endPath, appendBezierCurve } from \"./operators\";\nimport { degrees, toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nimport { asNumber } from \"./objects\";\nexport var drawText = function (line, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y), showText(line), endText(), popGraphicsState()].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n  var operators = [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size), setLineHeight(options.lineHeight), rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y)].filter(Boolean);\n\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    operators.push(showText(lines[idx]), nextLine());\n  }\n\n  operators.push(endText(), popGraphicsState());\n  return operators;\n};\nexport var drawImage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.width, options.height), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), scale(options.xScale, options.yScale), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), drawObject(name), popGraphicsState()].filter(Boolean);\n};\nexport var drawLine = function (options) {\n  var _a, _b;\n\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setStrokingColor(options.color), setLineWidth(options.thickness), setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0), moveTo(options.start.x, options.start.y), options.lineCap && setLineCap(options.lineCap), moveTo(options.start.x, options.start.y), lineTo(options.end.x, options.end.y), stroke(), popGraphicsState()].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n  var _a, _b;\n\n  return [pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0), translate(options.x, options.y), rotateRadians(toRadians(options.rotate)), skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)), moveTo(0, 0), lineTo(0, options.height), lineTo(options.width, options.height), lineTo(options.width, 0), closePath(), // prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n/** @deprecated */\n\nexport var drawEllipsePath = function (config) {\n  var x = asNumber(config.x);\n  var y = asNumber(config.y);\n  var xScale = asNumber(config.xScale);\n  var yScale = asNumber(config.yScale);\n  x -= xScale;\n  y -= yScale;\n  var ox = xScale * KAPPA;\n  var oy = yScale * KAPPA;\n  var xe = x + xScale * 2;\n  var ye = y + yScale * 2;\n  var xm = x + xScale;\n  var ym = y + yScale;\n  return [pushGraphicsState(), moveTo(x, ym), appendBezierCurve(x, ym - oy, xm - ox, y, xm, y), appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym), appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye), appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym), popGraphicsState()];\n};\n\nvar drawEllipseCurves = function (config) {\n  var centerX = asNumber(config.x);\n  var centerY = asNumber(config.y);\n  var xScale = asNumber(config.xScale);\n  var yScale = asNumber(config.yScale);\n  var x = -xScale;\n  var y = -yScale;\n  var ox = xScale * KAPPA;\n  var oy = yScale * KAPPA;\n  var xe = x + xScale * 2;\n  var ye = y + yScale * 2;\n  var xm = x + xScale;\n  var ym = y + yScale;\n  return [translate(centerX, centerY), rotateRadians(toRadians(config.rotate)), moveTo(x, ym), appendBezierCurve(x, ym - oy, xm - ox, y, xm, y), appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym), appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye), appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym)];\n};\n\nexport var drawEllipse = function (options) {\n  var _a, _b, _c;\n\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)], options.rotate === undefined ? drawEllipsePath({\n    x: options.x,\n    y: options.y,\n    xScale: options.xScale,\n    yScale: options.yScale\n  }) : drawEllipseCurves({\n    x: options.x,\n    y: options.y,\n    xScale: options.xScale,\n    yScale: options.yScale,\n    rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0)\n  }), [// prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n  var _a, _b, _c;\n\n  return __spreadArrays([pushGraphicsState(), options.graphicsState && setGraphicsState(options.graphicsState), translate(options.x, options.y), rotateRadians(toRadians((_a = options.rotate) !== null && _a !== void 0 ? _a : degrees(0))), // SVG path Y axis is opposite pdf-lib's\n  options.scale ? scale(options.scale, -options.scale) : scale(1, -1), options.color && setFillingColor(options.color), options.borderColor && setStrokingColor(options.borderColor), options.borderWidth && setLineWidth(options.borderWidth), options.borderLineCap && setLineCap(options.borderLineCap), setDashPattern((_b = options.borderDashArray) !== null && _b !== void 0 ? _b : [], (_c = options.borderDashPhase) !== null && _c !== void 0 ? _c : 0)], svgPathToOperators(path), [// prettier-ignore\n  options.color && options.borderWidth ? fillAndStroke() : options.color ? fill() : options.borderColor ? stroke() : closePath(), popGraphicsState()]).filter(Boolean);\n};\nexport var drawCheckMark = function (options) {\n  var size = asNumber(options.size);\n  /*********************** Define Check Mark Points ***************************/\n  // A check mark is defined by three points in some coordinate space. Here, we\n  // define these points in a unit coordinate system, where the range of the x\n  // and y axis are both [-1, 1].\n  //\n  // Note that we do not hard code `p1y` in case we wish to change the\n  // size/shape of the check mark in the future. We want the check mark to\n  // always form a right angle. This means that the dot product between (p1-p2)\n  // and (p3-p2) should be zero:\n  //\n  //   (p1x-p2x) * (p3x-p2x) + (p1y-p2y) * (p3y-p2y) = 0\n  //\n  // We can now rejigger this equation to solve for `p1y`:\n  //\n  //   (p1y-p2y) * (p3y-p2y) = -((p1x-p2x) * (p3x-p2x))\n  //   (p1y-p2y) = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y)\n  //   p1y = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y) + p2y\n  //\n  // Thanks to my friend Joel Walker (https://github.com/JWalker1995) for\n  // devising the above equation and unit coordinate system approach!\n  // (x, y) coords of the check mark's bottommost point\n\n  var p2x = -1 + 0.75;\n  var p2y = -1 + 0.51; // (x, y) coords of the check mark's topmost point\n\n  var p3y = 1 - 0.525;\n  var p3x = 1 - 0.31; // (x, y) coords of the check mark's center (vertically) point\n\n  var p1x = -1 + 0.325;\n  var p1y = -((p1x - p2x) * (p3x - p2x)) / (p3y - p2y) + p2y;\n  /****************************************************************************/\n\n  return [pushGraphicsState(), options.color && setStrokingColor(options.color), setLineWidth(options.thickness), translate(options.x, options.y), moveTo(p1x * size, p1y * size), lineTo(p2x * size, p2y * size), lineTo(p3x * size, p3y * size), stroke(), popGraphicsState()].filter(Boolean);\n}; // prettier-ignore\n\nexport var rotateInPlace = function (options) {\n  return options.rotation === 0 ? [translate(0, 0), rotateDegrees(0)] : options.rotation === 90 ? [translate(options.width, 0), rotateDegrees(90)] : options.rotation === 180 ? [translate(options.width, options.height), rotateDegrees(180)] : options.rotation === 270 ? [translate(0, options.height), rotateDegrees(270)] : [];\n}; // Invalid rotation - noop\n\nexport var drawCheckBox = function (options) {\n  var outline = drawRectangle({\n    x: options.x,\n    y: options.y,\n    width: options.width,\n    height: options.height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  if (!options.filled) return outline;\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var checkMarkSize = Math.min(width, height) / 2;\n  var checkMark = drawCheckMark({\n    x: width / 2,\n    y: height / 2,\n    size: checkMarkSize,\n    thickness: options.thickness,\n    color: options.markColor\n  });\n  return __spreadArrays([pushGraphicsState()], outline, checkMark, [popGraphicsState()]);\n};\nexport var drawRadioButton = function (options) {\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var outlineScale = Math.min(width, height) / 2;\n  var outline = drawEllipse({\n    x: options.x,\n    y: options.y,\n    xScale: outlineScale,\n    yScale: outlineScale,\n    color: options.color,\n    borderColor: options.borderColor,\n    borderWidth: options.borderWidth\n  });\n  if (!options.filled) return outline;\n  var dot = drawEllipse({\n    x: options.x,\n    y: options.y,\n    xScale: outlineScale * 0.45,\n    yScale: outlineScale * 0.45,\n    color: options.dotColor,\n    borderColor: undefined,\n    borderWidth: 0\n  });\n  return __spreadArrays([pushGraphicsState()], outline, dot, [popGraphicsState()]);\n};\nexport var drawButton = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  return __spreadArrays([pushGraphicsState()], background, lines, [popGraphicsState()]);\n};\nexport var drawTextLines = function (lines, options) {\n  var operators = [beginText(), setFillingColor(options.color), setFontAndSize(options.font, options.size)];\n\n  for (var idx = 0, len = lines.length; idx < len; idx++) {\n    var _a = lines[idx],\n        encoded = _a.encoded,\n        x = _a.x,\n        y = _a.y;\n    operators.push(rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), x, y), showText(encoded));\n  }\n\n  operators.push(endText());\n  return operators;\n};\nexport var drawTextField = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var borderWidth = asNumber(options.borderWidth);\n  var padding = asNumber(options.padding);\n  var clipX = x + borderWidth / 2 + padding;\n  var clipY = y + borderWidth / 2 + padding;\n  var clipWidth = width - (borderWidth / 2 + padding) * 2;\n  var clipHeight = height - (borderWidth / 2 + padding) * 2;\n  var clippingArea = [moveTo(clipX, clipY), lineTo(clipX, clipY + clipHeight), lineTo(clipX + clipWidth, clipY + clipHeight), lineTo(clipX + clipWidth, clipY), closePath(), clip(), endPath()];\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n\n  var markedContent = __spreadArrays([beginMarkedContent('Tx'), pushGraphicsState()], lines, [popGraphicsState(), endMarkedContent()]);\n\n  return __spreadArrays([pushGraphicsState()], background, clippingArea, markedContent, [popGraphicsState()]);\n};\nexport var drawOptionList = function (options) {\n  var x = asNumber(options.x);\n  var y = asNumber(options.y);\n  var width = asNumber(options.width);\n  var height = asNumber(options.height);\n  var lineHeight = asNumber(options.lineHeight);\n  var borderWidth = asNumber(options.borderWidth);\n  var padding = asNumber(options.padding);\n  var clipX = x + borderWidth / 2 + padding;\n  var clipY = y + borderWidth / 2 + padding;\n  var clipWidth = width - (borderWidth / 2 + padding) * 2;\n  var clipHeight = height - (borderWidth / 2 + padding) * 2;\n  var clippingArea = [moveTo(clipX, clipY), lineTo(clipX, clipY + clipHeight), lineTo(clipX + clipWidth, clipY + clipHeight), lineTo(clipX + clipWidth, clipY), closePath(), clip(), endPath()];\n  var background = drawRectangle({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    borderWidth: options.borderWidth,\n    color: options.color,\n    borderColor: options.borderColor,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n  var highlights = [];\n\n  for (var idx = 0, len = options.selectedLines.length; idx < len; idx++) {\n    var line = options.textLines[options.selectedLines[idx]];\n    highlights.push.apply(highlights, drawRectangle({\n      x: line.x - padding,\n      y: line.y - (lineHeight - line.height) / 2,\n      width: width - borderWidth,\n      height: line.height + (lineHeight - line.height) / 2,\n      borderWidth: 0,\n      color: options.selectedColor,\n      borderColor: undefined,\n      rotate: degrees(0),\n      xSkew: degrees(0),\n      ySkew: degrees(0)\n    }));\n  }\n\n  var lines = drawTextLines(options.textLines, {\n    color: options.textColor,\n    font: options.font,\n    size: options.fontSize,\n    rotate: degrees(0),\n    xSkew: degrees(0),\n    ySkew: degrees(0)\n  });\n\n  var markedContent = __spreadArrays([beginMarkedContent('Tx'), pushGraphicsState()], lines, [popGraphicsState(), endMarkedContent()]);\n\n  return __spreadArrays([pushGraphicsState()], background, highlights, clippingArea, markedContent, [popGraphicsState()]);\n};","map":{"version":3,"sources":["../../src/api/operations.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __spreadArrays } from \"tslib\";\nimport { setFillingColor, setStrokingColor } from \"./colors\";\nimport { beginText, closePath, drawObject, endText, fill, fillAndStroke, lineTo, moveTo, nextLine, popGraphicsState, pushGraphicsState, rotateAndSkewTextRadiansAndTranslate, rotateRadians, scale, setFontAndSize, setLineHeight, setLineWidth, showText, skewRadians, stroke, translate, setLineCap, rotateDegrees, setGraphicsState, setDashPattern, beginMarkedContent, endMarkedContent, clip, endPath, appendBezierCurve, } from \"./operators\";\nimport { degrees, toRadians } from \"./rotations\";\nimport { svgPathToOperators } from \"./svgPath\";\nimport { asNumber } from \"./objects\";\nexport var drawText = function (line, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n        showText(line),\n        endText(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLinesOfText = function (lines, options) {\n    var operators = [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n        setLineHeight(options.lineHeight),\n        rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), options.x, options.y),\n    ].filter(Boolean);\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        operators.push(showText(lines[idx]), nextLine());\n    }\n    operators.push(endText(), popGraphicsState());\n    return operators;\n};\nexport var drawImage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.width, options.height),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawPage = function (name, options) {\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        scale(options.xScale, options.yScale),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        drawObject(name),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawLine = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setStrokingColor(options.color),\n        setLineWidth(options.thickness),\n        setDashPattern((_a = options.dashArray) !== null && _a !== void 0 ? _a : [], (_b = options.dashPhase) !== null && _b !== void 0 ? _b : 0),\n        moveTo(options.start.x, options.start.y),\n        options.lineCap && setLineCap(options.lineCap),\n        moveTo(options.start.x, options.start.y),\n        lineTo(options.end.x, options.end.y),\n        stroke(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nexport var drawRectangle = function (options) {\n    var _a, _b;\n    return [\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0),\n        translate(options.x, options.y),\n        rotateRadians(toRadians(options.rotate)),\n        skewRadians(toRadians(options.xSkew), toRadians(options.ySkew)),\n        moveTo(0, 0),\n        lineTo(0, options.height),\n        lineTo(options.width, options.height),\n        lineTo(options.width, 0),\n        closePath(),\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\nvar KAPPA = 4.0 * ((Math.sqrt(2) - 1.0) / 3.0);\n/** @deprecated */\nexport var drawEllipsePath = function (config) {\n    var x = asNumber(config.x);\n    var y = asNumber(config.y);\n    var xScale = asNumber(config.xScale);\n    var yScale = asNumber(config.yScale);\n    x -= xScale;\n    y -= yScale;\n    var ox = xScale * KAPPA;\n    var oy = yScale * KAPPA;\n    var xe = x + xScale * 2;\n    var ye = y + yScale * 2;\n    var xm = x + xScale;\n    var ym = y + yScale;\n    return [\n        pushGraphicsState(),\n        moveTo(x, ym),\n        appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),\n        appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),\n        appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),\n        appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),\n        popGraphicsState(),\n    ];\n};\nvar drawEllipseCurves = function (config) {\n    var centerX = asNumber(config.x);\n    var centerY = asNumber(config.y);\n    var xScale = asNumber(config.xScale);\n    var yScale = asNumber(config.yScale);\n    var x = -xScale;\n    var y = -yScale;\n    var ox = xScale * KAPPA;\n    var oy = yScale * KAPPA;\n    var xe = x + xScale * 2;\n    var ye = y + yScale * 2;\n    var xm = x + xScale;\n    var ym = y + yScale;\n    return [\n        translate(centerX, centerY),\n        rotateRadians(toRadians(config.rotate)),\n        moveTo(x, ym),\n        appendBezierCurve(x, ym - oy, xm - ox, y, xm, y),\n        appendBezierCurve(xm + ox, y, xe, ym - oy, xe, ym),\n        appendBezierCurve(xe, ym + oy, xm + ox, ye, xm, ye),\n        appendBezierCurve(xm - ox, ye, x, ym + oy, x, ym),\n    ];\n};\nexport var drawEllipse = function (options) {\n    var _a, _b, _c;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_a = options.borderDashArray) !== null && _a !== void 0 ? _a : [], (_b = options.borderDashPhase) !== null && _b !== void 0 ? _b : 0)\n    ], (options.rotate === undefined\n        ? drawEllipsePath({\n            x: options.x,\n            y: options.y,\n            xScale: options.xScale,\n            yScale: options.yScale,\n        })\n        : drawEllipseCurves({\n            x: options.x,\n            y: options.y,\n            xScale: options.xScale,\n            yScale: options.yScale,\n            rotate: (_c = options.rotate) !== null && _c !== void 0 ? _c : degrees(0),\n        })), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\nexport var drawSvgPath = function (path, options) {\n    var _a, _b, _c;\n    return __spreadArrays([\n        pushGraphicsState(),\n        options.graphicsState && setGraphicsState(options.graphicsState),\n        translate(options.x, options.y),\n        rotateRadians(toRadians((_a = options.rotate) !== null && _a !== void 0 ? _a : degrees(0))),\n        // SVG path Y axis is opposite pdf-lib's\n        options.scale ? scale(options.scale, -options.scale) : scale(1, -1),\n        options.color && setFillingColor(options.color),\n        options.borderColor && setStrokingColor(options.borderColor),\n        options.borderWidth && setLineWidth(options.borderWidth),\n        options.borderLineCap && setLineCap(options.borderLineCap),\n        setDashPattern((_b = options.borderDashArray) !== null && _b !== void 0 ? _b : [], (_c = options.borderDashPhase) !== null && _c !== void 0 ? _c : 0)\n    ], svgPathToOperators(path), [\n        // prettier-ignore\n        options.color && options.borderWidth ? fillAndStroke()\n            : options.color ? fill()\n                : options.borderColor ? stroke()\n                    : closePath(),\n        popGraphicsState(),\n    ]).filter(Boolean);\n};\nexport var drawCheckMark = function (options) {\n    var size = asNumber(options.size);\n    /*********************** Define Check Mark Points ***************************/\n    // A check mark is defined by three points in some coordinate space. Here, we\n    // define these points in a unit coordinate system, where the range of the x\n    // and y axis are both [-1, 1].\n    //\n    // Note that we do not hard code `p1y` in case we wish to change the\n    // size/shape of the check mark in the future. We want the check mark to\n    // always form a right angle. This means that the dot product between (p1-p2)\n    // and (p3-p2) should be zero:\n    //\n    //   (p1x-p2x) * (p3x-p2x) + (p1y-p2y) * (p3y-p2y) = 0\n    //\n    // We can now rejigger this equation to solve for `p1y`:\n    //\n    //   (p1y-p2y) * (p3y-p2y) = -((p1x-p2x) * (p3x-p2x))\n    //   (p1y-p2y) = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y)\n    //   p1y = -((p1x-p2x) * (p3x-p2x)) / (p3y-p2y) + p2y\n    //\n    // Thanks to my friend Joel Walker (https://github.com/JWalker1995) for\n    // devising the above equation and unit coordinate system approach!\n    // (x, y) coords of the check mark's bottommost point\n    var p2x = -1 + 0.75;\n    var p2y = -1 + 0.51;\n    // (x, y) coords of the check mark's topmost point\n    var p3y = 1 - 0.525;\n    var p3x = 1 - 0.31;\n    // (x, y) coords of the check mark's center (vertically) point\n    var p1x = -1 + 0.325;\n    var p1y = -((p1x - p2x) * (p3x - p2x)) / (p3y - p2y) + p2y;\n    /****************************************************************************/\n    return [\n        pushGraphicsState(),\n        options.color && setStrokingColor(options.color),\n        setLineWidth(options.thickness),\n        translate(options.x, options.y),\n        moveTo(p1x * size, p1y * size),\n        lineTo(p2x * size, p2y * size),\n        lineTo(p3x * size, p3y * size),\n        stroke(),\n        popGraphicsState(),\n    ].filter(Boolean);\n};\n// prettier-ignore\nexport var rotateInPlace = function (options) {\n    return options.rotation === 0 ? [\n        translate(0, 0),\n        rotateDegrees(0)\n    ]\n        : options.rotation === 90 ? [\n            translate(options.width, 0),\n            rotateDegrees(90)\n        ]\n            : options.rotation === 180 ? [\n                translate(options.width, options.height),\n                rotateDegrees(180)\n            ]\n                : options.rotation === 270 ? [\n                    translate(0, options.height),\n                    rotateDegrees(270)\n                ]\n                    : [];\n}; // Invalid rotation - noop\nexport var drawCheckBox = function (options) {\n    var outline = drawRectangle({\n        x: options.x,\n        y: options.y,\n        width: options.width,\n        height: options.height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    if (!options.filled)\n        return outline;\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var checkMarkSize = Math.min(width, height) / 2;\n    var checkMark = drawCheckMark({\n        x: width / 2,\n        y: height / 2,\n        size: checkMarkSize,\n        thickness: options.thickness,\n        color: options.markColor,\n    });\n    return __spreadArrays([pushGraphicsState()], outline, checkMark, [popGraphicsState()]);\n};\nexport var drawRadioButton = function (options) {\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var outlineScale = Math.min(width, height) / 2;\n    var outline = drawEllipse({\n        x: options.x,\n        y: options.y,\n        xScale: outlineScale,\n        yScale: outlineScale,\n        color: options.color,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n    });\n    if (!options.filled)\n        return outline;\n    var dot = drawEllipse({\n        x: options.x,\n        y: options.y,\n        xScale: outlineScale * 0.45,\n        yScale: outlineScale * 0.45,\n        color: options.dotColor,\n        borderColor: undefined,\n        borderWidth: 0,\n    });\n    return __spreadArrays([pushGraphicsState()], outline, dot, [popGraphicsState()]);\n};\nexport var drawButton = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    return __spreadArrays([pushGraphicsState()], background, lines, [popGraphicsState()]);\n};\nexport var drawTextLines = function (lines, options) {\n    var operators = [\n        beginText(),\n        setFillingColor(options.color),\n        setFontAndSize(options.font, options.size),\n    ];\n    for (var idx = 0, len = lines.length; idx < len; idx++) {\n        var _a = lines[idx], encoded = _a.encoded, x = _a.x, y = _a.y;\n        operators.push(rotateAndSkewTextRadiansAndTranslate(toRadians(options.rotate), toRadians(options.xSkew), toRadians(options.ySkew), x, y), showText(encoded));\n    }\n    operators.push(endText());\n    return operators;\n};\nexport var drawTextField = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var borderWidth = asNumber(options.borderWidth);\n    var padding = asNumber(options.padding);\n    var clipX = x + borderWidth / 2 + padding;\n    var clipY = y + borderWidth / 2 + padding;\n    var clipWidth = width - (borderWidth / 2 + padding) * 2;\n    var clipHeight = height - (borderWidth / 2 + padding) * 2;\n    var clippingArea = [\n        moveTo(clipX, clipY),\n        lineTo(clipX, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY),\n        closePath(),\n        clip(),\n        endPath(),\n    ];\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var markedContent = __spreadArrays([\n        beginMarkedContent('Tx'),\n        pushGraphicsState()\n    ], lines, [\n        popGraphicsState(),\n        endMarkedContent(),\n    ]);\n    return __spreadArrays([\n        pushGraphicsState()\n    ], background, clippingArea, markedContent, [\n        popGraphicsState(),\n    ]);\n};\nexport var drawOptionList = function (options) {\n    var x = asNumber(options.x);\n    var y = asNumber(options.y);\n    var width = asNumber(options.width);\n    var height = asNumber(options.height);\n    var lineHeight = asNumber(options.lineHeight);\n    var borderWidth = asNumber(options.borderWidth);\n    var padding = asNumber(options.padding);\n    var clipX = x + borderWidth / 2 + padding;\n    var clipY = y + borderWidth / 2 + padding;\n    var clipWidth = width - (borderWidth / 2 + padding) * 2;\n    var clipHeight = height - (borderWidth / 2 + padding) * 2;\n    var clippingArea = [\n        moveTo(clipX, clipY),\n        lineTo(clipX, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY + clipHeight),\n        lineTo(clipX + clipWidth, clipY),\n        closePath(),\n        clip(),\n        endPath(),\n    ];\n    var background = drawRectangle({\n        x: x,\n        y: y,\n        width: width,\n        height: height,\n        borderWidth: options.borderWidth,\n        color: options.color,\n        borderColor: options.borderColor,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var highlights = [];\n    for (var idx = 0, len = options.selectedLines.length; idx < len; idx++) {\n        var line = options.textLines[options.selectedLines[idx]];\n        highlights.push.apply(highlights, drawRectangle({\n            x: line.x - padding,\n            y: line.y - (lineHeight - line.height) / 2,\n            width: width - borderWidth,\n            height: line.height + (lineHeight - line.height) / 2,\n            borderWidth: 0,\n            color: options.selectedColor,\n            borderColor: undefined,\n            rotate: degrees(0),\n            xSkew: degrees(0),\n            ySkew: degrees(0),\n        }));\n    }\n    var lines = drawTextLines(options.textLines, {\n        color: options.textColor,\n        font: options.font,\n        size: options.fontSize,\n        rotate: degrees(0),\n        xSkew: degrees(0),\n        ySkew: degrees(0),\n    });\n    var markedContent = __spreadArrays([\n        beginMarkedContent('Tx'),\n        pushGraphicsState()\n    ], lines, [\n        popGraphicsState(),\n        endMarkedContent(),\n    ]);\n    return __spreadArrays([\n        pushGraphicsState()\n    ], background, highlights, clippingArea, markedContent, [\n        popGraphicsState(),\n    ]);\n};\n//# sourceMappingURL=operations.js.map"]},"metadata":{},"sourceType":"module"}