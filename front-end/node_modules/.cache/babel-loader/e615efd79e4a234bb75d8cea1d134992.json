{"ast":null,"code":"import { useContext, useEffect } from 'react';\nimport { __assign } from 'tslib';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\nimport { useVisualElementContext } from '../../context/MotionContext/index.js';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nimport { isPresent } from '../../components/AnimatePresence/use-presence.js';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.js';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.js';\nimport { useSnapshotOnUnmount } from '../features/layout/use-snapshot-on-unmount.js';\n\nfunction useLayoutId(_a) {\n  var layoutId = _a.layoutId;\n  var layoutGroupId = useContext(LayoutGroupContext);\n  return layoutGroupId && layoutId !== undefined ? layoutGroupId + \"-\" + layoutId : layoutId;\n}\n\nfunction useVisualElement(isStatic, visualState, createVisualElement, props) {\n  var config = useContext(MotionConfigContext);\n  var parent = useVisualElementContext();\n  var presenceContext = useContext(PresenceContext);\n  var layoutId = useLayoutId(props);\n  var visualElement = useConstant(function () {\n    return createVisualElement(isStatic, {\n      visualState: visualState,\n      parent: parent,\n      props: __assign(__assign({}, props), {\n        layoutId: layoutId\n      }),\n      presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\n      blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false\n    });\n  });\n  useIsomorphicLayoutEffect(function () {\n    visualElement.setProps(__assign(__assign(__assign({}, config), props), {\n      layoutId: layoutId\n    }));\n    visualElement.isPresent = isPresent(presenceContext);\n    visualElement.isPresenceRoot = !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\n    /**\r\n     * Fire a render to ensure the latest state is reflected on-screen.\r\n     */\n\n    visualElement.syncRender();\n  });\n  useEffect(function () {\n    var _a;\n    /**\r\n     * In a future refactor we can replace the features-as-components and\r\n     * have this loop through them all firing \"effect\" listeners\r\n     */\n\n\n    (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\n  });\n  /**\r\n   * If this component is a child of AnimateSharedLayout, we need to snapshot the component\r\n   * before it's unmounted. This lives here rather than in features/layout/Measure because\r\n   * as a child component its unmount effect runs after this component has been unmounted.\r\n   */\n\n  useSnapshotOnUnmount(visualElement);\n  return visualElement;\n}\n\nexport { useVisualElement };","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/node_modules/framer-motion/dist/es/motion/utils/use-visual-element.js"],"names":["useContext","useEffect","__assign","MotionConfigContext","useVisualElementContext","PresenceContext","useConstant","isPresent","LayoutGroupContext","useIsomorphicLayoutEffect","useSnapshotOnUnmount","useLayoutId","_a","layoutId","layoutGroupId","undefined","useVisualElement","isStatic","visualState","createVisualElement","props","config","parent","presenceContext","visualElement","presenceId","id","blockInitialAnimation","initial","setProps","isPresenceRoot","syncRender","animationState","animateChanges"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,SAASC,uBAAT,QAAwC,sCAAxC;AACA,SAASC,eAAT,QAAgC,kCAAhC;AACA,SAASC,WAAT,QAA4B,6BAA5B;AACA,SAASC,SAAT,QAA0B,kDAA1B;AACA,SAASC,kBAAT,QAAmC,qCAAnC;AACA,SAASC,yBAAT,QAA0C,sCAA1C;AACA,SAASC,oBAAT,QAAqC,+CAArC;;AAEA,SAASC,WAAT,CAAqBC,EAArB,EAAyB;AACrB,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AACA,MAAIC,aAAa,GAAGd,UAAU,CAACQ,kBAAD,CAA9B;AACA,SAAOM,aAAa,IAAID,QAAQ,KAAKE,SAA9B,GACDD,aAAa,GAAG,GAAhB,GAAsBD,QADrB,GAEDA,QAFN;AAGH;;AACD,SAASG,gBAAT,CAA0BC,QAA1B,EAAoCC,WAApC,EAAiDC,mBAAjD,EAAsEC,KAAtE,EAA6E;AACzE,MAAIC,MAAM,GAAGrB,UAAU,CAACG,mBAAD,CAAvB;AACA,MAAImB,MAAM,GAAGlB,uBAAuB,EAApC;AACA,MAAImB,eAAe,GAAGvB,UAAU,CAACK,eAAD,CAAhC;AACA,MAAIQ,QAAQ,GAAGF,WAAW,CAACS,KAAD,CAA1B;AACA,MAAII,aAAa,GAAGlB,WAAW,CAAC,YAAY;AACxC,WAAOa,mBAAmB,CAACF,QAAD,EAAW;AACjCC,MAAAA,WAAW,EAAEA,WADoB;AAEjCI,MAAAA,MAAM,EAAEA,MAFyB;AAGjCF,MAAAA,KAAK,EAAElB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKkB,KAAL,CAAT,EAAsB;AAAEP,QAAAA,QAAQ,EAAEA;AAAZ,OAAtB,CAHkB;AAIjCY,MAAAA,UAAU,EAAEF,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACG,EAJ7D;AAKjCC,MAAAA,qBAAqB,EAAE,CAACJ,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACK,OAAnF,MAAgG;AALtF,KAAX,CAA1B;AAOH,GAR8B,CAA/B;AASAnB,EAAAA,yBAAyB,CAAC,YAAY;AAClCe,IAAAA,aAAa,CAACK,QAAd,CAAuB3B,QAAQ,CAACA,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKmB,MAAL,CAAT,EAAuBD,KAAvB,CAAT,EAAwC;AAAEP,MAAAA,QAAQ,EAAEA;AAAZ,KAAxC,CAA/B;AACAW,IAAAA,aAAa,CAACjB,SAAd,GAA0BA,SAAS,CAACgB,eAAD,CAAnC;AACAC,IAAAA,aAAa,CAACM,cAAd,GACI,CAACR,MAAD,IAAWA,MAAM,CAACG,UAAP,MAAuBF,eAAe,KAAK,IAApB,IAA4BA,eAAe,KAAK,KAAK,CAArD,GAAyD,KAAK,CAA9D,GAAkEA,eAAe,CAACG,EAAzG,CADf;AAEA;AACR;AACA;;AACQF,IAAAA,aAAa,CAACO,UAAd;AACH,GATwB,CAAzB;AAUA9B,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAIW,EAAJ;AACA;AACR;AACA;AACA;;;AACQ,KAACA,EAAE,GAAGY,aAAa,CAACQ,cAApB,MAAwC,IAAxC,IAAgDpB,EAAE,KAAK,KAAK,CAA5D,GAAgE,KAAK,CAArE,GAAyEA,EAAE,CAACqB,cAAH,EAAzE;AACH,GAPQ,CAAT;AAQA;AACJ;AACA;AACA;AACA;;AACIvB,EAAAA,oBAAoB,CAACc,aAAD,CAApB;AACA,SAAOA,aAAP;AACH;;AAED,SAASR,gBAAT","sourcesContent":["import { useContext, useEffect } from 'react';\r\nimport { __assign } from 'tslib';\r\nimport { MotionConfigContext } from '../../context/MotionConfigContext.js';\r\nimport { useVisualElementContext } from '../../context/MotionContext/index.js';\r\nimport { PresenceContext } from '../../context/PresenceContext.js';\r\nimport { useConstant } from '../../utils/use-constant.js';\r\nimport { isPresent } from '../../components/AnimatePresence/use-presence.js';\r\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.js';\r\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.js';\r\nimport { useSnapshotOnUnmount } from '../features/layout/use-snapshot-on-unmount.js';\r\n\r\nfunction useLayoutId(_a) {\r\n    var layoutId = _a.layoutId;\r\n    var layoutGroupId = useContext(LayoutGroupContext);\r\n    return layoutGroupId && layoutId !== undefined\r\n        ? layoutGroupId + \"-\" + layoutId\r\n        : layoutId;\r\n}\r\nfunction useVisualElement(isStatic, visualState, createVisualElement, props) {\r\n    var config = useContext(MotionConfigContext);\r\n    var parent = useVisualElementContext();\r\n    var presenceContext = useContext(PresenceContext);\r\n    var layoutId = useLayoutId(props);\r\n    var visualElement = useConstant(function () {\r\n        return createVisualElement(isStatic, {\r\n            visualState: visualState,\r\n            parent: parent,\r\n            props: __assign(__assign({}, props), { layoutId: layoutId }),\r\n            presenceId: presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id,\r\n            blockInitialAnimation: (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.initial) === false,\r\n        });\r\n    });\r\n    useIsomorphicLayoutEffect(function () {\r\n        visualElement.setProps(__assign(__assign(__assign({}, config), props), { layoutId: layoutId }));\r\n        visualElement.isPresent = isPresent(presenceContext);\r\n        visualElement.isPresenceRoot =\r\n            !parent || parent.presenceId !== (presenceContext === null || presenceContext === void 0 ? void 0 : presenceContext.id);\r\n        /**\r\n         * Fire a render to ensure the latest state is reflected on-screen.\r\n         */\r\n        visualElement.syncRender();\r\n    });\r\n    useEffect(function () {\r\n        var _a;\r\n        /**\r\n         * In a future refactor we can replace the features-as-components and\r\n         * have this loop through them all firing \"effect\" listeners\r\n         */\r\n        (_a = visualElement.animationState) === null || _a === void 0 ? void 0 : _a.animateChanges();\r\n    });\r\n    /**\r\n     * If this component is a child of AnimateSharedLayout, we need to snapshot the component\r\n     * before it's unmounted. This lives here rather than in features/layout/Measure because\r\n     * as a child component its unmount effect runs after this component has been unmounted.\r\n     */\r\n    useSnapshotOnUnmount(visualElement);\r\n    return visualElement;\r\n}\r\n\r\nexport { useVisualElement };\r\n"]},"metadata":{},"sourceType":"module"}