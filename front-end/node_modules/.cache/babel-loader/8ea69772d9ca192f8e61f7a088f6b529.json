{"ast":null,"code":"import { buildSVGAttrs } from './utils/build-attrs.js';\nimport { createSvgRenderState } from './utils/create-render-state.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { svgVisualElement, renderSVG } from './visual-element.js';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.js';\nvar svgMotionConfig = {\n  createVisualElement: function (_, options) {\n    return svgVisualElement(options, {\n      enableHardwareAcceleration: false\n    });\n  },\n  useVisualState: makeUseVisualState({\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    createRenderState: createSvgRenderState,\n    onMount: function (props, instance, _a) {\n      var renderState = _a.renderState,\n          latestValues = _a.latestValues;\n\n      try {\n        renderState.dimensions = typeof instance.getBBox === \"function\" ? instance.getBBox() : instance.getBoundingClientRect();\n      } catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (isPath(instance)) {\n        renderState.totalPathLength = instance.getTotalLength();\n      }\n\n      buildSVGAttrs(renderState, latestValues, undefined, undefined, {\n        enableHardwareAcceleration: false\n      }, props.transformTemplate);\n      renderSVG(instance, renderState);\n    }\n  })\n};\n\nfunction isPath(element) {\n  return element.tagName === \"path\";\n}\n\nexport { svgMotionConfig };","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/node_modules/framer-motion/dist/es/render/svg/config-motion.js"],"names":["buildSVGAttrs","createSvgRenderState","scrapeMotionValuesFromProps","svgVisualElement","renderSVG","makeUseVisualState","svgMotionConfig","createVisualElement","_","options","enableHardwareAcceleration","useVisualState","createRenderState","onMount","props","instance","_a","renderState","latestValues","dimensions","getBBox","getBoundingClientRect","e","x","y","width","height","isPath","totalPathLength","getTotalLength","undefined","transformTemplate","element","tagName"],"mappings":"AAAA,SAASA,aAAT,QAA8B,wBAA9B;AACA,SAASC,oBAAT,QAAqC,gCAArC;AACA,SAASC,2BAAT,QAA4C,iCAA5C;AACA,SAASC,gBAAT,EAA2BC,SAA3B,QAA4C,qBAA5C;AACA,SAASC,kBAAT,QAAmC,wCAAnC;AAEA,IAAIC,eAAe,GAAG;AAClBC,EAAAA,mBAAmB,EAAE,UAAUC,CAAV,EAAaC,OAAb,EAAsB;AACvC,WAAON,gBAAgB,CAACM,OAAD,EAAU;AAAEC,MAAAA,0BAA0B,EAAE;AAA9B,KAAV,CAAvB;AACH,GAHiB;AAIlBC,EAAAA,cAAc,EAAEN,kBAAkB,CAAC;AAC/BH,IAAAA,2BAA2B,EAAEA,2BADE;AAE/BU,IAAAA,iBAAiB,EAAEX,oBAFY;AAG/BY,IAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiBC,QAAjB,EAA2BC,EAA3B,EAA+B;AACpC,UAAIC,WAAW,GAAGD,EAAE,CAACC,WAArB;AAAA,UAAkCC,YAAY,GAAGF,EAAE,CAACE,YAApD;;AACA,UAAI;AACAD,QAAAA,WAAW,CAACE,UAAZ,GACI,OAAOJ,QAAQ,CAACK,OAAhB,KACI,UADJ,GAEML,QAAQ,CAACK,OAAT,EAFN,GAGML,QAAQ,CAACM,qBAAT,EAJV;AAKH,OAND,CAOA,OAAOC,CAAP,EAAU;AACN;AACAL,QAAAA,WAAW,CAACE,UAAZ,GAAyB;AACrBI,UAAAA,CAAC,EAAE,CADkB;AAErBC,UAAAA,CAAC,EAAE,CAFkB;AAGrBC,UAAAA,KAAK,EAAE,CAHc;AAIrBC,UAAAA,MAAM,EAAE;AAJa,SAAzB;AAMH;;AACD,UAAIC,MAAM,CAACZ,QAAD,CAAV,EAAsB;AAClBE,QAAAA,WAAW,CAACW,eAAZ,GAA8Bb,QAAQ,CAACc,cAAT,EAA9B;AACH;;AACD7B,MAAAA,aAAa,CAACiB,WAAD,EAAcC,YAAd,EAA4BY,SAA5B,EAAuCA,SAAvC,EAAkD;AAAEpB,QAAAA,0BAA0B,EAAE;AAA9B,OAAlD,EAAyFI,KAAK,CAACiB,iBAA/F,CAAb;AACA3B,MAAAA,SAAS,CAACW,QAAD,EAAWE,WAAX,CAAT;AACH;AA1B8B,GAAD;AAJhB,CAAtB;;AAiCA,SAASU,MAAT,CAAgBK,OAAhB,EAAyB;AACrB,SAAOA,OAAO,CAACC,OAAR,KAAoB,MAA3B;AACH;;AAED,SAAS3B,eAAT","sourcesContent":["import { buildSVGAttrs } from './utils/build-attrs.js';\nimport { createSvgRenderState } from './utils/create-render-state.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { svgVisualElement, renderSVG } from './visual-element.js';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.js';\n\nvar svgMotionConfig = {\n    createVisualElement: function (_, options) {\n        return svgVisualElement(options, { enableHardwareAcceleration: false });\n    },\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: function (props, instance, _a) {\n            var renderState = _a.renderState, latestValues = _a.latestValues;\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            if (isPath(instance)) {\n                renderState.totalPathLength = instance.getTotalLength();\n            }\n            buildSVGAttrs(renderState, latestValues, undefined, undefined, { enableHardwareAcceleration: false }, props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\nfunction isPath(element) {\n    return element.tagName === \"path\";\n}\n\nexport { svgMotionConfig };\n"]},"metadata":{},"sourceType":"module"}