{"ast":null,"code":"import PDFDict from \"../objects/PDFDict\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFRef from \"../objects/PDFRef\";\nimport { findLastMatch } from \"../../utils\";\nimport { MissingDAEntryError, MissingTfOperatorError } from \"../errors\"; // Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\n\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\n\nvar PDFAcroField =\n/** @class */\nfunction () {\n  function PDFAcroField(dict, ref) {\n    this.dict = dict;\n    this.ref = ref;\n  }\n\n  PDFAcroField.prototype.T = function () {\n    return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n  };\n\n  PDFAcroField.prototype.Ff = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n    return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n\n  PDFAcroField.prototype.V = function () {\n    var valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n    return this.dict.context.lookup(valueOrRef);\n  };\n\n  PDFAcroField.prototype.Kids = function () {\n    return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n  }; // Parent(): PDFDict | undefined {\n  //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n  // }\n\n\n  PDFAcroField.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n\n  PDFAcroField.prototype.setKids = function (kids) {\n    this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n  };\n\n  PDFAcroField.prototype.getParent = function () {\n    // const parent = this.Parent();\n    // if (!parent) return undefined;\n    // return new PDFAcroField(parent);\n    var parentRef = this.dict.get(PDFName.of('Parent'));\n\n    if (parentRef instanceof PDFRef) {\n      var parent_1 = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n      return new PDFAcroField(parent_1, parentRef);\n    }\n\n    return undefined;\n  };\n\n  PDFAcroField.prototype.setParent = function (parent) {\n    if (!parent) this.dict.delete(PDFName.of('Parent'));else this.dict.set(PDFName.of('Parent'), parent);\n  };\n\n  PDFAcroField.prototype.getFullyQualifiedName = function () {\n    var parent = this.getParent();\n    if (!parent) return this.getPartialName();\n    return parent.getFullyQualifiedName() + \".\" + this.getPartialName();\n  };\n\n  PDFAcroField.prototype.getPartialName = function () {\n    var _a;\n\n    return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();\n  };\n\n  PDFAcroField.prototype.setPartialName = function (partialName) {\n    if (!partialName) this.dict.delete(PDFName.of('T'));else this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n  };\n\n  PDFAcroField.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n\n  PDFAcroField.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n\n  PDFAcroField.prototype.setFontSize = function (fontSize) {\n    var _a;\n\n    var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : '';\n    var da = this.getDefaultAppearance();\n    if (!da) throw new MissingDAEntryError(name);\n    var daMatch = findLastMatch(da, tfRegex);\n    if (!daMatch.match) throw new MissingTfOperatorError(name);\n    var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n    var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n    var fontName = daMatch.match[1];\n    var modifiedDa = daStart + \" /\" + fontName + \" \" + fontSize + \" Tf \" + daEnd;\n    this.setDefaultAppearance(modifiedDa);\n  };\n\n  PDFAcroField.prototype.getFlags = function () {\n    var _a, _b;\n\n    return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;\n  };\n\n  PDFAcroField.prototype.setFlags = function (flags) {\n    this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n  };\n\n  PDFAcroField.prototype.hasFlag = function (flag) {\n    var flags = this.getFlags();\n    return (flags & flag) !== 0;\n  };\n\n  PDFAcroField.prototype.setFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags | flag);\n  };\n\n  PDFAcroField.prototype.clearFlag = function (flag) {\n    var flags = this.getFlags();\n    this.setFlags(flags & ~flag);\n  };\n\n  PDFAcroField.prototype.setFlagTo = function (flag, enable) {\n    if (enable) this.setFlag(flag);else this.clearFlag(flag);\n  };\n\n  PDFAcroField.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.dict.get(name);\n    });\n    return attribute;\n  };\n\n  PDFAcroField.prototype.ascend = function (visitor) {\n    visitor(this);\n    var parent = this.getParent();\n    if (parent) parent.ascend(visitor);\n  };\n\n  return PDFAcroField;\n}();\n\nexport default PDFAcroField;","map":{"version":3,"sources":["../../../src/core/acroform/PDFAcroField.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import PDFDict from \"../objects/PDFDict\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFRef from \"../objects/PDFRef\";\nimport { findLastMatch } from \"../../utils\";\nimport { MissingDAEntryError, MissingTfOperatorError } from \"../errors\";\n// Examples:\n//   `/Helv 12 Tf` -> ['Helv', '12']\n//   `/HeBo 8.00 Tf` -> ['HeBo', '8.00']\n//   `/HeBo Tf` -> ['HeBo', undefined]\nvar tfRegex = /\\/([^\\0\\t\\n\\f\\r\\ ]+)[\\0\\t\\n\\f\\r\\ ]*(\\d*\\.\\d+|\\d+)?[\\0\\t\\n\\f\\r\\ ]+Tf/;\nvar PDFAcroField = /** @class */ (function () {\n    function PDFAcroField(dict, ref) {\n        this.dict = dict;\n        this.ref = ref;\n    }\n    PDFAcroField.prototype.T = function () {\n        return this.dict.lookupMaybe(PDFName.of('T'), PDFString, PDFHexString);\n    };\n    PDFAcroField.prototype.Ff = function () {\n        var numberOrRef = this.getInheritableAttribute(PDFName.of('Ff'));\n        return this.dict.context.lookupMaybe(numberOrRef, PDFNumber);\n    };\n    PDFAcroField.prototype.V = function () {\n        var valueOrRef = this.getInheritableAttribute(PDFName.of('V'));\n        return this.dict.context.lookup(valueOrRef);\n    };\n    PDFAcroField.prototype.Kids = function () {\n        return this.dict.lookupMaybe(PDFName.of('Kids'), PDFArray);\n    };\n    // Parent(): PDFDict | undefined {\n    //   return this.dict.lookupMaybe(PDFName.of('Parent'), PDFDict);\n    // }\n    PDFAcroField.prototype.DA = function () {\n        var da = this.dict.lookup(PDFName.of('DA'));\n        if (da instanceof PDFString || da instanceof PDFHexString)\n            return da;\n        return undefined;\n    };\n    PDFAcroField.prototype.setKids = function (kids) {\n        this.dict.set(PDFName.of('Kids'), this.dict.context.obj(kids));\n    };\n    PDFAcroField.prototype.getParent = function () {\n        // const parent = this.Parent();\n        // if (!parent) return undefined;\n        // return new PDFAcroField(parent);\n        var parentRef = this.dict.get(PDFName.of('Parent'));\n        if (parentRef instanceof PDFRef) {\n            var parent_1 = this.dict.lookup(PDFName.of('Parent'), PDFDict);\n            return new PDFAcroField(parent_1, parentRef);\n        }\n        return undefined;\n    };\n    PDFAcroField.prototype.setParent = function (parent) {\n        if (!parent)\n            this.dict.delete(PDFName.of('Parent'));\n        else\n            this.dict.set(PDFName.of('Parent'), parent);\n    };\n    PDFAcroField.prototype.getFullyQualifiedName = function () {\n        var parent = this.getParent();\n        if (!parent)\n            return this.getPartialName();\n        return parent.getFullyQualifiedName() + \".\" + this.getPartialName();\n    };\n    PDFAcroField.prototype.getPartialName = function () {\n        var _a;\n        return (_a = this.T()) === null || _a === void 0 ? void 0 : _a.decodeText();\n    };\n    PDFAcroField.prototype.setPartialName = function (partialName) {\n        if (!partialName)\n            this.dict.delete(PDFName.of('T'));\n        else\n            this.dict.set(PDFName.of('T'), PDFHexString.fromText(partialName));\n    };\n    PDFAcroField.prototype.setDefaultAppearance = function (appearance) {\n        this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n    };\n    PDFAcroField.prototype.getDefaultAppearance = function () {\n        var DA = this.DA();\n        if (DA instanceof PDFHexString) {\n            return DA.decodeText();\n        }\n        return DA === null || DA === void 0 ? void 0 : DA.asString();\n    };\n    PDFAcroField.prototype.setFontSize = function (fontSize) {\n        var _a;\n        var name = (_a = this.getFullyQualifiedName()) !== null && _a !== void 0 ? _a : '';\n        var da = this.getDefaultAppearance();\n        if (!da)\n            throw new MissingDAEntryError(name);\n        var daMatch = findLastMatch(da, tfRegex);\n        if (!daMatch.match)\n            throw new MissingTfOperatorError(name);\n        var daStart = da.slice(0, daMatch.pos - daMatch.match[0].length);\n        var daEnd = daMatch.pos <= da.length ? da.slice(daMatch.pos) : '';\n        var fontName = daMatch.match[1];\n        var modifiedDa = daStart + \" /\" + fontName + \" \" + fontSize + \" Tf \" + daEnd;\n        this.setDefaultAppearance(modifiedDa);\n    };\n    PDFAcroField.prototype.getFlags = function () {\n        var _a, _b;\n        return (_b = (_a = this.Ff()) === null || _a === void 0 ? void 0 : _a.asNumber()) !== null && _b !== void 0 ? _b : 0;\n    };\n    PDFAcroField.prototype.setFlags = function (flags) {\n        this.dict.set(PDFName.of('Ff'), PDFNumber.of(flags));\n    };\n    PDFAcroField.prototype.hasFlag = function (flag) {\n        var flags = this.getFlags();\n        return (flags & flag) !== 0;\n    };\n    PDFAcroField.prototype.setFlag = function (flag) {\n        var flags = this.getFlags();\n        this.setFlags(flags | flag);\n    };\n    PDFAcroField.prototype.clearFlag = function (flag) {\n        var flags = this.getFlags();\n        this.setFlags(flags & ~flag);\n    };\n    PDFAcroField.prototype.setFlagTo = function (flag, enable) {\n        if (enable)\n            this.setFlag(flag);\n        else\n            this.clearFlag(flag);\n    };\n    PDFAcroField.prototype.getInheritableAttribute = function (name) {\n        var attribute;\n        this.ascend(function (node) {\n            if (!attribute)\n                attribute = node.dict.get(name);\n        });\n        return attribute;\n    };\n    PDFAcroField.prototype.ascend = function (visitor) {\n        visitor(this);\n        var parent = this.getParent();\n        if (parent)\n            parent.ascend(visitor);\n    };\n    return PDFAcroField;\n}());\nexport default PDFAcroField;\n//# sourceMappingURL=PDFAcroField.js.map"]},"metadata":{},"sourceType":"module"}