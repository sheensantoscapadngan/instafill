{"ast":null,"code":"import CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer } from \"../../utils\";\n\nvar PDFTrailer =\n/** @class */\nfunction () {\n  function PDFTrailer(lastXRefOffset) {\n    this.lastXRefOffset = String(lastXRefOffset);\n  }\n\n  PDFTrailer.prototype.toString = function () {\n    return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\n  };\n\n  PDFTrailer.prototype.sizeInBytes = function () {\n    return 16 + this.lastXRefOffset.length;\n  };\n\n  PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.s;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.a;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.t;\n    buffer[offset++] = CharCodes.x;\n    buffer[offset++] = CharCodes.r;\n    buffer[offset++] = CharCodes.e;\n    buffer[offset++] = CharCodes.f;\n    buffer[offset++] = CharCodes.Newline;\n    offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\n    buffer[offset++] = CharCodes.Newline;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.Percent;\n    buffer[offset++] = CharCodes.E;\n    buffer[offset++] = CharCodes.O;\n    buffer[offset++] = CharCodes.F;\n    return offset - initialOffset;\n  };\n\n  PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\n    return new PDFTrailer(offset);\n  };\n\n  return PDFTrailer;\n}();\n\nexport default PDFTrailer;","map":{"version":3,"sources":["../../../src/core/document/PDFTrailer.ts"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAgB,qBAAhB;AACA,SAAS,oBAAT,QAA+B,aAA/B;;AAEA,IAAA,UAAA;AAAA;AAAA,YAAA;AAME,WAAA,UAAA,CAAoB,cAApB,EAA0C;AACxC,SAAK,cAAL,GAAsB,MAAM,CAAC,cAAD,CAA5B;AACD;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,WAAO,gBAAc,KAAK,cAAnB,GAAiC,SAAxC;AACD,GAFD;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAK,cAAL,CAAoB,MAAhC;AACD,GAFD;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAkC,MAAlC,EAAgD;AAC9C,QAAM,aAAa,GAAG,MAAtB;AAEA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,OAA7B;AAEA,IAAA,MAAM,IAAI,oBAAoB,CAAC,KAAK,cAAN,EAAsB,MAAtB,EAA8B,MAA9B,CAA9B;AAEA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,OAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,OAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,OAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,CAA7B;AAEA,WAAO,MAAM,GAAG,aAAhB;AACD,GAxBD;;AAjBO,EAAA,UAAA,CAAA,4BAAA,GAA+B,UAAC,MAAD,EAAe;AACnD,WAAA,IAAI,UAAJ,CAAe,MAAf,CAAA;AAAsB,GADjB;;AA0CT,SAAA,UAAA;AAAC,CA3CD,EAAA;;AA6CA,eAAe,UAAf","sourceRoot":"","sourcesContent":["import CharCodes from \"../syntax/CharCodes\";\r\nimport { copyStringIntoBuffer } from \"../../utils\";\r\nvar PDFTrailer = /** @class */ (function () {\r\n    function PDFTrailer(lastXRefOffset) {\r\n        this.lastXRefOffset = String(lastXRefOffset);\r\n    }\r\n    PDFTrailer.prototype.toString = function () {\r\n        return \"startxref\\n\" + this.lastXRefOffset + \"\\n%%EOF\";\r\n    };\r\n    PDFTrailer.prototype.sizeInBytes = function () {\r\n        return 16 + this.lastXRefOffset.length;\r\n    };\r\n    PDFTrailer.prototype.copyBytesInto = function (buffer, offset) {\r\n        var initialOffset = offset;\r\n        buffer[offset++] = CharCodes.s;\r\n        buffer[offset++] = CharCodes.t;\r\n        buffer[offset++] = CharCodes.a;\r\n        buffer[offset++] = CharCodes.r;\r\n        buffer[offset++] = CharCodes.t;\r\n        buffer[offset++] = CharCodes.x;\r\n        buffer[offset++] = CharCodes.r;\r\n        buffer[offset++] = CharCodes.e;\r\n        buffer[offset++] = CharCodes.f;\r\n        buffer[offset++] = CharCodes.Newline;\r\n        offset += copyStringIntoBuffer(this.lastXRefOffset, buffer, offset);\r\n        buffer[offset++] = CharCodes.Newline;\r\n        buffer[offset++] = CharCodes.Percent;\r\n        buffer[offset++] = CharCodes.Percent;\r\n        buffer[offset++] = CharCodes.E;\r\n        buffer[offset++] = CharCodes.O;\r\n        buffer[offset++] = CharCodes.F;\r\n        return offset - initialOffset;\r\n    };\r\n    PDFTrailer.forLastCrossRefSectionOffset = function (offset) {\r\n        return new PDFTrailer(offset);\r\n    };\r\n    return PDFTrailer;\r\n}());\r\nexport default PDFTrailer;\r\n//# sourceMappingURL=PDFTrailer.js.map"]},"metadata":{},"sourceType":"module"}