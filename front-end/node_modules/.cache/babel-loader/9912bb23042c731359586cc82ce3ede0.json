{"ast":null,"code":"import { useCombineMotionValues } from './use-combine-values.js';\n/**\r\n * Combine multiple motion values into a new one using a string template literal.\r\n *\r\n * ```jsx\r\n * import {\r\n *   motion,\r\n *   useSpring,\r\n *   useMotionValue,\r\n *   useMotionTemplate\r\n * } from \"framer-motion\"\r\n *\r\n * function Component() {\r\n *   const shadowX = useSpring(0)\r\n *   const shadowY = useMotionValue(0)\r\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\r\n *\r\n *   return <motion.div style={{ filter: shadow }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\n\nfunction useMotionTemplate(fragments) {\n  var values = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    values[_i - 1] = arguments[_i];\n  }\n  /**\r\n   * Create a function that will build a string from the latest motion values.\r\n   */\n\n\n  var numFragments = fragments.length;\n\n  function buildValue() {\n    var output = \"\";\n\n    for (var i = 0; i < numFragments; i++) {\n      output += fragments[i];\n      var value = values[i];\n      if (value) output += values[i].get();\n    }\n\n    return output;\n  }\n\n  return useCombineMotionValues(values, buildValue);\n}\n\nexport { useMotionTemplate };","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/node_modules/framer-motion/dist/es/value/use-motion-template.js"],"names":["useCombineMotionValues","useMotionTemplate","fragments","values","_i","arguments","length","numFragments","buildValue","output","i","value","get"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,yBAAvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,iBAAT,CAA2BC,SAA3B,EAAsC;AAClC,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,IAAAA,MAAM,CAACC,EAAE,GAAG,CAAN,CAAN,GAAiBC,SAAS,CAACD,EAAD,CAA1B;AACH;AACD;AACJ;AACA;;;AACI,MAAIG,YAAY,GAAGL,SAAS,CAACI,MAA7B;;AACA,WAASE,UAAT,GAAsB;AAClB,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAApB,EAAkCG,CAAC,EAAnC,EAAuC;AACnCD,MAAAA,MAAM,IAAIP,SAAS,CAACQ,CAAD,CAAnB;AACA,UAAIC,KAAK,GAAGR,MAAM,CAACO,CAAD,CAAlB;AACA,UAAIC,KAAJ,EACIF,MAAM,IAAIN,MAAM,CAACO,CAAD,CAAN,CAAUE,GAAV,EAAV;AACP;;AACD,WAAOH,MAAP;AACH;;AACD,SAAOT,sBAAsB,CAACG,MAAD,EAASK,UAAT,CAA7B;AACH;;AAED,SAASP,iBAAT","sourcesContent":["import { useCombineMotionValues } from './use-combine-values.js';\r\n\r\n/**\r\n * Combine multiple motion values into a new one using a string template literal.\r\n *\r\n * ```jsx\r\n * import {\r\n *   motion,\r\n *   useSpring,\r\n *   useMotionValue,\r\n *   useMotionTemplate\r\n * } from \"framer-motion\"\r\n *\r\n * function Component() {\r\n *   const shadowX = useSpring(0)\r\n *   const shadowY = useMotionValue(0)\r\n *   const shadow = useMotionTemplate`drop-shadow(${shadowX}px ${shadowY}px 20px rgba(0,0,0,0.3))`\r\n *\r\n *   return <motion.div style={{ filter: shadow }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useMotionTemplate(fragments) {\r\n    var values = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        values[_i - 1] = arguments[_i];\r\n    }\r\n    /**\r\n     * Create a function that will build a string from the latest motion values.\r\n     */\r\n    var numFragments = fragments.length;\r\n    function buildValue() {\r\n        var output = \"\";\r\n        for (var i = 0; i < numFragments; i++) {\r\n            output += fragments[i];\r\n            var value = values[i];\r\n            if (value)\r\n                output += values[i].get();\r\n        }\r\n        return output;\r\n    }\r\n    return useCombineMotionValues(values, buildValue);\r\n}\r\n\r\nexport { useMotionTemplate };\r\n"]},"metadata":{},"sourceType":"module"}