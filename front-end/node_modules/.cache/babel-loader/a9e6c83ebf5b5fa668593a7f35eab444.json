{"ast":null,"code":"import { asNumber, asPDFName, asPDFNumber } from \"./objects\";\nimport { degreesToRadians } from \"./rotations\";\nimport { PDFOperator, PDFOperatorNames as Ops } from \"../core\";\n/* ==================== Clipping Path Operators ==================== */\n\nexport var clip = function () {\n  return PDFOperator.of(Ops.ClipNonZero);\n};\nexport var clipEvenOdd = function () {\n  return PDFOperator.of(Ops.ClipEvenOdd);\n};\n/* ==================== Graphics State Operators ==================== */\n\nvar cos = Math.cos,\n    sin = Math.sin,\n    tan = Math.tan;\nexport var concatTransformationMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.ConcatTransformationMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var translate = function (xPos, yPos) {\n  return concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexport var scale = function (xPos, yPos) {\n  return concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexport var rotateRadians = function (angle) {\n  return concatTransformationMatrix(cos(asNumber(angle)), sin(asNumber(angle)), -sin(asNumber(angle)), cos(asNumber(angle)), 0, 0);\n};\nexport var rotateDegrees = function (angle) {\n  return rotateRadians(degreesToRadians(asNumber(angle)));\n};\nexport var skewRadians = function (xSkewAngle, ySkewAngle) {\n  return concatTransformationMatrix(1, tan(asNumber(xSkewAngle)), tan(asNumber(ySkewAngle)), 1, 0, 0);\n};\nexport var skewDegrees = function (xSkewAngle, ySkewAngle) {\n  return skewRadians(degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)));\n};\nexport var setDashPattern = function (dashArray, dashPhase) {\n  return PDFOperator.of(Ops.SetLineDashPattern, [\"[\" + dashArray.map(asPDFNumber).join(' ') + \"]\", asPDFNumber(dashPhase)]);\n};\nexport var restoreDashPattern = function () {\n  return setDashPattern([], 0);\n};\nexport var LineCapStyle;\n\n(function (LineCapStyle) {\n  LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n  LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n  LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle || (LineCapStyle = {}));\n\nexport var setLineCap = function (style) {\n  return PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n};\nexport var LineJoinStyle;\n\n(function (LineJoinStyle) {\n  LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n  LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n  LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle || (LineJoinStyle = {}));\n\nexport var setLineJoin = function (style) {\n  return PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n};\nexport var setGraphicsState = function (state) {\n  return PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n};\nexport var pushGraphicsState = function () {\n  return PDFOperator.of(Ops.PushGraphicsState);\n};\nexport var popGraphicsState = function () {\n  return PDFOperator.of(Ops.PopGraphicsState);\n};\nexport var setLineWidth = function (width) {\n  return PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\n\nexport var appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n  return PDFOperator.of(Ops.AppendBezierCurve, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2), asPDFNumber(x3), asPDFNumber(y3)]);\n};\nexport var appendQuadraticCurve = function (x1, y1, x2, y2) {\n  return PDFOperator.of(Ops.CurveToReplicateInitialPoint, [asPDFNumber(x1), asPDFNumber(y1), asPDFNumber(x2), asPDFNumber(y2)]);\n};\nexport var closePath = function () {\n  return PDFOperator.of(Ops.ClosePath);\n};\nexport var moveTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\nexport var lineTo = function (xPos, yPos) {\n  return PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\n\nexport var rectangle = function (xPos, yPos, width, height) {\n  return PDFOperator.of(Ops.AppendRectangle, [asPDFNumber(xPos), asPDFNumber(yPos), asPDFNumber(width), asPDFNumber(height)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\n\nexport var square = function (xPos, yPos, size) {\n  return rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\n\nexport var stroke = function () {\n  return PDFOperator.of(Ops.StrokePath);\n};\nexport var fill = function () {\n  return PDFOperator.of(Ops.FillNonZero);\n};\nexport var fillAndStroke = function () {\n  return PDFOperator.of(Ops.FillNonZeroAndStroke);\n};\nexport var endPath = function () {\n  return PDFOperator.of(Ops.EndPath);\n};\n/* ==================== Text Positioning Operators ==================== */\n\nexport var nextLine = function () {\n  return PDFOperator.of(Ops.NextLine);\n};\nexport var moveText = function (x, y) {\n  return PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\n\nexport var showText = function (text) {\n  return PDFOperator.of(Ops.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\n\nexport var beginText = function () {\n  return PDFOperator.of(Ops.BeginText);\n};\nexport var endText = function () {\n  return PDFOperator.of(Ops.EndText);\n};\nexport var setFontAndSize = function (name, size) {\n  return PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]);\n};\nexport var setCharacterSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n};\nexport var setWordSpacing = function (spacing) {\n  return PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\n\nexport var setCharacterSqueeze = function (squeeze) {\n  return PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n};\nexport var setLineHeight = function (lineHeight) {\n  return PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n};\nexport var setTextRise = function (rise) {\n  return PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n};\nexport var TextRenderingMode;\n\n(function (TextRenderingMode) {\n  TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n  TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n  TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n  TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n  TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n  TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\n\nexport var setTextRenderingMode = function (mode) {\n  return PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n};\nexport var setTextMatrix = function (a, b, c, d, e, f) {\n  return PDFOperator.of(Ops.SetTextMatrix, [asPDFNumber(a), asPDFNumber(b), asPDFNumber(c), asPDFNumber(d), asPDFNumber(e), asPDFNumber(f)]);\n};\nexport var rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return setTextMatrix(cos(asNumber(rotationAngle)), sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)), -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)), cos(asNumber(rotationAngle)), x, y);\n};\nexport var rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n  return rotateAndSkewTextRadiansAndTranslate(degreesToRadians(asNumber(rotationAngle)), degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\n\nexport var drawObject = function (name) {\n  return PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\n\nexport var setFillingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setStrokingGrayscaleColor = function (gray) {\n  return PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setFillingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.NonStrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setStrokingRgbColor = function (red, green, blue) {\n  return PDFOperator.of(Ops.StrokingColorRgb, [asPDFNumber(red), asPDFNumber(green), asPDFNumber(blue)]);\n};\nexport var setFillingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.NonStrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\nexport var setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n  return PDFOperator.of(Ops.StrokingColorCmyk, [asPDFNumber(cyan), asPDFNumber(magenta), asPDFNumber(yellow), asPDFNumber(key)]);\n};\n/* ==================== Marked Content Operators ==================== */\n\nexport var beginMarkedContent = function (tag) {\n  return PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n};\nexport var endMarkedContent = function () {\n  return PDFOperator.of(Ops.EndMarkedContent);\n};","map":{"version":3,"sources":["../../src/api/operators.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { asNumber, asPDFName, asPDFNumber } from \"./objects\";\nimport { degreesToRadians } from \"./rotations\";\nimport { PDFOperator, PDFOperatorNames as Ops, } from \"../core\";\n/* ==================== Clipping Path Operators ==================== */\nexport var clip = function () { return PDFOperator.of(Ops.ClipNonZero); };\nexport var clipEvenOdd = function () { return PDFOperator.of(Ops.ClipEvenOdd); };\n/* ==================== Graphics State Operators ==================== */\nvar cos = Math.cos, sin = Math.sin, tan = Math.tan;\nexport var concatTransformationMatrix = function (a, b, c, d, e, f) {\n    return PDFOperator.of(Ops.ConcatTransformationMatrix, [\n        asPDFNumber(a),\n        asPDFNumber(b),\n        asPDFNumber(c),\n        asPDFNumber(d),\n        asPDFNumber(e),\n        asPDFNumber(f),\n    ]);\n};\nexport var translate = function (xPos, yPos) {\n    return concatTransformationMatrix(1, 0, 0, 1, xPos, yPos);\n};\nexport var scale = function (xPos, yPos) {\n    return concatTransformationMatrix(xPos, 0, 0, yPos, 0, 0);\n};\nexport var rotateRadians = function (angle) {\n    return concatTransformationMatrix(cos(asNumber(angle)), sin(asNumber(angle)), -sin(asNumber(angle)), cos(asNumber(angle)), 0, 0);\n};\nexport var rotateDegrees = function (angle) {\n    return rotateRadians(degreesToRadians(asNumber(angle)));\n};\nexport var skewRadians = function (xSkewAngle, ySkewAngle) {\n    return concatTransformationMatrix(1, tan(asNumber(xSkewAngle)), tan(asNumber(ySkewAngle)), 1, 0, 0);\n};\nexport var skewDegrees = function (xSkewAngle, ySkewAngle) {\n    return skewRadians(degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)));\n};\nexport var setDashPattern = function (dashArray, dashPhase) {\n    return PDFOperator.of(Ops.SetLineDashPattern, [\n        \"[\" + dashArray.map(asPDFNumber).join(' ') + \"]\",\n        asPDFNumber(dashPhase),\n    ]);\n};\nexport var restoreDashPattern = function () { return setDashPattern([], 0); };\nexport var LineCapStyle;\n(function (LineCapStyle) {\n    LineCapStyle[LineCapStyle[\"Butt\"] = 0] = \"Butt\";\n    LineCapStyle[LineCapStyle[\"Round\"] = 1] = \"Round\";\n    LineCapStyle[LineCapStyle[\"Projecting\"] = 2] = \"Projecting\";\n})(LineCapStyle || (LineCapStyle = {}));\nexport var setLineCap = function (style) {\n    return PDFOperator.of(Ops.SetLineCapStyle, [asPDFNumber(style)]);\n};\nexport var LineJoinStyle;\n(function (LineJoinStyle) {\n    LineJoinStyle[LineJoinStyle[\"Miter\"] = 0] = \"Miter\";\n    LineJoinStyle[LineJoinStyle[\"Round\"] = 1] = \"Round\";\n    LineJoinStyle[LineJoinStyle[\"Bevel\"] = 2] = \"Bevel\";\n})(LineJoinStyle || (LineJoinStyle = {}));\nexport var setLineJoin = function (style) {\n    return PDFOperator.of(Ops.SetLineJoinStyle, [asPDFNumber(style)]);\n};\nexport var setGraphicsState = function (state) {\n    return PDFOperator.of(Ops.SetGraphicsStateParams, [asPDFName(state)]);\n};\nexport var pushGraphicsState = function () { return PDFOperator.of(Ops.PushGraphicsState); };\nexport var popGraphicsState = function () { return PDFOperator.of(Ops.PopGraphicsState); };\nexport var setLineWidth = function (width) {\n    return PDFOperator.of(Ops.SetLineWidth, [asPDFNumber(width)]);\n};\n/* ==================== Path Construction Operators ==================== */\nexport var appendBezierCurve = function (x1, y1, x2, y2, x3, y3) {\n    return PDFOperator.of(Ops.AppendBezierCurve, [\n        asPDFNumber(x1),\n        asPDFNumber(y1),\n        asPDFNumber(x2),\n        asPDFNumber(y2),\n        asPDFNumber(x3),\n        asPDFNumber(y3),\n    ]);\n};\nexport var appendQuadraticCurve = function (x1, y1, x2, y2) {\n    return PDFOperator.of(Ops.CurveToReplicateInitialPoint, [\n        asPDFNumber(x1),\n        asPDFNumber(y1),\n        asPDFNumber(x2),\n        asPDFNumber(y2),\n    ]);\n};\nexport var closePath = function () { return PDFOperator.of(Ops.ClosePath); };\nexport var moveTo = function (xPos, yPos) {\n    return PDFOperator.of(Ops.MoveTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\nexport var lineTo = function (xPos, yPos) {\n    return PDFOperator.of(Ops.LineTo, [asPDFNumber(xPos), asPDFNumber(yPos)]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the rectangle\n * @param yPos y coordinate for the lower left corner of the rectangle\n * @param width width of the rectangle\n * @param height height of the rectangle\n */\nexport var rectangle = function (xPos, yPos, width, height) {\n    return PDFOperator.of(Ops.AppendRectangle, [\n        asPDFNumber(xPos),\n        asPDFNumber(yPos),\n        asPDFNumber(width),\n        asPDFNumber(height),\n    ]);\n};\n/**\n * @param xPos x coordinate for the lower left corner of the square\n * @param yPos y coordinate for the lower left corner of the square\n * @param size width and height of the square\n */\nexport var square = function (xPos, yPos, size) {\n    return rectangle(xPos, yPos, size, size);\n};\n/* ==================== Path Painting Operators ==================== */\nexport var stroke = function () { return PDFOperator.of(Ops.StrokePath); };\nexport var fill = function () { return PDFOperator.of(Ops.FillNonZero); };\nexport var fillAndStroke = function () { return PDFOperator.of(Ops.FillNonZeroAndStroke); };\nexport var endPath = function () { return PDFOperator.of(Ops.EndPath); };\n/* ==================== Text Positioning Operators ==================== */\nexport var nextLine = function () { return PDFOperator.of(Ops.NextLine); };\nexport var moveText = function (x, y) {\n    return PDFOperator.of(Ops.MoveText, [asPDFNumber(x), asPDFNumber(y)]);\n};\n/* ==================== Text Showing Operators ==================== */\nexport var showText = function (text) {\n    return PDFOperator.of(Ops.ShowText, [text]);\n};\n/* ==================== Text State Operators ==================== */\nexport var beginText = function () { return PDFOperator.of(Ops.BeginText); };\nexport var endText = function () { return PDFOperator.of(Ops.EndText); };\nexport var setFontAndSize = function (name, size) { return PDFOperator.of(Ops.SetFontAndSize, [asPDFName(name), asPDFNumber(size)]); };\nexport var setCharacterSpacing = function (spacing) {\n    return PDFOperator.of(Ops.SetCharacterSpacing, [asPDFNumber(spacing)]);\n};\nexport var setWordSpacing = function (spacing) {\n    return PDFOperator.of(Ops.SetWordSpacing, [asPDFNumber(spacing)]);\n};\n/** @param squeeze horizontal character spacing */\nexport var setCharacterSqueeze = function (squeeze) {\n    return PDFOperator.of(Ops.SetTextHorizontalScaling, [asPDFNumber(squeeze)]);\n};\nexport var setLineHeight = function (lineHeight) {\n    return PDFOperator.of(Ops.SetTextLineHeight, [asPDFNumber(lineHeight)]);\n};\nexport var setTextRise = function (rise) {\n    return PDFOperator.of(Ops.SetTextRise, [asPDFNumber(rise)]);\n};\nexport var TextRenderingMode;\n(function (TextRenderingMode) {\n    TextRenderingMode[TextRenderingMode[\"Fill\"] = 0] = \"Fill\";\n    TextRenderingMode[TextRenderingMode[\"Outline\"] = 1] = \"Outline\";\n    TextRenderingMode[TextRenderingMode[\"FillAndOutline\"] = 2] = \"FillAndOutline\";\n    TextRenderingMode[TextRenderingMode[\"Invisible\"] = 3] = \"Invisible\";\n    TextRenderingMode[TextRenderingMode[\"FillAndClip\"] = 4] = \"FillAndClip\";\n    TextRenderingMode[TextRenderingMode[\"OutlineAndClip\"] = 5] = \"OutlineAndClip\";\n    TextRenderingMode[TextRenderingMode[\"FillAndOutlineAndClip\"] = 6] = \"FillAndOutlineAndClip\";\n    TextRenderingMode[TextRenderingMode[\"Clip\"] = 7] = \"Clip\";\n})(TextRenderingMode || (TextRenderingMode = {}));\nexport var setTextRenderingMode = function (mode) {\n    return PDFOperator.of(Ops.SetTextRenderingMode, [asPDFNumber(mode)]);\n};\nexport var setTextMatrix = function (a, b, c, d, e, f) {\n    return PDFOperator.of(Ops.SetTextMatrix, [\n        asPDFNumber(a),\n        asPDFNumber(b),\n        asPDFNumber(c),\n        asPDFNumber(d),\n        asPDFNumber(e),\n        asPDFNumber(f),\n    ]);\n};\nexport var rotateAndSkewTextRadiansAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n    return setTextMatrix(cos(asNumber(rotationAngle)), sin(asNumber(rotationAngle)) + tan(asNumber(xSkewAngle)), -sin(asNumber(rotationAngle)) + tan(asNumber(ySkewAngle)), cos(asNumber(rotationAngle)), x, y);\n};\nexport var rotateAndSkewTextDegreesAndTranslate = function (rotationAngle, xSkewAngle, ySkewAngle, x, y) {\n    return rotateAndSkewTextRadiansAndTranslate(degreesToRadians(asNumber(rotationAngle)), degreesToRadians(asNumber(xSkewAngle)), degreesToRadians(asNumber(ySkewAngle)), x, y);\n};\n/* ==================== XObject Operator ==================== */\nexport var drawObject = function (name) {\n    return PDFOperator.of(Ops.DrawObject, [asPDFName(name)]);\n};\n/* ==================== Color Operators ==================== */\nexport var setFillingGrayscaleColor = function (gray) {\n    return PDFOperator.of(Ops.NonStrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setStrokingGrayscaleColor = function (gray) {\n    return PDFOperator.of(Ops.StrokingColorGray, [asPDFNumber(gray)]);\n};\nexport var setFillingRgbColor = function (red, green, blue) {\n    return PDFOperator.of(Ops.NonStrokingColorRgb, [\n        asPDFNumber(red),\n        asPDFNumber(green),\n        asPDFNumber(blue),\n    ]);\n};\nexport var setStrokingRgbColor = function (red, green, blue) {\n    return PDFOperator.of(Ops.StrokingColorRgb, [\n        asPDFNumber(red),\n        asPDFNumber(green),\n        asPDFNumber(blue),\n    ]);\n};\nexport var setFillingCmykColor = function (cyan, magenta, yellow, key) {\n    return PDFOperator.of(Ops.NonStrokingColorCmyk, [\n        asPDFNumber(cyan),\n        asPDFNumber(magenta),\n        asPDFNumber(yellow),\n        asPDFNumber(key),\n    ]);\n};\nexport var setStrokingCmykColor = function (cyan, magenta, yellow, key) {\n    return PDFOperator.of(Ops.StrokingColorCmyk, [\n        asPDFNumber(cyan),\n        asPDFNumber(magenta),\n        asPDFNumber(yellow),\n        asPDFNumber(key),\n    ]);\n};\n/* ==================== Marked Content Operators ==================== */\nexport var beginMarkedContent = function (tag) {\n    return PDFOperator.of(Ops.BeginMarkedContent, [asPDFName(tag)]);\n};\nexport var endMarkedContent = function () { return PDFOperator.of(Ops.EndMarkedContent); };\n//# sourceMappingURL=operators.js.map"]},"metadata":{},"sourceType":"module"}