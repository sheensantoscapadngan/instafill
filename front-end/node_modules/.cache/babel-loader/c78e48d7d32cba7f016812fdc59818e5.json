{"ast":null,"code":"import React from 'react';\nimport './Dropzone.css';\nimport { useDropzone, Dropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faUpload);\n/*const getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 5px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  color: black;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n\r\n  margin-top: 4%;\r\n  margin-left: 8%;\r\n  margin-bottom: 4%\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n`;\r\n\r\n\r\nfunction Dropzone(props) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.pdf'});\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<Dropzone />\r\nexport default Dropzone;\r\n*/\n\nclass Drpp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.handleOnDrop = (files, rejectedFiles);\n  }\n\n}","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/src/components/common/dropzone/Dropzone.jsx"],"names":["React","useDropzone","Dropzone","styled","FontAwesomeIcon","library","faUpload","add","Drpp","Component","handleOnDrop","files","rejectedFiles"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,gBAApC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACAD,OAAO,CAACE,GAAR,CAAYD,QAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAME,IAAN,SAAmBC,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BC,YAD2B,IACXC,KAAK,EAAEC,aADI;AAAA;;AAAA","sourcesContent":["import React from 'react';\r\nimport './Dropzone.css'\r\nimport {useDropzone, Dropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faUpload)\r\n\r\n/*const getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 5px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  color: black;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n\r\n  margin-top: 4%;\r\n  margin-left: 8%;\r\n  margin-bottom: 4%\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: 1000px;\r\n`;\r\n\r\n\r\nfunction Dropzone(props) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.pdf'});\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<Dropzone />\r\nexport default Dropzone;\r\n*/\r\n\r\nclass Drpp extends Component {\r\n  handleOnDrop = (files, rejectedFiles)\r\n}"]},"metadata":{},"sourceType":"module"}