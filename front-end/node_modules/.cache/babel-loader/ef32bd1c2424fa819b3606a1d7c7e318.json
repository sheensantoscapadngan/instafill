{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport BorderStyle from \"./BorderStyle\";\nimport PDFAnnotation from \"./PDFAnnotation\";\nimport AppearanceCharacteristics from \"./AppearanceCharacteristics\";\n\nvar PDFWidgetAnnotation =\n/** @class */\nfunction (_super) {\n  __extends(PDFWidgetAnnotation, _super);\n\n  function PDFWidgetAnnotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PDFWidgetAnnotation.prototype.MK = function () {\n    var MK = this.dict.lookup(PDFName.of('MK'));\n    if (MK instanceof PDFDict) return MK;\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.BS = function () {\n    var BS = this.dict.lookup(PDFName.of('BS'));\n    if (BS instanceof PDFDict) return BS;\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.DA = function () {\n    var da = this.dict.lookup(PDFName.of('DA'));\n    if (da instanceof PDFString || da instanceof PDFHexString) return da;\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.P = function () {\n    var P = this.dict.get(PDFName.of('P'));\n    if (P instanceof PDFRef) return P;\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.setDefaultAppearance = function (appearance) {\n    this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n  };\n\n  PDFWidgetAnnotation.prototype.getDefaultAppearance = function () {\n    var DA = this.DA();\n\n    if (DA instanceof PDFHexString) {\n      return DA.decodeText();\n    }\n\n    return DA === null || DA === void 0 ? void 0 : DA.asString();\n  };\n\n  PDFWidgetAnnotation.prototype.getAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.getOrCreateAppearanceCharacteristics = function () {\n    var MK = this.MK();\n    if (MK) return AppearanceCharacteristics.fromDict(MK);\n    var ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('MK'), ac.dict);\n    return ac;\n  };\n\n  PDFWidgetAnnotation.prototype.getBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.prototype.getOrCreateBorderStyle = function () {\n    var BS = this.BS();\n    if (BS) return BorderStyle.fromDict(BS);\n    var bs = BorderStyle.fromDict(this.dict.context.obj({}));\n    this.dict.set(PDFName.of('BS'), bs.dict);\n    return bs;\n  };\n\n  PDFWidgetAnnotation.prototype.getOnValue = function () {\n    var _a;\n\n    var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;\n\n    if (normal instanceof PDFDict) {\n      var keys = normal.keys();\n\n      for (var idx = 0, len = keys.length; idx < len; idx++) {\n        var key = keys[idx];\n        if (key !== PDFName.of('Off')) return key;\n      }\n    }\n\n    return undefined;\n  };\n\n  PDFWidgetAnnotation.fromDict = function (dict) {\n    return new PDFWidgetAnnotation(dict);\n  };\n\n  PDFWidgetAnnotation.create = function (context, parent) {\n    var dict = context.obj({\n      Type: 'Annot',\n      Subtype: 'Widget',\n      Rect: [0, 0, 0, 0],\n      Parent: parent\n    });\n    return new PDFWidgetAnnotation(dict);\n  };\n\n  return PDFWidgetAnnotation;\n}(PDFAnnotation);\n\nexport default PDFWidgetAnnotation;","map":{"version":3,"sources":["../../../src/core/annotation/PDFWidgetAnnotation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFRef from \"../objects/PDFRef\";\nimport PDFString from \"../objects/PDFString\";\nimport PDFHexString from \"../objects/PDFHexString\";\nimport BorderStyle from \"./BorderStyle\";\nimport PDFAnnotation from \"./PDFAnnotation\";\nimport AppearanceCharacteristics from \"./AppearanceCharacteristics\";\nvar PDFWidgetAnnotation = /** @class */ (function (_super) {\n    __extends(PDFWidgetAnnotation, _super);\n    function PDFWidgetAnnotation() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PDFWidgetAnnotation.prototype.MK = function () {\n        var MK = this.dict.lookup(PDFName.of('MK'));\n        if (MK instanceof PDFDict)\n            return MK;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.BS = function () {\n        var BS = this.dict.lookup(PDFName.of('BS'));\n        if (BS instanceof PDFDict)\n            return BS;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.DA = function () {\n        var da = this.dict.lookup(PDFName.of('DA'));\n        if (da instanceof PDFString || da instanceof PDFHexString)\n            return da;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.P = function () {\n        var P = this.dict.get(PDFName.of('P'));\n        if (P instanceof PDFRef)\n            return P;\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.setDefaultAppearance = function (appearance) {\n        this.dict.set(PDFName.of('DA'), PDFString.of(appearance));\n    };\n    PDFWidgetAnnotation.prototype.getDefaultAppearance = function () {\n        var DA = this.DA();\n        if (DA instanceof PDFHexString) {\n            return DA.decodeText();\n        }\n        return DA === null || DA === void 0 ? void 0 : DA.asString();\n    };\n    PDFWidgetAnnotation.prototype.getAppearanceCharacteristics = function () {\n        var MK = this.MK();\n        if (MK)\n            return AppearanceCharacteristics.fromDict(MK);\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.getOrCreateAppearanceCharacteristics = function () {\n        var MK = this.MK();\n        if (MK)\n            return AppearanceCharacteristics.fromDict(MK);\n        var ac = AppearanceCharacteristics.fromDict(this.dict.context.obj({}));\n        this.dict.set(PDFName.of('MK'), ac.dict);\n        return ac;\n    };\n    PDFWidgetAnnotation.prototype.getBorderStyle = function () {\n        var BS = this.BS();\n        if (BS)\n            return BorderStyle.fromDict(BS);\n        return undefined;\n    };\n    PDFWidgetAnnotation.prototype.getOrCreateBorderStyle = function () {\n        var BS = this.BS();\n        if (BS)\n            return BorderStyle.fromDict(BS);\n        var bs = BorderStyle.fromDict(this.dict.context.obj({}));\n        this.dict.set(PDFName.of('BS'), bs.dict);\n        return bs;\n    };\n    PDFWidgetAnnotation.prototype.getOnValue = function () {\n        var _a;\n        var normal = (_a = this.getAppearances()) === null || _a === void 0 ? void 0 : _a.normal;\n        if (normal instanceof PDFDict) {\n            var keys = normal.keys();\n            for (var idx = 0, len = keys.length; idx < len; idx++) {\n                var key = keys[idx];\n                if (key !== PDFName.of('Off'))\n                    return key;\n            }\n        }\n        return undefined;\n    };\n    PDFWidgetAnnotation.fromDict = function (dict) {\n        return new PDFWidgetAnnotation(dict);\n    };\n    PDFWidgetAnnotation.create = function (context, parent) {\n        var dict = context.obj({\n            Type: 'Annot',\n            Subtype: 'Widget',\n            Rect: [0, 0, 0, 0],\n            Parent: parent,\n        });\n        return new PDFWidgetAnnotation(dict);\n    };\n    return PDFWidgetAnnotation;\n}(PDFAnnotation));\nexport default PDFWidgetAnnotation;\n//# sourceMappingURL=PDFWidgetAnnotation.js.map"]},"metadata":{},"sourceType":"module"}