{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROJECTS\\\\instafill_local\\\\instafill\\\\front-end\\\\src\\\\components\\\\common\\\\dropzone\\\\Dropzone.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback } from 'react';\nimport './Dropzone.css';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport * as pdflib from '../../../pdflib/process_pdf.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faUpload);\n\nconst getColor = props => {\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }*/\n  return '#00abeb';\n};\n\nconst Container = styled.div`\n\n  border-color: ${props => getColor(props)};\n\n`;\n_c = Container;\n\nfunction Dropzone(props) {\n  _s();\n\n  const onDrop = useCallback(acceptedFiles => {\n    let formData = new FormData();\n    formData.append('pdf', acceptedFiles[0]);\n    formData.append('master', acceptedFiles[1]);\n    console.log(\"ACCEPTED FILES 0 IS:\", acceptedFiles[0].readFile()); //pdflib.modifyPdf()\n\n    axios({\n      url: '/process',\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      data: formData\n    }).then(res => {});\n  }, []);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: '.pdf, .txt',\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Container, { ...getRootProps({\n        isDragActive,\n        isDragAccept,\n        isDragReject\n      }),\n      className: \"inner-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"upload\",\n        size: \"3x\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"DROP FILES HERE OR \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"browse\",\n          children: \"BROWSE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag and drop files in this area for quick upload to the cloud or use file explorer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropzone, \"01C6TFJdtA8T2mvZ6q1X61tfCkI=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = Dropzone;\n\n/*#__PURE__*/\n_jsxDEV(Dropzone, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 92,\n  columnNumber: 1\n}, this);\n\nexport default Dropzone;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Dropzone\");","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/src/components/common/dropzone/Dropzone.jsx"],"names":["React","useCallback","useDropzone","styled","axios","FontAwesomeIcon","library","faUpload","pdflib","add","getColor","props","Container","div","Dropzone","onDrop","acceptedFiles","formData","FormData","append","console","log","readFile","url","method","headers","data","then","res","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","accept"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\r\nimport './Dropzone.css'\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport * as pdflib from '../../../pdflib/process_pdf.js'; \r\n\r\nlibrary.add(faUpload)\r\n\r\nconst getColor = (props) => {\r\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }*/\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n  border-color: ${props => getColor(props)};\r\n\r\n`;\r\n\r\n\r\nfunction Dropzone(props) {\r\n\r\n  const onDrop = useCallback(acceptedFiles =>{\r\n    let formData = new FormData()\r\n    formData.append('pdf',acceptedFiles[0])\r\n    formData.append('master',acceptedFiles[1])\r\n    \r\n    console.log(\"ACCEPTED FILES 0 IS:\",acceptedFiles[0].readFile())\r\n    //pdflib.modifyPdf()\r\n\r\n    axios({\r\n      url: '/process',\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formData\r\n    }).then((res)=>{\r\n      \r\n    })\r\n\r\n  }, [])\r\n  \r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.pdf, .txt',onDrop});\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})} className=\"inner-container\">\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<Dropzone />\r\nexport default Dropzone;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}