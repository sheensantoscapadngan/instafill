{"ast":null,"code":"// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([['A', 7], ['a', 7], ['C', 6], ['c', 6], ['H', 1], ['h', 1], ['L', 2], ['l', 2], ['M', 2], ['m', 2], ['Q', 4], ['q', 4], ['S', 4], ['s', 4], ['T', 2], ['t', 2], ['V', 1], ['v', 1], ['Z', 0], ['z', 0]]);\n\nvar parse = function (path) {\n  var cmd;\n  var ret = [];\n  var args = [];\n  var curArg = '';\n  var foundDecimal = false;\n  var params = 0;\n\n  for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n    var c = path_1[_i];\n\n    if (parameters.has(c)) {\n      params = parameters.get(c);\n\n      if (cmd) {\n        // save existing command\n        if (curArg.length > 0) {\n          args[args.length] = +curArg;\n        }\n\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [];\n        curArg = '';\n        foundDecimal = false;\n      }\n\n      cmd = c;\n    } else if ([' ', ','].includes(c) || c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e' || c === '.' && foundDecimal) {\n      if (curArg.length === 0) {\n        continue;\n      }\n\n      if (args.length === params) {\n        // handle reused commands\n        ret[ret.length] = {\n          cmd: cmd,\n          args: args\n        };\n        args = [+curArg]; // handle assumed commands\n\n        if (cmd === 'M') {\n          cmd = 'L';\n        }\n\n        if (cmd === 'm') {\n          cmd = 'l';\n        }\n      } else {\n        args[args.length] = +curArg;\n      }\n\n      foundDecimal = c === '.'; // fix for negative numbers or repeated decimals with no delimeter between commands\n\n      curArg = ['-', '.'].includes(c) ? c : '';\n    } else {\n      curArg += c;\n\n      if (c === '.') {\n        foundDecimal = true;\n      }\n    }\n  } // add the last command\n\n\n  if (curArg.length > 0) {\n    if (args.length === params) {\n      // handle reused commands\n      ret[ret.length] = {\n        cmd: cmd,\n        args: args\n      };\n      args = [+curArg]; // handle assumed commands\n\n      if (cmd === 'M') {\n        cmd = 'L';\n      }\n\n      if (cmd === 'm') {\n        cmd = 'l';\n      }\n    } else {\n      args[args.length] = +curArg;\n    }\n  }\n\n  ret[ret.length] = {\n    cmd: cmd,\n    args: args\n  };\n  return ret;\n};\n\nvar apply = function (commands) {\n  // current point, control point, and subpath starting point\n  cx = cy = px = py = sx = sy = 0; // run the commands\n\n  var cmds = [];\n\n  for (var i = 0; i < commands.length; i++) {\n    var c = commands[i];\n\n    if (c.cmd && typeof runners[c.cmd] === 'function') {\n      var cmd = runners[c.cmd](c.args);\n\n      if (Array.isArray(cmd)) {\n        cmds = cmds.concat(cmd);\n      } else {\n        cmds.push(cmd);\n      }\n    }\n  }\n\n  return cmds;\n};\n\nvar runners = {\n  M: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  m: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    sx = cx;\n    sy = cy;\n    return moveTo(cx, cy);\n  },\n  C: function (a) {\n    cx = a[4];\n    cy = a[5];\n    px = a[2];\n    py = a[3];\n    return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n  },\n  c: function (a) {\n    var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n    px = cx + a[2];\n    py = cy + a[3];\n    cx += a[4];\n    cy += a[5];\n    return cmd;\n  },\n  S: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return cmd;\n  },\n  s: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    }\n\n    var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  Q: function (a) {\n    px = a[0];\n    py = a[1];\n    cx = a[2];\n    cy = a[3];\n    return appendQuadraticCurve(a[0], a[1], cx, cy);\n  },\n  q: function (a) {\n    var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n    px = cx + a[0];\n    py = cy + a[1];\n    cx += a[2];\n    cy += a[3];\n    return cmd;\n  },\n  T: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n\n    var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n    px = cx - (px - cx);\n    py = cy - (py - cy);\n    cx = a[0];\n    cy = a[1];\n    return cmd;\n  },\n  t: function (a) {\n    if (px === null || py === null) {\n      px = cx;\n      py = cy;\n    } else {\n      px = cx - (px - cx);\n      py = cy - (py - cy);\n    }\n\n    var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n    cx += a[0];\n    cy += a[1];\n    return cmd;\n  },\n  A: function (a) {\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  a: function (a) {\n    a[5] += cx;\n    a[6] += cy;\n    var cmds = solveArc(cx, cy, a);\n    cx = a[5];\n    cy = a[6];\n    return cmds;\n  },\n  L: function (a) {\n    cx = a[0];\n    cy = a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  l: function (a) {\n    cx += a[0];\n    cy += a[1];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  H: function (a) {\n    cx = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  h: function (a) {\n    cx += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  V: function (a) {\n    cy = a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  v: function (a) {\n    cy += a[0];\n    px = py = null;\n    return lineTo(cx, cy);\n  },\n  Z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  },\n  z: function () {\n    var cmd = closePath();\n    cx = sx;\n    cy = sy;\n    return cmd;\n  }\n};\n\nvar solveArc = function (x, y, coords) {\n  var rx = coords[0],\n      ry = coords[1],\n      rot = coords[2],\n      large = coords[3],\n      sweep = coords[4],\n      ex = coords[5],\n      ey = coords[6];\n  var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n  var cmds = [];\n\n  for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n    var seg = segs_1[_i];\n    var bez = segmentToBezier.apply(void 0, seg);\n    cmds.push(appendBezierCurve.apply(void 0, bez));\n  }\n\n  return cmds;\n}; // from Inkscape svgtopdf, thanks!\n\n\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n  var th = rotateX * (Math.PI / 180);\n  var sinTh = Math.sin(th);\n  var cosTh = Math.cos(th);\n  rx = Math.abs(rx);\n  ry = Math.abs(ry);\n  px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n  py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n  var pl = px * px / (rx * rx) + py * py / (ry * ry);\n\n  if (pl > 1) {\n    pl = Math.sqrt(pl);\n    rx *= pl;\n    ry *= pl;\n  }\n\n  var a00 = cosTh / rx;\n  var a01 = sinTh / rx;\n  var a10 = -sinTh / ry;\n  var a11 = cosTh / ry;\n  var x0 = a00 * ox + a01 * oy;\n  var y0 = a10 * ox + a11 * oy;\n  var x1 = a00 * x + a01 * y;\n  var y1 = a10 * x + a11 * y;\n  var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n  var sfactorSq = 1 / d - 0.25;\n\n  if (sfactorSq < 0) {\n    sfactorSq = 0;\n  }\n\n  var sfactor = Math.sqrt(sfactorSq);\n\n  if (sweep === large) {\n    sfactor = -sfactor;\n  }\n\n  var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n  var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n  var th0 = Math.atan2(y0 - yc, x0 - xc);\n  var th1 = Math.atan2(y1 - yc, x1 - xc);\n  var thArc = th1 - th0;\n\n  if (thArc < 0 && sweep === 1) {\n    thArc += 2 * Math.PI;\n  } else if (thArc > 0 && sweep === 0) {\n    thArc -= 2 * Math.PI;\n  }\n\n  var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n  var result = [];\n\n  for (var i = 0; i < segments; i++) {\n    var th2 = th0 + i * thArc / segments;\n    var th3 = th0 + (i + 1) * thArc / segments;\n    result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n  }\n\n  return result;\n};\n\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n  var a00 = cosTh * rx;\n  var a01 = -sinTh * ry;\n  var a10 = sinTh * rx;\n  var a11 = cosTh * ry;\n  var thHalf = 0.5 * (th1 - th0);\n  var t = 8 / 3 * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5) / Math.sin(thHalf);\n  var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n  var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n  var x3 = cx1 + Math.cos(th1);\n  var y3 = cy1 + Math.sin(th1);\n  var x2 = x3 + t * Math.sin(th1);\n  var y2 = y3 - t * Math.cos(th1);\n  var result = [a00 * x1 + a01 * y1, a10 * x1 + a11 * y1, a00 * x2 + a01 * y2, a10 * x2 + a11 * y2, a00 * x3 + a01 * y3, a10 * x3 + a11 * y3];\n  return result;\n};\n\nexport var svgPathToOperators = function (path) {\n  return apply(parse(path));\n};","map":{"version":3,"sources":["../../src/api/svgPath.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["// Originated from pdfkit Copyright (c) 2014 Devon Govett\n// https://github.com/foliojs/pdfkit/blob/1e62e6ffe24b378eb890df507a47610f4c4a7b24/lib/path.js\n// MIT LICENSE\n// Updated for pdf-lib & TypeScript by Jeremy Messenger\nimport { appendBezierCurve, appendQuadraticCurve, closePath, lineTo, moveTo, } from \"./operators\";\nvar cx = 0;\nvar cy = 0;\nvar px = 0;\nvar py = 0;\nvar sx = 0;\nvar sy = 0;\nvar parameters = new Map([\n    ['A', 7],\n    ['a', 7],\n    ['C', 6],\n    ['c', 6],\n    ['H', 1],\n    ['h', 1],\n    ['L', 2],\n    ['l', 2],\n    ['M', 2],\n    ['m', 2],\n    ['Q', 4],\n    ['q', 4],\n    ['S', 4],\n    ['s', 4],\n    ['T', 2],\n    ['t', 2],\n    ['V', 1],\n    ['v', 1],\n    ['Z', 0],\n    ['z', 0],\n]);\nvar parse = function (path) {\n    var cmd;\n    var ret = [];\n    var args = [];\n    var curArg = '';\n    var foundDecimal = false;\n    var params = 0;\n    for (var _i = 0, path_1 = path; _i < path_1.length; _i++) {\n        var c = path_1[_i];\n        if (parameters.has(c)) {\n            params = parameters.get(c);\n            if (cmd) {\n                // save existing command\n                if (curArg.length > 0) {\n                    args[args.length] = +curArg;\n                }\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [];\n                curArg = '';\n                foundDecimal = false;\n            }\n            cmd = c;\n        }\n        else if ([' ', ','].includes(c) ||\n            (c === '-' && curArg.length > 0 && curArg[curArg.length - 1] !== 'e') ||\n            (c === '.' && foundDecimal)) {\n            if (curArg.length === 0) {\n                continue;\n            }\n            if (args.length === params) {\n                // handle reused commands\n                ret[ret.length] = { cmd: cmd, args: args };\n                args = [+curArg];\n                // handle assumed commands\n                if (cmd === 'M') {\n                    cmd = 'L';\n                }\n                if (cmd === 'm') {\n                    cmd = 'l';\n                }\n            }\n            else {\n                args[args.length] = +curArg;\n            }\n            foundDecimal = c === '.';\n            // fix for negative numbers or repeated decimals with no delimeter between commands\n            curArg = ['-', '.'].includes(c) ? c : '';\n        }\n        else {\n            curArg += c;\n            if (c === '.') {\n                foundDecimal = true;\n            }\n        }\n    }\n    // add the last command\n    if (curArg.length > 0) {\n        if (args.length === params) {\n            // handle reused commands\n            ret[ret.length] = { cmd: cmd, args: args };\n            args = [+curArg];\n            // handle assumed commands\n            if (cmd === 'M') {\n                cmd = 'L';\n            }\n            if (cmd === 'm') {\n                cmd = 'l';\n            }\n        }\n        else {\n            args[args.length] = +curArg;\n        }\n    }\n    ret[ret.length] = { cmd: cmd, args: args };\n    return ret;\n};\nvar apply = function (commands) {\n    // current point, control point, and subpath starting point\n    cx = cy = px = py = sx = sy = 0;\n    // run the commands\n    var cmds = [];\n    for (var i = 0; i < commands.length; i++) {\n        var c = commands[i];\n        if (c.cmd && typeof runners[c.cmd] === 'function') {\n            var cmd = runners[c.cmd](c.args);\n            if (Array.isArray(cmd)) {\n                cmds = cmds.concat(cmd);\n            }\n            else {\n                cmds.push(cmd);\n            }\n        }\n    }\n    return cmds;\n};\nvar runners = {\n    M: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    m: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        sx = cx;\n        sy = cy;\n        return moveTo(cx, cy);\n    },\n    C: function (a) {\n        cx = a[4];\n        cy = a[5];\n        px = a[2];\n        py = a[3];\n        return appendBezierCurve(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    c: function (a) {\n        var cmd = appendBezierCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy, a[4] + cx, a[5] + cy);\n        px = cx + a[2];\n        py = cy + a[3];\n        cx += a[4];\n        cy += a[5];\n        return cmd;\n    },\n    S: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), a[0], a[1], a[2], a[3]);\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return cmd;\n    },\n    s: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        var cmd = appendBezierCurve(cx - (px - cx), cy - (py - cy), cx + a[0], cy + a[1], cx + a[2], cy + a[3]);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    Q: function (a) {\n        px = a[0];\n        py = a[1];\n        cx = a[2];\n        cy = a[3];\n        return appendQuadraticCurve(a[0], a[1], cx, cy);\n    },\n    q: function (a) {\n        var cmd = appendQuadraticCurve(a[0] + cx, a[1] + cy, a[2] + cx, a[3] + cy);\n        px = cx + a[0];\n        py = cy + a[1];\n        cx += a[2];\n        cy += a[3];\n        return cmd;\n    },\n    T: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, a[0], a[1]);\n        px = cx - (px - cx);\n        py = cy - (py - cy);\n        cx = a[0];\n        cy = a[1];\n        return cmd;\n    },\n    t: function (a) {\n        if (px === null || py === null) {\n            px = cx;\n            py = cy;\n        }\n        else {\n            px = cx - (px - cx);\n            py = cy - (py - cy);\n        }\n        var cmd = appendQuadraticCurve(px, py, cx + a[0], cy + a[1]);\n        cx += a[0];\n        cy += a[1];\n        return cmd;\n    },\n    A: function (a) {\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    a: function (a) {\n        a[5] += cx;\n        a[6] += cy;\n        var cmds = solveArc(cx, cy, a);\n        cx = a[5];\n        cy = a[6];\n        return cmds;\n    },\n    L: function (a) {\n        cx = a[0];\n        cy = a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    l: function (a) {\n        cx += a[0];\n        cy += a[1];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    H: function (a) {\n        cx = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    h: function (a) {\n        cx += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    V: function (a) {\n        cy = a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    v: function (a) {\n        cy += a[0];\n        px = py = null;\n        return lineTo(cx, cy);\n    },\n    Z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n    z: function () {\n        var cmd = closePath();\n        cx = sx;\n        cy = sy;\n        return cmd;\n    },\n};\nvar solveArc = function (x, y, coords) {\n    var rx = coords[0], ry = coords[1], rot = coords[2], large = coords[3], sweep = coords[4], ex = coords[5], ey = coords[6];\n    var segs = arcToSegments(ex, ey, rx, ry, large, sweep, rot, x, y);\n    var cmds = [];\n    for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {\n        var seg = segs_1[_i];\n        var bez = segmentToBezier.apply(void 0, seg);\n        cmds.push(appendBezierCurve.apply(void 0, bez));\n    }\n    return cmds;\n};\n// from Inkscape svgtopdf, thanks!\nvar arcToSegments = function (x, y, rx, ry, large, sweep, rotateX, ox, oy) {\n    var th = rotateX * (Math.PI / 180);\n    var sinTh = Math.sin(th);\n    var cosTh = Math.cos(th);\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    px = cosTh * (ox - x) * 0.5 + sinTh * (oy - y) * 0.5;\n    py = cosTh * (oy - y) * 0.5 - sinTh * (ox - x) * 0.5;\n    var pl = (px * px) / (rx * rx) + (py * py) / (ry * ry);\n    if (pl > 1) {\n        pl = Math.sqrt(pl);\n        rx *= pl;\n        ry *= pl;\n    }\n    var a00 = cosTh / rx;\n    var a01 = sinTh / rx;\n    var a10 = -sinTh / ry;\n    var a11 = cosTh / ry;\n    var x0 = a00 * ox + a01 * oy;\n    var y0 = a10 * ox + a11 * oy;\n    var x1 = a00 * x + a01 * y;\n    var y1 = a10 * x + a11 * y;\n    var d = (x1 - x0) * (x1 - x0) + (y1 - y0) * (y1 - y0);\n    var sfactorSq = 1 / d - 0.25;\n    if (sfactorSq < 0) {\n        sfactorSq = 0;\n    }\n    var sfactor = Math.sqrt(sfactorSq);\n    if (sweep === large) {\n        sfactor = -sfactor;\n    }\n    var xc = 0.5 * (x0 + x1) - sfactor * (y1 - y0);\n    var yc = 0.5 * (y0 + y1) + sfactor * (x1 - x0);\n    var th0 = Math.atan2(y0 - yc, x0 - xc);\n    var th1 = Math.atan2(y1 - yc, x1 - xc);\n    var thArc = th1 - th0;\n    if (thArc < 0 && sweep === 1) {\n        thArc += 2 * Math.PI;\n    }\n    else if (thArc > 0 && sweep === 0) {\n        thArc -= 2 * Math.PI;\n    }\n    var segments = Math.ceil(Math.abs(thArc / (Math.PI * 0.5 + 0.001)));\n    var result = [];\n    for (var i = 0; i < segments; i++) {\n        var th2 = th0 + (i * thArc) / segments;\n        var th3 = th0 + ((i + 1) * thArc) / segments;\n        result[i] = [xc, yc, th2, th3, rx, ry, sinTh, cosTh];\n    }\n    return result;\n};\nvar segmentToBezier = function (cx1, cy1, th0, th1, rx, ry, sinTh, cosTh) {\n    var a00 = cosTh * rx;\n    var a01 = -sinTh * ry;\n    var a10 = sinTh * rx;\n    var a11 = cosTh * ry;\n    var thHalf = 0.5 * (th1 - th0);\n    var t = ((8 / 3) * Math.sin(thHalf * 0.5) * Math.sin(thHalf * 0.5)) /\n        Math.sin(thHalf);\n    var x1 = cx1 + Math.cos(th0) - t * Math.sin(th0);\n    var y1 = cy1 + Math.sin(th0) + t * Math.cos(th0);\n    var x3 = cx1 + Math.cos(th1);\n    var y3 = cy1 + Math.sin(th1);\n    var x2 = x3 + t * Math.sin(th1);\n    var y2 = y3 - t * Math.cos(th1);\n    var result = [\n        a00 * x1 + a01 * y1,\n        a10 * x1 + a11 * y1,\n        a00 * x2 + a01 * y2,\n        a10 * x2 + a11 * y2,\n        a00 * x3 + a01 * y3,\n        a10 * x3 + a11 * y3,\n    ];\n    return result;\n};\nexport var svgPathToOperators = function (path) { return apply(parse(path)); };\n//# sourceMappingURL=svgPath.js.map"]},"metadata":{},"sourceType":"module"}