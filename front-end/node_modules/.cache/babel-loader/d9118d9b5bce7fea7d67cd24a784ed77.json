{"ast":null,"code":"import { degrees, PDFDocument, rgb, StandardFonts } from 'pdf-lib';\n\nfunction downloadPdf(bytes) {\n  var blob = new Blob([bytes], {\n    type: \"application/pdf\"\n  }); // change resultByte to bytes\n\n  var link = document.createElement('a');\n  link.href = window.URL.createObjectURL(blob);\n  link.download = \"edited.pdf\";\n  link.click();\n}\n\nasync function modifyPdf(bytes) {\n  const existingPdfBytes = bytes;\n  const pdfDoc = await PDFDocument.load(existingPdfBytes);\n  const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n  const pages = pdfDoc.getPages();\n  const firstPage = pages[0];\n  const {\n    width,\n    height\n  } = firstPage.getSize();\n  firstPage.drawText('This text was added with JavaScript!', {\n    x: 5,\n    y: height / 2 + 300,\n    size: 50,\n    font: helveticaFont,\n    color: rgb(0.95, 0.1, 0.1),\n    rotate: degrees(-45)\n  });\n  const pdfBytes = await pdfDoc.save();\n}\n\nexport function preprocessPdf(file) {\n  let reader = new FileReader();\n  reader.readAsArrayBuffer(file);\n\n  reader.onload = () => {\n    modifyPdf(reader.result);\n  };\n}","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/src/pdflib/process_pdf.js"],"names":["degrees","PDFDocument","rgb","StandardFonts","downloadPdf","bytes","blob","Blob","type","link","document","createElement","href","window","URL","createObjectURL","download","click","modifyPdf","existingPdfBytes","pdfDoc","load","helveticaFont","embedFont","Helvetica","pages","getPages","firstPage","width","height","getSize","drawText","x","y","size","font","color","rotate","pdfBytes","save","preprocessPdf","file","reader","FileReader","readAsArrayBuffer","onload","result"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,WAAlB,EAA+BC,GAA/B,EAAoCC,aAApC,QAAyD,SAAzD;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACzB,MAAIC,IAAI,GAAC,IAAIC,IAAJ,CAAS,CAACF,KAAD,CAAT,EAAkB;AAACG,IAAAA,IAAI,EAAE;AAAP,GAAlB,CAAT,CADyB,CAC6B;;AAEtD,MAAIC,IAAI,GAACC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAT;AACAF,EAAAA,IAAI,CAACG,IAAL,GAAUC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2BT,IAA3B,CAAV;AACAG,EAAAA,IAAI,CAACO,QAAL,GAAc,YAAd;AACAP,EAAAA,IAAI,CAACQ,KAAL;AACD;;AAED,eAAeC,SAAf,CAAyBb,KAAzB,EAAgC;AAE9B,QAAMc,gBAAgB,GAAGd,KAAzB;AAEA,QAAMe,MAAM,GAAG,MAAMnB,WAAW,CAACoB,IAAZ,CAAiBF,gBAAjB,CAArB;AACA,QAAMG,aAAa,GAAG,MAAMF,MAAM,CAACG,SAAP,CAAiBpB,aAAa,CAACqB,SAA/B,CAA5B;AAEA,QAAMC,KAAK,GAAGL,MAAM,CAACM,QAAP,EAAd;AACA,QAAMC,SAAS,GAAGF,KAAK,CAAC,CAAD,CAAvB;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAoBF,SAAS,CAACG,OAAV,EAA1B;AACAH,EAAAA,SAAS,CAACI,QAAV,CAAmB,sCAAnB,EAA2D;AACzDC,IAAAA,CAAC,EAAE,CADsD;AAEzDC,IAAAA,CAAC,EAAEJ,MAAM,GAAG,CAAT,GAAa,GAFyC;AAGzDK,IAAAA,IAAI,EAAE,EAHmD;AAIzDC,IAAAA,IAAI,EAAEb,aAJmD;AAKzDc,IAAAA,KAAK,EAAElC,GAAG,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,CAL+C;AAMzDmC,IAAAA,MAAM,EAAErC,OAAO,CAAC,CAAC,EAAF;AAN0C,GAA3D;AASA,QAAMsC,QAAQ,GAAG,MAAMlB,MAAM,CAACmB,IAAP,EAAvB;AACD;;AAED,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA4B;AACjC,MAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;AACAD,EAAAA,MAAM,CAACE,iBAAP,CAAyBH,IAAzB;;AAEAC,EAAAA,MAAM,CAACG,MAAP,GAAgB,MAAI;AAClB3B,IAAAA,SAAS,CAACwB,MAAM,CAACI,MAAR,CAAT;AACD,GAFD;AAGD","sourcesContent":["import { degrees, PDFDocument, rgb, StandardFonts } from 'pdf-lib';\r\n\r\nfunction downloadPdf(bytes){\r\n  var blob=new Blob([bytes], {type: \"application/pdf\"});// change resultByte to bytes\r\n\r\n  var link=document.createElement('a');\r\n  link.href=window.URL.createObjectURL(blob);\r\n  link.download=\"edited.pdf\";\r\n  link.click();\r\n}\r\n\r\nasync function modifyPdf(bytes) {\r\n\r\n  const existingPdfBytes = bytes\r\n\r\n  const pdfDoc = await PDFDocument.load(existingPdfBytes)\r\n  const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica)\r\n\r\n  const pages = pdfDoc.getPages()\r\n  const firstPage = pages[0]\r\n  const { width, height } = firstPage.getSize()\r\n  firstPage.drawText('This text was added with JavaScript!', {\r\n    x: 5,\r\n    y: height / 2 + 300,\r\n    size: 50,\r\n    font: helveticaFont,\r\n    color: rgb(0.95, 0.1, 0.1),\r\n    rotate: degrees(-45),\r\n  })\r\n\r\n  const pdfBytes = await pdfDoc.save()\r\n}\r\n \r\nexport function preprocessPdf(file){\r\n  let reader = new FileReader()\r\n  reader.readAsArrayBuffer(file)\r\n\r\n  reader.onload = ()=>{\r\n    modifyPdf(reader.result)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}