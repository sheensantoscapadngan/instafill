{"ast":null,"code":"import { __assign } from \"tslib\";\nimport pako from 'pako';\nimport PDFHeader from \"./document/PDFHeader\";\nimport { UnexpectedObjectTypeError } from \"./errors\";\nimport PDFArray from \"./objects/PDFArray\";\nimport PDFBool from \"./objects/PDFBool\";\nimport PDFDict from \"./objects/PDFDict\";\nimport PDFName from \"./objects/PDFName\";\nimport PDFNull from \"./objects/PDFNull\";\nimport PDFNumber from \"./objects/PDFNumber\";\nimport PDFObject from \"./objects/PDFObject\";\nimport PDFRawStream from \"./objects/PDFRawStream\";\nimport PDFRef from \"./objects/PDFRef\";\nimport PDFOperator from \"./operators/PDFOperator\";\nimport Ops from \"./operators/PDFOperatorNames\";\nimport PDFContentStream from \"./structures/PDFContentStream\";\nimport { typedArrayFor } from \"../utils\";\n\nvar byAscendingObjectNumber = function (_a, _b) {\n  var a = _a[0];\n  var b = _b[0];\n  return a.objectNumber - b.objectNumber;\n};\n\nvar PDFContext =\n/** @class */\nfunction () {\n  function PDFContext() {\n    this.largestObjectNumber = 0;\n    this.header = PDFHeader.forVersion(1, 7);\n    this.trailerInfo = {};\n    this.indirectObjects = new Map();\n  }\n\n  PDFContext.prototype.assign = function (ref, object) {\n    this.indirectObjects.set(ref, object);\n\n    if (ref.objectNumber > this.largestObjectNumber) {\n      this.largestObjectNumber = ref.objectNumber;\n    }\n  };\n\n  PDFContext.prototype.nextRef = function () {\n    this.largestObjectNumber += 1;\n    return PDFRef.of(this.largestObjectNumber);\n  };\n\n  PDFContext.prototype.register = function (object) {\n    var ref = this.nextRef();\n    this.assign(ref, object);\n    return ref;\n  };\n\n  PDFContext.prototype.delete = function (ref) {\n    return this.indirectObjects.delete(ref);\n  };\n\n  PDFContext.prototype.lookupMaybe = function (ref) {\n    var types = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    } // TODO: `preservePDFNull` is for backwards compatibility. Should be\n    // removed in next breaking API change.\n\n\n    var preservePDFNull = types.includes(PDFNull);\n    var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n    if (!result || result === PDFNull && !preservePDFNull) return undefined;\n\n    for (var idx = 0, len = types.length; idx < len; idx++) {\n      var type = types[idx];\n\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n\n    throw new UnexpectedObjectTypeError(types, result);\n  };\n\n  PDFContext.prototype.lookup = function (ref) {\n    var types = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n\n    var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n    if (types.length === 0) return result;\n\n    for (var idx = 0, len = types.length; idx < len; idx++) {\n      var type = types[idx];\n\n      if (type === PDFNull) {\n        if (result === PDFNull) return result;\n      } else {\n        if (result instanceof type) return result;\n      }\n    }\n\n    throw new UnexpectedObjectTypeError(types, result);\n  };\n\n  PDFContext.prototype.getObjectRef = function (pdfObject) {\n    var entries = Array.from(this.indirectObjects.entries());\n\n    for (var idx = 0, len = entries.length; idx < len; idx++) {\n      var _a = entries[idx],\n          ref = _a[0],\n          object = _a[1];\n\n      if (object === pdfObject) {\n        return ref;\n      }\n    }\n\n    return undefined;\n  };\n\n  PDFContext.prototype.enumerateIndirectObjects = function () {\n    return Array.from(this.indirectObjects.entries()).sort(byAscendingObjectNumber);\n  };\n\n  PDFContext.prototype.obj = function (literal) {\n    if (literal instanceof PDFObject) {\n      return literal;\n    } else if (literal === null || literal === undefined) {\n      return PDFNull;\n    } else if (typeof literal === 'string') {\n      return PDFName.of(literal);\n    } else if (typeof literal === 'number') {\n      return PDFNumber.of(literal);\n    } else if (typeof literal === 'boolean') {\n      return literal ? PDFBool.True : PDFBool.False;\n    } else if (Array.isArray(literal)) {\n      var array = PDFArray.withContext(this);\n\n      for (var idx = 0, len = literal.length; idx < len; idx++) {\n        array.push(this.obj(literal[idx]));\n      }\n\n      return array;\n    } else {\n      var dict = PDFDict.withContext(this);\n      var keys = Object.keys(literal);\n\n      for (var idx = 0, len = keys.length; idx < len; idx++) {\n        var key = keys[idx];\n        var value = literal[key];\n        if (value !== undefined) dict.set(PDFName.of(key), this.obj(value));\n      }\n\n      return dict;\n    }\n  };\n\n  PDFContext.prototype.stream = function (contents, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n\n    return PDFRawStream.of(this.obj(dict), typedArrayFor(contents));\n  };\n\n  PDFContext.prototype.flateStream = function (contents, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n\n    return this.stream(pako.deflate(typedArrayFor(contents)), __assign(__assign({}, dict), {\n      Filter: 'FlateDecode'\n    }));\n  };\n\n  PDFContext.prototype.contentStream = function (operators, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n\n    return PDFContentStream.of(this.obj(dict), operators);\n  };\n\n  PDFContext.prototype.formXObject = function (operators, dict) {\n    if (dict === void 0) {\n      dict = {};\n    }\n\n    return this.contentStream(operators, __assign(__assign({\n      BBox: this.obj([0, 0, 0, 0]),\n      Matrix: this.obj([1, 0, 0, 1, 0, 0])\n    }, dict), {\n      Type: 'XObject',\n      Subtype: 'Form'\n    }));\n  };\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n\n\n  PDFContext.prototype.getPushGraphicsStateContentStream = function () {\n    if (this.pushGraphicsStateContentStreamRef) {\n      return this.pushGraphicsStateContentStreamRef;\n    }\n\n    var dict = this.obj({});\n    var op = PDFOperator.of(Ops.PushGraphicsState);\n    var stream = PDFContentStream.of(dict, [op]);\n    this.pushGraphicsStateContentStreamRef = this.register(stream);\n    return this.pushGraphicsStateContentStreamRef;\n  };\n  /*\n   * Reference to PDFContentStream that contains a single PDFOperator: `Q`.\n   * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n   * added to a modified PDF, they start in the default, unchanged graphics\n   * state.\n   */\n\n\n  PDFContext.prototype.getPopGraphicsStateContentStream = function () {\n    if (this.popGraphicsStateContentStreamRef) {\n      return this.popGraphicsStateContentStreamRef;\n    }\n\n    var dict = this.obj({});\n    var op = PDFOperator.of(Ops.PopGraphicsState);\n    var stream = PDFContentStream.of(dict, [op]);\n    this.popGraphicsStateContentStreamRef = this.register(stream);\n    return this.popGraphicsStateContentStreamRef;\n  };\n\n  PDFContext.create = function () {\n    return new PDFContext();\n  };\n\n  return PDFContext;\n}();\n\nexport default PDFContext;","map":{"version":3,"sources":["../../src/core/PDFContext.ts"],"names":[],"mappings":";AAAA,OAAO,IAAP,MAAiB,MAAjB;AAEA,OAAO,SAAP,MAAgB,sBAAhB;AACA,SAAS,yBAAT,QAAoC,UAApC;AACA,OAAO,QAAP,MAAe,oBAAf;AACA,OAAO,OAAP,MAAc,mBAAd;AACA,OAAO,OAAP,MAAc,mBAAd;AAEA,OAAO,OAAP,MAAc,mBAAd;AACA,OAAO,OAAP,MAAc,mBAAd;AACA,OAAO,SAAP,MAAgB,qBAAhB;AACA,OAAO,SAAP,MAAgB,qBAAhB;AACA,OAAO,YAAP,MAAmB,wBAAnB;AACA,OAAO,MAAP,MAAa,kBAAb;AAGA,OAAO,WAAP,MAAkB,yBAAlB;AACA,OAAO,GAAP,MAAU,8BAAV;AACA,OAAO,gBAAP,MAAuB,+BAAvB;AACA,SAAS,aAAT,QAAwB,UAAxB;;AAqBA,IAAM,uBAAuB,GAAG,UAC9B,EAD8B,EAE9B,EAF8B,EAEN;MADvB,CAAC,GAAA,EAAA,CAAA,CAAA,C;MACD,CAAC,GAAA,EAAA,CAAA,CAAA,C;AACC,SAAA,CAAC,CAAC,YAAF,GAAiB,CAAC,CAAC,YAAnB;AAA+B,CAHpC;;AAKA,IAAA,UAAA;AAAA;AAAA,YAAA;AAiBE,WAAA,UAAA,GAAA;AACE,SAAK,mBAAL,GAA2B,CAA3B;AACA,SAAK,MAAL,GAAc,SAAS,CAAC,UAAV,CAAqB,CAArB,EAAwB,CAAxB,CAAd;AACA,SAAK,WAAL,GAAmB,EAAnB;AAEA,SAAK,eAAL,GAAuB,IAAI,GAAJ,EAAvB;AACD;;AAED,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,GAAP,EAAoB,MAApB,EAAqC;AACnC,SAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,EAA8B,MAA9B;;AACA,QAAI,GAAG,CAAC,YAAJ,GAAmB,KAAK,mBAA5B,EAAiD;AAC/C,WAAK,mBAAL,GAA2B,GAAG,CAAC,YAA/B;AACD;AACF,GALD;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,SAAK,mBAAL,IAA4B,CAA5B;AACA,WAAO,MAAM,CAAC,EAAP,CAAU,KAAK,mBAAf,CAAP;AACD,GAHD;;AAKA,EAAA,UAAA,CAAA,SAAA,CAAA,QAAA,GAAA,UAAS,MAAT,EAA0B;AACxB,QAAM,GAAG,GAAG,KAAK,OAAL,EAAZ;AACA,SAAK,MAAL,CAAY,GAAZ,EAAiB,MAAjB;AACA,WAAO,GAAP;AACD,GAJD;;AAMA,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,GAAP,EAAkB;AAChB,WAAO,KAAK,eAAL,CAAqB,MAArB,CAA4B,GAA5B,CAAP;AACD,GAFD;;AAuBA,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,GAAZ,EAA0B;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;KAAF,CACxB;AACA;;;AACA,QAAM,eAAe,GAAG,KAAK,CAAC,QAAN,CAAe,OAAf,CAAxB;AAEA,QAAM,MAAM,GAAG,GAAG,YAAY,MAAf,GAAwB,KAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,CAAxB,GAAwD,GAAvE;AAEA,QAAI,CAAC,MAAD,IAAY,MAAM,KAAK,OAAX,IAAsB,CAAC,eAAvC,EAAyD,OAAO,SAAP;;AAEzD,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,CAAC,MAA9B,EAAsC,GAAG,GAAG,GAA5C,EAAiD,GAAG,EAApD,EAAwD;AACtD,UAAM,IAAI,GAAG,KAAK,CAAC,GAAD,CAAlB;;AACA,UAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI,MAAM,KAAK,OAAf,EAAwB,OAAO,MAAP;AACzB,OAFD,MAEO;AACL,YAAI,MAAM,YAAY,IAAtB,EAA4B,OAAO,MAAP;AAC7B;AACF;;AACD,UAAM,IAAI,yBAAJ,CAA8B,KAA9B,EAAqC,MAArC,CAAN;AACD,GAlBD;;AAqCA,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,GAAP,EAAqB;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACrB,QAAM,MAAM,GAAG,GAAG,YAAY,MAAf,GAAwB,KAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,CAAxB,GAAwD,GAAvE;AAEA,QAAI,KAAK,CAAC,MAAN,KAAiB,CAArB,EAAwB,OAAO,MAAP;;AAExB,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,CAAC,MAA9B,EAAsC,GAAG,GAAG,GAA5C,EAAiD,GAAG,EAApD,EAAwD;AACtD,UAAM,IAAI,GAAG,KAAK,CAAC,GAAD,CAAlB;;AACA,UAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,YAAI,MAAM,KAAK,OAAf,EAAwB,OAAO,MAAP;AACzB,OAFD,MAEO;AACL,YAAI,MAAM,YAAY,IAAtB,EAA4B,OAAO,MAAP;AAC7B;AACF;;AAED,UAAM,IAAI,yBAAJ,CAA8B,KAA9B,EAAqC,MAArC,CAAN;AACD,GAfD;;AAiBA,EAAA,UAAA,CAAA,SAAA,CAAA,YAAA,GAAA,UAAa,SAAb,EAAiC;AAC/B,QAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,KAAK,eAAL,CAAqB,OAArB,EAAX,CAAhB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,OAAO,CAAC,MAAhC,EAAwC,GAAG,GAAG,GAA9C,EAAmD,GAAG,EAAtD,EAA0D;AAClD,UAAA,EAAA,GAAgB,OAAO,CAAC,GAAD,CAAvB;AAAA,UAAC,GAAG,GAAA,EAAA,CAAA,CAAA,CAAJ;AAAA,UAAM,MAAM,GAAA,EAAA,CAAA,CAAA,CAAZ;;AACN,UAAI,MAAM,KAAK,SAAf,EAA0B;AACxB,eAAO,GAAP;AACD;AACF;;AAED,WAAO,SAAP;AACD,GAVD;;AAYA,EAAA,UAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,YAAA;AACE,WAAO,KAAK,CAAC,IAAN,CAAW,KAAK,eAAL,CAAqB,OAArB,EAAX,EAA2C,IAA3C,CACL,uBADK,CAAP;AAGD,GAJD;;AAaA,EAAA,UAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,OAAJ,EAAoB;AAClB,QAAI,OAAO,YAAY,SAAvB,EAAkC;AAChC,aAAO,OAAP;AACD,KAFD,MAEO,IAAI,OAAO,KAAK,IAAZ,IAAoB,OAAO,KAAK,SAApC,EAA+C;AACpD,aAAO,OAAP;AACD,KAFM,MAEA,IAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AACtC,aAAO,OAAO,CAAC,EAAR,CAAW,OAAX,CAAP;AACD,KAFM,MAEA,IAAI,OAAO,OAAP,KAAmB,QAAvB,EAAiC;AACtC,aAAO,SAAS,CAAC,EAAV,CAAa,OAAb,CAAP;AACD,KAFM,MAEA,IAAI,OAAO,OAAP,KAAmB,SAAvB,EAAkC;AACvC,aAAO,OAAO,GAAG,OAAO,CAAC,IAAX,GAAkB,OAAO,CAAC,KAAxC;AACD,KAFM,MAEA,IAAI,KAAK,CAAC,OAAN,CAAc,OAAd,CAAJ,EAA4B;AACjC,UAAM,KAAK,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAd;;AACA,WAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,OAAO,CAAC,MAAhC,EAAwC,GAAG,GAAG,GAA9C,EAAmD,GAAG,EAAtD,EAA0D;AACxD,QAAA,KAAK,CAAC,IAAN,CAAW,KAAK,GAAL,CAAS,OAAO,CAAC,GAAD,CAAhB,CAAX;AACD;;AACD,aAAO,KAAP;AACD,KANM,MAMA;AACL,UAAM,IAAI,GAAG,OAAO,CAAC,WAAR,CAAoB,IAApB,CAAb;AACA,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,OAAZ,CAAb;;AACA,WAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,IAAI,CAAC,MAA7B,EAAqC,GAAG,GAAG,GAA3C,EAAgD,GAAG,EAAnD,EAAuD;AACrD,YAAM,GAAG,GAAG,IAAI,CAAC,GAAD,CAAhB;AACA,YAAM,KAAK,GAAI,OAAyB,CAAC,GAAD,CAAxC;AACA,YAAI,KAAK,KAAK,SAAd,EAAyB,IAAI,CAAC,GAAL,CAAS,OAAO,CAAC,EAAR,CAAW,GAAX,CAAT,EAA0B,KAAK,GAAL,CAAS,KAAT,CAA1B;AAC1B;;AACD,aAAO,IAAP;AACD;AACF,GA3BD;;AA6BA,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UACE,QADF,EAEE,IAFF,EAE0B;AAAxB,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,EAAA;AAAwB;;AAExB,WAAO,YAAY,CAAC,EAAb,CAAgB,KAAK,GAAL,CAAS,IAAT,CAAhB,EAAgC,aAAa,CAAC,QAAD,CAA7C,CAAP;AACD,GALD;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UACE,QADF,EAEE,IAFF,EAE0B;AAAxB,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,EAAA;AAAwB;;AAExB,WAAO,KAAK,MAAL,CAAY,IAAI,CAAC,OAAL,CAAa,aAAa,CAAC,QAAD,CAA1B,CAAZ,EAAiD,QAAA,CAAA,QAAA,CAAA,EAAA,EACnD,IADmD,CAAA,EAC/C;AACP,MAAA,MAAM,EAAE;AADD,KAD+C,CAAjD,CAAP;AAID,GARD;;AAUA,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UACE,SADF,EAEE,IAFF,EAE0B;AAAxB,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,EAAA;AAAwB;;AAExB,WAAO,gBAAgB,CAAC,EAAjB,CAAoB,KAAK,GAAL,CAAS,IAAT,CAApB,EAAoC,SAApC,CAAP;AACD,GALD;;AAOA,EAAA,UAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UACE,SADF,EAEE,IAFF,EAE0B;AAAxB,QAAA,IAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,IAAA,GAAA,EAAA;AAAwB;;AAExB,WAAO,KAAK,aAAL,CAAmB,SAAnB,EAA4B,QAAA,CAAA,QAAA,CAAA;AACjC,MAAA,IAAI,EAAE,KAAK,GAAL,CAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAAT,CAD2B;AAEjC,MAAA,MAAM,EAAE,KAAK,GAAL,CAAS,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,CAAT;AAFyB,KAAA,EAG9B,IAH8B,CAAA,EAG1B;AACP,MAAA,IAAI,EAAE,SADC;AAEP,MAAA,OAAO,EAAE;AAFF,KAH0B,CAA5B,CAAP;AAOD,GAXD;AAaA;;;;;AAKG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,iCAAA,GAAA,YAAA;AACE,QAAI,KAAK,iCAAT,EAA4C;AAC1C,aAAO,KAAK,iCAAZ;AACD;;AACD,QAAM,IAAI,GAAG,KAAK,GAAL,CAAS,EAAT,CAAb;AACA,QAAM,EAAE,GAAG,WAAW,CAAC,EAAZ,CAAe,GAAG,CAAC,iBAAnB,CAAX;AACA,QAAM,MAAM,GAAG,gBAAgB,CAAC,EAAjB,CAAoB,IAApB,EAA0B,CAAC,EAAD,CAA1B,CAAf;AACA,SAAK,iCAAL,GAAyC,KAAK,QAAL,CAAc,MAAd,CAAzC;AACA,WAAO,KAAK,iCAAZ;AACD,GATD;AAWA;;;;;AAKG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,gCAAA,GAAA,YAAA;AACE,QAAI,KAAK,gCAAT,EAA2C;AACzC,aAAO,KAAK,gCAAZ;AACD;;AACD,QAAM,IAAI,GAAG,KAAK,GAAL,CAAS,EAAT,CAAb;AACA,QAAM,EAAE,GAAG,WAAW,CAAC,EAAZ,CAAe,GAAG,CAAC,gBAAnB,CAAX;AACA,QAAM,MAAM,GAAG,gBAAgB,CAAC,EAAjB,CAAoB,IAApB,EAA0B,CAAC,EAAD,CAA1B,CAAf;AACA,SAAK,gCAAL,GAAwC,KAAK,QAAL,CAAc,MAAd,CAAxC;AACA,WAAO,KAAK,gCAAZ;AACD,GATD;;AAzOO,EAAA,UAAA,CAAA,MAAA,GAAS,YAAA;AAAM,WAAA,IAAA,UAAA,EAAA;AAAgB,GAA/B;;AAmPT,SAAA,UAAA;AAAC,CApPD,EAAA;;AAsPA,eAAe,UAAf","sourceRoot":"","sourcesContent":["import { __assign } from \"tslib\";\nimport pako from 'pako';\nimport PDFHeader from \"./document/PDFHeader\";\nimport { UnexpectedObjectTypeError } from \"./errors\";\nimport PDFArray from \"./objects/PDFArray\";\nimport PDFBool from \"./objects/PDFBool\";\nimport PDFDict from \"./objects/PDFDict\";\nimport PDFName from \"./objects/PDFName\";\nimport PDFNull from \"./objects/PDFNull\";\nimport PDFNumber from \"./objects/PDFNumber\";\nimport PDFObject from \"./objects/PDFObject\";\nimport PDFRawStream from \"./objects/PDFRawStream\";\nimport PDFRef from \"./objects/PDFRef\";\nimport PDFOperator from \"./operators/PDFOperator\";\nimport Ops from \"./operators/PDFOperatorNames\";\nimport PDFContentStream from \"./structures/PDFContentStream\";\nimport { typedArrayFor } from \"../utils\";\nvar byAscendingObjectNumber = function (_a, _b) {\n    var a = _a[0];\n    var b = _b[0];\n    return a.objectNumber - b.objectNumber;\n};\nvar PDFContext = /** @class */ (function () {\n    function PDFContext() {\n        this.largestObjectNumber = 0;\n        this.header = PDFHeader.forVersion(1, 7);\n        this.trailerInfo = {};\n        this.indirectObjects = new Map();\n    }\n    PDFContext.prototype.assign = function (ref, object) {\n        this.indirectObjects.set(ref, object);\n        if (ref.objectNumber > this.largestObjectNumber) {\n            this.largestObjectNumber = ref.objectNumber;\n        }\n    };\n    PDFContext.prototype.nextRef = function () {\n        this.largestObjectNumber += 1;\n        return PDFRef.of(this.largestObjectNumber);\n    };\n    PDFContext.prototype.register = function (object) {\n        var ref = this.nextRef();\n        this.assign(ref, object);\n        return ref;\n    };\n    PDFContext.prototype.delete = function (ref) {\n        return this.indirectObjects.delete(ref);\n    };\n    PDFContext.prototype.lookupMaybe = function (ref) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        // TODO: `preservePDFNull` is for backwards compatibility. Should be\n        // removed in next breaking API change.\n        var preservePDFNull = types.includes(PDFNull);\n        var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n        if (!result || (result === PDFNull && !preservePDFNull))\n            return undefined;\n        for (var idx = 0, len = types.length; idx < len; idx++) {\n            var type = types[idx];\n            if (type === PDFNull) {\n                if (result === PDFNull)\n                    return result;\n            }\n            else {\n                if (result instanceof type)\n                    return result;\n            }\n        }\n        throw new UnexpectedObjectTypeError(types, result);\n    };\n    PDFContext.prototype.lookup = function (ref) {\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        var result = ref instanceof PDFRef ? this.indirectObjects.get(ref) : ref;\n        if (types.length === 0)\n            return result;\n        for (var idx = 0, len = types.length; idx < len; idx++) {\n            var type = types[idx];\n            if (type === PDFNull) {\n                if (result === PDFNull)\n                    return result;\n            }\n            else {\n                if (result instanceof type)\n                    return result;\n            }\n        }\n        throw new UnexpectedObjectTypeError(types, result);\n    };\n    PDFContext.prototype.getObjectRef = function (pdfObject) {\n        var entries = Array.from(this.indirectObjects.entries());\n        for (var idx = 0, len = entries.length; idx < len; idx++) {\n            var _a = entries[idx], ref = _a[0], object = _a[1];\n            if (object === pdfObject) {\n                return ref;\n            }\n        }\n        return undefined;\n    };\n    PDFContext.prototype.enumerateIndirectObjects = function () {\n        return Array.from(this.indirectObjects.entries()).sort(byAscendingObjectNumber);\n    };\n    PDFContext.prototype.obj = function (literal) {\n        if (literal instanceof PDFObject) {\n            return literal;\n        }\n        else if (literal === null || literal === undefined) {\n            return PDFNull;\n        }\n        else if (typeof literal === 'string') {\n            return PDFName.of(literal);\n        }\n        else if (typeof literal === 'number') {\n            return PDFNumber.of(literal);\n        }\n        else if (typeof literal === 'boolean') {\n            return literal ? PDFBool.True : PDFBool.False;\n        }\n        else if (Array.isArray(literal)) {\n            var array = PDFArray.withContext(this);\n            for (var idx = 0, len = literal.length; idx < len; idx++) {\n                array.push(this.obj(literal[idx]));\n            }\n            return array;\n        }\n        else {\n            var dict = PDFDict.withContext(this);\n            var keys = Object.keys(literal);\n            for (var idx = 0, len = keys.length; idx < len; idx++) {\n                var key = keys[idx];\n                var value = literal[key];\n                if (value !== undefined)\n                    dict.set(PDFName.of(key), this.obj(value));\n            }\n            return dict;\n        }\n    };\n    PDFContext.prototype.stream = function (contents, dict) {\n        if (dict === void 0) { dict = {}; }\n        return PDFRawStream.of(this.obj(dict), typedArrayFor(contents));\n    };\n    PDFContext.prototype.flateStream = function (contents, dict) {\n        if (dict === void 0) { dict = {}; }\n        return this.stream(pako.deflate(typedArrayFor(contents)), __assign(__assign({}, dict), { Filter: 'FlateDecode' }));\n    };\n    PDFContext.prototype.contentStream = function (operators, dict) {\n        if (dict === void 0) { dict = {}; }\n        return PDFContentStream.of(this.obj(dict), operators);\n    };\n    PDFContext.prototype.formXObject = function (operators, dict) {\n        if (dict === void 0) { dict = {}; }\n        return this.contentStream(operators, __assign(__assign({ BBox: this.obj([0, 0, 0, 0]), Matrix: this.obj([1, 0, 0, 1, 0, 0]) }, dict), { Type: 'XObject', Subtype: 'Form' }));\n    };\n    /*\n     * Reference to PDFContentStream that contains a single PDFOperator: `q`.\n     * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n     * added to a modified PDF, they start in the default, unchanged graphics\n     * state.\n     */\n    PDFContext.prototype.getPushGraphicsStateContentStream = function () {\n        if (this.pushGraphicsStateContentStreamRef) {\n            return this.pushGraphicsStateContentStreamRef;\n        }\n        var dict = this.obj({});\n        var op = PDFOperator.of(Ops.PushGraphicsState);\n        var stream = PDFContentStream.of(dict, [op]);\n        this.pushGraphicsStateContentStreamRef = this.register(stream);\n        return this.pushGraphicsStateContentStreamRef;\n    };\n    /*\n     * Reference to PDFContentStream that contains a single PDFOperator: `Q`.\n     * Used by [[PDFPageLeaf]] instances to ensure that when content streams are\n     * added to a modified PDF, they start in the default, unchanged graphics\n     * state.\n     */\n    PDFContext.prototype.getPopGraphicsStateContentStream = function () {\n        if (this.popGraphicsStateContentStreamRef) {\n            return this.popGraphicsStateContentStreamRef;\n        }\n        var dict = this.obj({});\n        var op = PDFOperator.of(Ops.PopGraphicsState);\n        var stream = PDFContentStream.of(dict, [op]);\n        this.popGraphicsStateContentStreamRef = this.register(stream);\n        return this.popGraphicsStateContentStreamRef;\n    };\n    PDFContext.create = function () { return new PDFContext(); };\n    return PDFContext;\n}());\nexport default PDFContext;\n//# sourceMappingURL=PDFContext.js.map"]},"metadata":{},"sourceType":"module"}