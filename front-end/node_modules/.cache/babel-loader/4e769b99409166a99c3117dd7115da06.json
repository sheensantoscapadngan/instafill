{"ast":null,"code":"import { __read } from 'tslib';\nimport { useConstant } from '../utils/use-constant.js';\nimport { useCombineMotionValues } from './use-combine-values.js';\nimport { transform } from '../utils/transform.js';\n\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\n  var transformer = typeof inputRangeOrTransformer === \"function\" ? inputRangeOrTransformer : transform(inputRangeOrTransformer, outputRange, options);\n  return Array.isArray(input) ? useListTransform(input, transformer) : useListTransform([input], function (_a) {\n    var _b = __read(_a, 1),\n        latest = _b[0];\n\n    return transformer(latest);\n  });\n}\n\nfunction useListTransform(values, transformer) {\n  var latest = useConstant(function () {\n    return [];\n  });\n  return useCombineMotionValues(values, function () {\n    latest.length = 0;\n    var numValues = values.length;\n\n    for (var i = 0; i < numValues; i++) {\n      latest[i] = values[i].get();\n    }\n\n    return transformer(latest);\n  });\n}\n\nexport { useTransform };","map":{"version":3,"sources":["D:/Documents/GitHub/instafill/front-end/node_modules/framer-motion/dist/es/value/use-transform.js"],"names":["__read","useConstant","useCombineMotionValues","transform","useTransform","input","inputRangeOrTransformer","outputRange","options","transformer","Array","isArray","useListTransform","_a","_b","latest","values","length","numValues","i","get"],"mappings":"AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,sBAAT,QAAuC,yBAAvC;AACA,SAASC,SAAT,QAA0B,uBAA1B;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6BC,uBAA7B,EAAsDC,WAAtD,EAAmEC,OAAnE,EAA4E;AACxE,MAAIC,WAAW,GAAG,OAAOH,uBAAP,KAAmC,UAAnC,GACZA,uBADY,GAEZH,SAAS,CAACG,uBAAD,EAA0BC,WAA1B,EAAuCC,OAAvC,CAFf;AAGA,SAAOE,KAAK,CAACC,OAAN,CAAcN,KAAd,IACDO,gBAAgB,CAACP,KAAD,EAAQI,WAAR,CADf,GAEDG,gBAAgB,CAAC,CAACP,KAAD,CAAD,EAAU,UAAUQ,EAAV,EAAc;AACtC,QAAIC,EAAE,GAAGd,MAAM,CAACa,EAAD,EAAK,CAAL,CAAf;AAAA,QAAwBE,MAAM,GAAGD,EAAE,CAAC,CAAD,CAAnC;;AACA,WAAOL,WAAW,CAACM,MAAD,CAAlB;AACH,GAHiB,CAFtB;AAMH;;AACD,SAASH,gBAAT,CAA0BI,MAA1B,EAAkCP,WAAlC,EAA+C;AAC3C,MAAIM,MAAM,GAAGd,WAAW,CAAC,YAAY;AAAE,WAAO,EAAP;AAAY,GAA3B,CAAxB;AACA,SAAOC,sBAAsB,CAACc,MAAD,EAAS,YAAY;AAC9CD,IAAAA,MAAM,CAACE,MAAP,GAAgB,CAAhB;AACA,QAAIC,SAAS,GAAGF,MAAM,CAACC,MAAvB;;AACA,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAApB,EAA+BC,CAAC,EAAhC,EAAoC;AAChCJ,MAAAA,MAAM,CAACI,CAAD,CAAN,GAAYH,MAAM,CAACG,CAAD,CAAN,CAAUC,GAAV,EAAZ;AACH;;AACD,WAAOX,WAAW,CAACM,MAAD,CAAlB;AACH,GAP4B,CAA7B;AAQH;;AAED,SAASX,YAAT","sourcesContent":["import { __read } from 'tslib';\r\nimport { useConstant } from '../utils/use-constant.js';\r\nimport { useCombineMotionValues } from './use-combine-values.js';\r\nimport { transform } from '../utils/transform.js';\r\n\r\nfunction useTransform(input, inputRangeOrTransformer, outputRange, options) {\r\n    var transformer = typeof inputRangeOrTransformer === \"function\"\r\n        ? inputRangeOrTransformer\r\n        : transform(inputRangeOrTransformer, outputRange, options);\r\n    return Array.isArray(input)\r\n        ? useListTransform(input, transformer)\r\n        : useListTransform([input], function (_a) {\r\n            var _b = __read(_a, 1), latest = _b[0];\r\n            return transformer(latest);\r\n        });\r\n}\r\nfunction useListTransform(values, transformer) {\r\n    var latest = useConstant(function () { return []; });\r\n    return useCombineMotionValues(values, function () {\r\n        latest.length = 0;\r\n        var numValues = values.length;\r\n        for (var i = 0; i < numValues; i++) {\r\n            latest[i] = values[i].get();\r\n        }\r\n        return transformer(latest);\r\n    });\r\n}\r\n\r\nexport { useTransform };\r\n"]},"metadata":{},"sourceType":"module"}