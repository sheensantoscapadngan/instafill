{"ast":null,"code":"import { __assign } from 'tslib';\nimport { getDefaultValueType } from '../dom/utils/value-types.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\n\nfunction renderSVG(element, renderState) {\n  htmlConfig.render(element, renderState);\n\n  for (var key in renderState.attrs) {\n    element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n  }\n}\n\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), {\n  getBaseTarget: function (props, key) {\n    return props[key];\n  },\n  readValueFromInstance: function (domElement, key) {\n    var _a;\n\n    if (isTransformProp(key)) {\n      return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n    }\n\n    key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n    return domElement.getAttribute(key);\n  },\n  scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n  build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n    buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n  },\n  render: renderSVG\n}));\nexport { renderSVG, svgVisualElement };","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/node_modules/framer-motion/dist/es/render/svg/visual-element.js"],"names":["__assign","getDefaultValueType","isTransformProp","buildSVGAttrs","visualElement","scrapeMotionValuesFromProps","htmlConfig","camelToDash","camelCaseAttributes","renderSVG","element","renderState","render","key","attrs","setAttribute","has","svgVisualElement","getBaseTarget","props","readValueFromInstance","domElement","_a","default","getAttribute","build","_element","latestValues","projection","layoutState","options","transformTemplate"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,mBAAT,QAAoC,6BAApC;AACA,SAASC,eAAT,QAAgC,4BAAhC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,2BAAT,QAA4C,iCAA5C;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,SAASC,mBAAT,QAAoC,6BAApC;;AAEA,SAASC,SAAT,CAAmBC,OAAnB,EAA4BC,WAA5B,EAAyC;AACrCL,EAAAA,UAAU,CAACM,MAAX,CAAkBF,OAAlB,EAA2BC,WAA3B;;AACA,OAAK,IAAIE,GAAT,IAAgBF,WAAW,CAACG,KAA5B,EAAmC;AAC/BJ,IAAAA,OAAO,CAACK,YAAR,CAAqB,CAACP,mBAAmB,CAACQ,GAApB,CAAwBH,GAAxB,CAAD,GAAgCN,WAAW,CAACM,GAAD,CAA3C,GAAmDA,GAAxE,EAA6EF,WAAW,CAACG,KAAZ,CAAkBD,GAAlB,CAA7E;AACH;AACJ;;AACD,IAAII,gBAAgB,GAAGb,aAAa,CAACJ,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKM,UAAL,CAAT,EAA2B;AAAEY,EAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiBN,GAAjB,EAAsB;AACvG,WAAOM,KAAK,CAACN,GAAD,CAAZ;AACH,GAFmE;AAGpEO,EAAAA,qBAAqB,EAAE,UAAUC,UAAV,EAAsBR,GAAtB,EAA2B;AAC9C,QAAIS,EAAJ;;AACA,QAAIpB,eAAe,CAACW,GAAD,CAAnB,EAA0B;AACtB,aAAO,CAAC,CAACS,EAAE,GAAGrB,mBAAmB,CAACY,GAAD,CAAzB,MAAoC,IAApC,IAA4CS,EAAE,KAAK,KAAK,CAAxD,GAA4D,KAAK,CAAjE,GAAqEA,EAAE,CAACC,OAAzE,KAAqF,CAA5F;AACH;;AACDV,IAAAA,GAAG,GAAG,CAACL,mBAAmB,CAACQ,GAApB,CAAwBH,GAAxB,CAAD,GAAgCN,WAAW,CAACM,GAAD,CAA3C,GAAmDA,GAAzD;AACA,WAAOQ,UAAU,CAACG,YAAX,CAAwBX,GAAxB,CAAP;AACH,GAVmE;AAWpER,EAAAA,2BAA2B,EAAEA,2BAXuC;AAYpEoB,EAAAA,KAAK,EAAE,UAAUC,QAAV,EAAoBf,WAApB,EAAiCgB,YAAjC,EAA+CC,UAA/C,EAA2DC,WAA3D,EAAwEC,OAAxE,EAAiFX,KAAjF,EAAwF;AAC3FhB,IAAAA,aAAa,CAACQ,WAAD,EAAcgB,YAAd,EAA4BC,UAA5B,EAAwCC,WAAxC,EAAqDC,OAArD,EAA8DX,KAAK,CAACY,iBAApE,CAAb;AACH,GAdmE;AAcjEnB,EAAAA,MAAM,EAAEH;AAdyD,CAA3B,CAAT,CAApC;AAgBA,SAASA,SAAT,EAAoBQ,gBAApB","sourcesContent":["import { __assign } from 'tslib';\nimport { getDefaultValueType } from '../dom/utils/value-types.js';\nimport { isTransformProp } from '../html/utils/transform.js';\nimport { buildSVGAttrs } from './utils/build-attrs.js';\nimport { visualElement } from '../index.js';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.js';\nimport { htmlConfig } from '../html/visual-element.js';\nimport { camelToDash } from '../dom/utils/camel-to-dash.js';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.js';\n\nfunction renderSVG(element, renderState) {\n    htmlConfig.render(element, renderState);\n    for (var key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\nvar svgVisualElement = visualElement(__assign(__assign({}, htmlConfig), { getBaseTarget: function (props, key) {\n        return props[key];\n    },\n    readValueFromInstance: function (domElement, key) {\n        var _a;\n        if (isTransformProp(key)) {\n            return ((_a = getDefaultValueType(key)) === null || _a === void 0 ? void 0 : _a.default) || 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return domElement.getAttribute(key);\n    },\n    scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n    build: function (_element, renderState, latestValues, projection, layoutState, options, props) {\n        buildSVGAttrs(renderState, latestValues, projection, layoutState, options, props.transformTemplate);\n    }, render: renderSVG }));\n\nexport { renderSVG, svgVisualElement };\n"]},"metadata":{},"sourceType":"module"}