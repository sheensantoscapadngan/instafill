{"ast":null,"code":"import { Presence } from '../types.js';\n/**\r\n * Default handlers for batching VisualElements\r\n */\n\nvar defaultHandler = {\n  measureLayout: function (child) {\n    return child.updateLayoutMeasurement();\n  },\n  layoutReady: function (child) {\n    return child.notifyLayoutReady();\n  }\n};\n/**\r\n * Create a batcher to process VisualElements\r\n */\n\nfunction createBatcher() {\n  var queue = new Set();\n  return {\n    add: function (child) {\n      return queue.add(child);\n    },\n    flush: function (_a) {\n      var _b = _a === void 0 ? defaultHandler : _a,\n          measureLayout = _b.measureLayout,\n          layoutReady = _b.layoutReady,\n          parent = _b.parent;\n\n      var order = Array.from(queue).sort(function (a, b) {\n        return a.depth - b.depth;\n      });\n\n      var resetAndMeasure = function () {\n        /**\r\n         * Write: Reset any transforms on children elements so we can read their actual layout\r\n         */\n        order.forEach(function (child) {\n          return child.resetTransform();\n        });\n        /**\r\n         * Read: Measure the actual layout\r\n         */\n\n        order.forEach(measureLayout);\n      };\n\n      parent ? parent.withoutTransform(resetAndMeasure) : resetAndMeasure();\n      /**\r\n       * Write: Notify the VisualElements they're ready for further write operations.\r\n       */\n\n      order.forEach(layoutReady);\n      /**\r\n       * After all children have started animating, ensure any Entering components are set to Present.\r\n       * If we add deferred animations (set up all animations and then start them in two loops) this\r\n       * could be moved to the start loop. But it needs to happen after all the animations configs\r\n       * are generated in AnimateSharedLayout as this relies on presence data\r\n       */\n\n      order.forEach(function (child) {\n        if (child.isPresent) child.presence = Presence.Present;\n      });\n      queue.clear();\n    }\n  };\n}\n\nexport { createBatcher };","map":{"version":3,"sources":["D:/programming stuff i dont save on oneDrive/github_repos/instafill/front-end/node_modules/framer-motion/dist/es/components/AnimateSharedLayout/utils/batcher.js"],"names":["Presence","defaultHandler","measureLayout","child","updateLayoutMeasurement","layoutReady","notifyLayoutReady","createBatcher","queue","Set","add","flush","_a","_b","parent","order","Array","from","sort","a","b","depth","resetAndMeasure","forEach","resetTransform","withoutTransform","isPresent","presence","Present","clear"],"mappings":"AAAA,SAASA,QAAT,QAAyB,aAAzB;AAEA;AACA;AACA;;AACA,IAAIC,cAAc,GAAG;AACjBC,EAAAA,aAAa,EAAE,UAAUC,KAAV,EAAiB;AAAE,WAAOA,KAAK,CAACC,uBAAN,EAAP;AAAyC,GAD1D;AAEjBC,EAAAA,WAAW,EAAE,UAAUF,KAAV,EAAiB;AAAE,WAAOA,KAAK,CAACG,iBAAN,EAAP;AAAmC;AAFlD,CAArB;AAIA;AACA;AACA;;AACA,SAASC,aAAT,GAAyB;AACrB,MAAIC,KAAK,GAAG,IAAIC,GAAJ,EAAZ;AACA,SAAO;AACHC,IAAAA,GAAG,EAAE,UAAUP,KAAV,EAAiB;AAAE,aAAOK,KAAK,CAACE,GAAN,CAAUP,KAAV,CAAP;AAA0B,KAD/C;AAEHQ,IAAAA,KAAK,EAAE,UAAUC,EAAV,EAAc;AACjB,UAAIC,EAAE,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgBX,cAAhB,GAAiCW,EAA1C;AAAA,UAA8CV,aAAa,GAAGW,EAAE,CAACX,aAAjE;AAAA,UAAgFG,WAAW,GAAGQ,EAAE,CAACR,WAAjG;AAAA,UAA8GS,MAAM,GAAGD,EAAE,CAACC,MAA1H;;AACA,UAAIC,KAAK,GAAGC,KAAK,CAACC,IAAN,CAAWT,KAAX,EAAkBU,IAAlB,CAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAAE,eAAOD,CAAC,CAACE,KAAF,GAAUD,CAAC,CAACC,KAAnB;AAA2B,OAApE,CAAZ;;AACA,UAAIC,eAAe,GAAG,YAAY;AAC9B;AAChB;AACA;AACgBP,QAAAA,KAAK,CAACQ,OAAN,CAAc,UAAUpB,KAAV,EAAiB;AAAE,iBAAOA,KAAK,CAACqB,cAAN,EAAP;AAAgC,SAAjE;AACA;AAChB;AACA;;AACgBT,QAAAA,KAAK,CAACQ,OAAN,CAAcrB,aAAd;AACH,OATD;;AAUAY,MAAAA,MAAM,GACAA,MAAM,CAACW,gBAAP,CAAwBH,eAAxB,CADA,GAEAA,eAAe,EAFrB;AAGA;AACZ;AACA;;AACYP,MAAAA,KAAK,CAACQ,OAAN,CAAclB,WAAd;AACA;AACZ;AACA;AACA;AACA;AACA;;AACYU,MAAAA,KAAK,CAACQ,OAAN,CAAc,UAAUpB,KAAV,EAAiB;AAC3B,YAAIA,KAAK,CAACuB,SAAV,EACIvB,KAAK,CAACwB,QAAN,GAAiB3B,QAAQ,CAAC4B,OAA1B;AACP,OAHD;AAIApB,MAAAA,KAAK,CAACqB,KAAN;AACH;AAjCE,GAAP;AAmCH;;AAED,SAAStB,aAAT","sourcesContent":["import { Presence } from '../types.js';\r\n\r\n/**\r\n * Default handlers for batching VisualElements\r\n */\r\nvar defaultHandler = {\r\n    measureLayout: function (child) { return child.updateLayoutMeasurement(); },\r\n    layoutReady: function (child) { return child.notifyLayoutReady(); },\r\n};\r\n/**\r\n * Create a batcher to process VisualElements\r\n */\r\nfunction createBatcher() {\r\n    var queue = new Set();\r\n    return {\r\n        add: function (child) { return queue.add(child); },\r\n        flush: function (_a) {\r\n            var _b = _a === void 0 ? defaultHandler : _a, measureLayout = _b.measureLayout, layoutReady = _b.layoutReady, parent = _b.parent;\r\n            var order = Array.from(queue).sort(function (a, b) { return a.depth - b.depth; });\r\n            var resetAndMeasure = function () {\r\n                /**\r\n                 * Write: Reset any transforms on children elements so we can read their actual layout\r\n                 */\r\n                order.forEach(function (child) { return child.resetTransform(); });\r\n                /**\r\n                 * Read: Measure the actual layout\r\n                 */\r\n                order.forEach(measureLayout);\r\n            };\r\n            parent\r\n                ? parent.withoutTransform(resetAndMeasure)\r\n                : resetAndMeasure();\r\n            /**\r\n             * Write: Notify the VisualElements they're ready for further write operations.\r\n             */\r\n            order.forEach(layoutReady);\r\n            /**\r\n             * After all children have started animating, ensure any Entering components are set to Present.\r\n             * If we add deferred animations (set up all animations and then start them in two loops) this\r\n             * could be moved to the start loop. But it needs to happen after all the animations configs\r\n             * are generated in AnimateSharedLayout as this relies on presence data\r\n             */\r\n            order.forEach(function (child) {\r\n                if (child.isPresent)\r\n                    child.presence = Presence.Present;\r\n            });\r\n            queue.clear();\r\n        },\r\n    };\r\n}\r\n\r\nexport { createBatcher };\r\n"]},"metadata":{},"sourceType":"module"}