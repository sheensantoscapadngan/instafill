{"ast":null,"code":"var _jsxFileName = \"F:\\\\github_repos\\\\instafill\\\\front-end\\\\src\\\\components\\\\common\\\\dropzone\\\\Dropzone.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faUpload, faPen);\n\nconst getColor = props => {\n  if (props.isDragAccept) {\n    return '#00e676';\n  }\n\n  if (props.isDragReject) {\n    return '#ff1744';\n  }\n\n  if (props.isDragActive) {\n    return '#2196f3';\n  }\n\n  return '#eeeeee';\n};\n\nconst Container = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px;\n  border-width: 2px;\n  border-radius: 2px;\n  border-color: ${props => getColor(props)};\n  border-style: dashed;\n  background-color: #fafafa;\n  color: #bdbdbd;\n  outline: none;\n  transition: border .24s ease-in-out;\n`;\n_c = Container;\n\nfunction Dropzone(props) {\n  _s();\n\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive,\n    isDragAccept,\n    isDragReject\n  } = useDropzone({\n    accept: '.pdf'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(Container, { ...getRootProps({\n        isDragActive,\n        isDragAccept,\n        isDragReject\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: \"upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropzone, \"nm3Goqz5ho/nOHkbJCd0A1d8xng=\", false, function () {\n  return [useDropzone];\n});\n\n_c2 = Dropzone;\n\n/*#__PURE__*/\n_jsxDEV(Dropzone, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 58,\n  columnNumber: 1\n}, this);\n\nexport default Dropzone;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Dropzone\");","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/src/components/common/dropzone/Dropzone.jsx"],"names":["React","useDropzone","styled","FontAwesomeIcon","library","faUpload","add","faPen","getColor","props","isDragAccept","isDragReject","isDragActive","Container","div","Dropzone","getRootProps","getInputProps","accept"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAASC,OAAT,QAAwB,mCAAxB;AACA,SAASC,QAAT,QAAwB,mCAAxB;;AACAD,OAAO,CAACE,GAAR,CAAYD,QAAZ,EAAsBE,KAAtB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,MAAIA,KAAK,CAACC,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAID,KAAK,CAACE,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,MAAIF,KAAK,CAACG,YAAV,EAAwB;AACpB,WAAO,SAAP;AACH;;AACD,SAAO,SAAP;AACD,CAXD;;AAaA,MAAMC,SAAS,GAAGX,MAAM,CAACY,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkBL,KAAK,IAAID,QAAQ,CAACC,KAAD,CAAQ;AAC3C;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMI,S;;AAgBN,SAASE,QAAT,CAAkBN,KAAlB,EAAyB;AAAA;;AACvB,QAAM;AACJO,IAAAA,YADI;AAEJC,IAAAA,aAFI;AAGJL,IAAAA,YAHI;AAIJF,IAAAA,YAJI;AAKJC,IAAAA;AALI,MAMFV,WAAW,CAAC;AAACiB,IAAAA,MAAM,EAAE;AAAT,GAAD,CANf;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,SAAD,OAAeF,YAAY,CAAC;AAACJ,QAAAA,YAAD;AAAeF,QAAAA,YAAf;AAA6BC,QAAAA;AAA7B,OAAD,CAA3B;AAAA,8BACE,sBAAWM,aAAa;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAlBQF,Q;UAOHd,W;;;MAPGc,Q;;AAoBT;AAAA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;;AACA,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faUpload} from '@fortawesome/free-solid-svg-icons';\r\nlibrary.add(faUpload, faPen)\r\n\r\nconst getColor = (props) => {\r\n  if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }\r\n  return '#eeeeee';\r\n}\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px;\r\n  border-width: 2px;\r\n  border-radius: 2px;\r\n  border-color: ${props => getColor(props)};\r\n  border-style: dashed;\r\n  background-color: #fafafa;\r\n  color: #bdbdbd;\r\n  outline: none;\r\n  transition: border .24s ease-in-out;\r\n`;\r\n\r\nfunction Dropzone(props) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({accept: '.pdf'});\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})}>\r\n        <input {...getInputProps()} />\r\n        <FontAwesomeIcon icon=\"upload\"/>\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<Dropzone />\r\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}