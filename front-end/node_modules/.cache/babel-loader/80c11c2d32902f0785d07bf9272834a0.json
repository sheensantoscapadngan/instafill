{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFFlateStream from \"./PDFFlateStream\";\nimport CharCodes from \"../syntax/CharCodes\";\n\nvar PDFContentStream =\n/** @class */\nfunction (_super) {\n  __extends(PDFContentStream, _super);\n\n  function PDFContentStream(dict, operators, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n\n    var _this = _super.call(this, dict, encode) || this;\n\n    _this.operators = operators;\n    return _this;\n  }\n\n  PDFContentStream.prototype.push = function () {\n    var _a;\n\n    var operators = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      operators[_i] = arguments[_i];\n    }\n\n    (_a = this.operators).push.apply(_a, operators);\n  };\n\n  PDFContentStream.prototype.clone = function (context) {\n    var operators = new Array(this.operators.length);\n\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      operators[idx] = this.operators[idx].clone(context);\n    }\n\n    var _a = this,\n        dict = _a.dict,\n        encode = _a.encode;\n\n    return PDFContentStream.of(dict.clone(context), operators, encode);\n  };\n\n  PDFContentStream.prototype.getContentsString = function () {\n    var value = '';\n\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      value += this.operators[idx] + \"\\n\";\n    }\n\n    return value;\n  };\n\n  PDFContentStream.prototype.getUnencodedContents = function () {\n    var buffer = new Uint8Array(this.getUnencodedContentsSize());\n    var offset = 0;\n\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      offset += this.operators[idx].copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n    }\n\n    return buffer;\n  };\n\n  PDFContentStream.prototype.getUnencodedContentsSize = function () {\n    var size = 0;\n\n    for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n      size += this.operators[idx].sizeInBytes() + 1;\n    }\n\n    return size;\n  };\n\n  PDFContentStream.of = function (dict, operators, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n\n    return new PDFContentStream(dict, operators, encode);\n  };\n\n  return PDFContentStream;\n}(PDFFlateStream);\n\nexport default PDFContentStream;","map":{"version":3,"sources":["../../../src/core/structures/PDFContentStream.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFFlateStream from \"./PDFFlateStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nvar PDFContentStream = /** @class */ (function (_super) {\n    __extends(PDFContentStream, _super);\n    function PDFContentStream(dict, operators, encode) {\n        if (encode === void 0) { encode = true; }\n        var _this = _super.call(this, dict, encode) || this;\n        _this.operators = operators;\n        return _this;\n    }\n    PDFContentStream.prototype.push = function () {\n        var _a;\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        (_a = this.operators).push.apply(_a, operators);\n    };\n    PDFContentStream.prototype.clone = function (context) {\n        var operators = new Array(this.operators.length);\n        for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n            operators[idx] = this.operators[idx].clone(context);\n        }\n        var _a = this, dict = _a.dict, encode = _a.encode;\n        return PDFContentStream.of(dict.clone(context), operators, encode);\n    };\n    PDFContentStream.prototype.getContentsString = function () {\n        var value = '';\n        for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n            value += this.operators[idx] + \"\\n\";\n        }\n        return value;\n    };\n    PDFContentStream.prototype.getUnencodedContents = function () {\n        var buffer = new Uint8Array(this.getUnencodedContentsSize());\n        var offset = 0;\n        for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n            offset += this.operators[idx].copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Newline;\n        }\n        return buffer;\n    };\n    PDFContentStream.prototype.getUnencodedContentsSize = function () {\n        var size = 0;\n        for (var idx = 0, len = this.operators.length; idx < len; idx++) {\n            size += this.operators[idx].sizeInBytes() + 1;\n        }\n        return size;\n    };\n    PDFContentStream.of = function (dict, operators, encode) {\n        if (encode === void 0) { encode = true; }\n        return new PDFContentStream(dict, operators, encode);\n    };\n    return PDFContentStream;\n}(PDFFlateStream));\nexport default PDFContentStream;\n//# sourceMappingURL=PDFContentStream.js.map"]},"metadata":{},"sourceType":"module"}