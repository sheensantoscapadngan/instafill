{"ast":null,"code":"import { useMemo, useEffect, createElement } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.js';\nimport { useConstant } from '../../utils/use-constant.js';\nvar presenceId = 0;\n\nfunction getPresenceId() {\n  var id = presenceId;\n  presenceId++;\n  return id;\n}\n\nvar PresenceChild = function (_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      onExitComplete = _a.onExitComplete,\n      custom = _a.custom,\n      presenceAffectsLayout = _a.presenceAffectsLayout;\n  var presenceChildren = useConstant(newChildrenMap);\n  var id = useConstant(getPresenceId);\n  var context = useMemo(function () {\n    return {\n      id: id,\n      initial: initial,\n      isPresent: isPresent,\n      custom: custom,\n      onExitComplete: function (childId) {\n        presenceChildren.set(childId, true);\n        var allComplete = true;\n        presenceChildren.forEach(function (isComplete) {\n          if (!isComplete) allComplete = false;\n        });\n        allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n      },\n      register: function (childId) {\n        presenceChildren.set(childId, false);\n        return function () {\n          return presenceChildren.delete(childId);\n        };\n      }\n    };\n  },\n  /**\r\n   * If the presence of a child affects the layout of the components around it,\r\n   * we want to make a new context value to ensure they get re-rendered\r\n   * so they can detect that layout change.\r\n   */\n  presenceAffectsLayout ? undefined : [isPresent]);\n  useMemo(function () {\n    presenceChildren.forEach(function (_, key) {\n      return presenceChildren.set(key, false);\n    });\n  }, [isPresent]);\n  /**\r\n   * If there's no `motion` components to fire exit animations, we want to remove this\r\n   * component immediately.\r\n   */\n\n  useEffect(function () {\n    !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\n  }, [isPresent]);\n  return createElement(PresenceContext.Provider, {\n    value: context\n  }, children);\n};\n\nfunction newChildrenMap() {\n  return new Map();\n}\n\nexport { PresenceChild };","map":{"version":3,"sources":["D:/Documents/GitHub/instafill/front-end/node_modules/framer-motion/dist/es/components/AnimatePresence/PresenceChild.js"],"names":["useMemo","useEffect","createElement","PresenceContext","useConstant","presenceId","getPresenceId","id","PresenceChild","_a","children","initial","isPresent","onExitComplete","custom","presenceAffectsLayout","presenceChildren","newChildrenMap","context","childId","set","allComplete","forEach","isComplete","register","delete","undefined","_","key","size","Provider","value","Map"],"mappings":"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","sourcesContent":["import { useMemo, useEffect, createElement } from 'react';\r\nimport { PresenceContext } from '../../context/PresenceContext.js';\r\nimport { useConstant } from '../../utils/use-constant.js';\r\n\r\nvar presenceId = 0;\r\nfunction getPresenceId() {\r\n    var id = presenceId;\r\n    presenceId++;\r\n    return id;\r\n}\r\nvar PresenceChild = function (_a) {\r\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom, presenceAffectsLayout = _a.presenceAffectsLayout;\r\n    var presenceChildren = useConstant(newChildrenMap);\r\n    var id = useConstant(getPresenceId);\r\n    var context = useMemo(function () { return ({\r\n        id: id,\r\n        initial: initial,\r\n        isPresent: isPresent,\r\n        custom: custom,\r\n        onExitComplete: function (childId) {\r\n            presenceChildren.set(childId, true);\r\n            var allComplete = true;\r\n            presenceChildren.forEach(function (isComplete) {\r\n                if (!isComplete)\r\n                    allComplete = false;\r\n            });\r\n            allComplete && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\r\n        },\r\n        register: function (childId) {\r\n            presenceChildren.set(childId, false);\r\n            return function () { return presenceChildren.delete(childId); };\r\n        },\r\n    }); }, \r\n    /**\r\n     * If the presence of a child affects the layout of the components around it,\r\n     * we want to make a new context value to ensure they get re-rendered\r\n     * so they can detect that layout change.\r\n     */\r\n    presenceAffectsLayout ? undefined : [isPresent]);\r\n    useMemo(function () {\r\n        presenceChildren.forEach(function (_, key) { return presenceChildren.set(key, false); });\r\n    }, [isPresent]);\r\n    /**\r\n     * If there's no `motion` components to fire exit animations, we want to remove this\r\n     * component immediately.\r\n     */\r\n    useEffect(function () {\r\n        !isPresent && !presenceChildren.size && (onExitComplete === null || onExitComplete === void 0 ? void 0 : onExitComplete());\r\n    }, [isPresent]);\r\n    return (createElement(PresenceContext.Provider, { value: context }, children));\r\n};\r\nfunction newChildrenMap() {\r\n    return new Map();\r\n}\r\n\r\nexport { PresenceChild };\r\n"]},"metadata":{},"sourceType":"module"}