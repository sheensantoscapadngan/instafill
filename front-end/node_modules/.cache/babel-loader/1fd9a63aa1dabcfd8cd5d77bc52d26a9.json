{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFStream from \"../objects/PDFStream\";\n\nvar PDFPageLeaf =\n/** @class */\nfunction (_super) {\n  __extends(PDFPageLeaf, _super);\n\n  function PDFPageLeaf(map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n\n    var _this = _super.call(this, map, context) || this;\n\n    _this.normalized = false;\n    _this.autoNormalizeCTM = autoNormalizeCTM;\n    return _this;\n  }\n\n  PDFPageLeaf.prototype.clone = function (context) {\n    var clone = PDFPageLeaf.fromMapWithContext(new Map(), context || this.context, this.autoNormalizeCTM);\n    var entries = this.entries();\n\n    for (var idx = 0, len = entries.length; idx < len; idx++) {\n      var _a = entries[idx],\n          key = _a[0],\n          value = _a[1];\n      clone.set(key, value);\n    }\n\n    return clone;\n  };\n\n  PDFPageLeaf.prototype.Parent = function () {\n    return this.lookupMaybe(PDFName.Parent, PDFDict);\n  };\n\n  PDFPageLeaf.prototype.Contents = function () {\n    return this.lookup(PDFName.of('Contents'));\n  };\n\n  PDFPageLeaf.prototype.Annots = function () {\n    return this.lookupMaybe(PDFName.Annots, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.BleedBox = function () {\n    return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.TrimBox = function () {\n    return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.ArtBox = function () {\n    return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.Resources = function () {\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    return this.context.lookupMaybe(dictOrRef, PDFDict);\n  };\n\n  PDFPageLeaf.prototype.MediaBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n    return this.context.lookup(arrayOrRef, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.CropBox = function () {\n    var arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n    return this.context.lookupMaybe(arrayOrRef, PDFArray);\n  };\n\n  PDFPageLeaf.prototype.Rotate = function () {\n    var numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n    return this.context.lookupMaybe(numberOrRef, PDFNumber);\n  };\n\n  PDFPageLeaf.prototype.getInheritableAttribute = function (name) {\n    var attribute;\n    this.ascend(function (node) {\n      if (!attribute) attribute = node.get(name);\n    });\n    return attribute;\n  };\n\n  PDFPageLeaf.prototype.setParent = function (parentRef) {\n    this.set(PDFName.Parent, parentRef);\n  };\n\n  PDFPageLeaf.prototype.addContentStream = function (contentStreamRef) {\n    var Contents = this.normalizedEntries().Contents || this.context.obj([]);\n    this.set(PDFName.Contents, Contents);\n    Contents.push(contentStreamRef);\n  };\n\n  PDFPageLeaf.prototype.wrapContentStreams = function (startStream, endStream) {\n    var Contents = this.Contents();\n\n    if (Contents instanceof PDFArray) {\n      Contents.insert(0, startStream);\n      Contents.push(endStream);\n      return true;\n    }\n\n    return false;\n  };\n\n  PDFPageLeaf.prototype.addAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    Annots.push(annotRef);\n  };\n\n  PDFPageLeaf.prototype.removeAnnot = function (annotRef) {\n    var Annots = this.normalizedEntries().Annots;\n    var index = Annots.indexOf(annotRef);\n\n    if (index !== undefined) {\n      Annots.remove(index);\n    }\n  };\n\n  PDFPageLeaf.prototype.setFontDictionary = function (name, fontDictRef) {\n    var Font = this.normalizedEntries().Font;\n    Font.set(name, fontDictRef);\n  };\n\n  PDFPageLeaf.prototype.setXObject = function (name, xObjectRef) {\n    var XObject = this.normalizedEntries().XObject;\n    XObject.set(name, xObjectRef);\n  };\n\n  PDFPageLeaf.prototype.setExtGState = function (name, extGStateRef) {\n    var ExtGState = this.normalizedEntries().ExtGState;\n    ExtGState.set(name, extGStateRef);\n  };\n\n  PDFPageLeaf.prototype.ascend = function (visitor) {\n    visitor(this);\n    var Parent = this.Parent();\n    if (Parent) Parent.ascend(visitor);\n  };\n\n  PDFPageLeaf.prototype.normalize = function () {\n    if (this.normalized) return;\n    var context = this.context;\n    var contentsRef = this.get(PDFName.Contents);\n    var contents = this.context.lookup(contentsRef);\n\n    if (contents instanceof PDFStream) {\n      this.set(PDFName.Contents, context.obj([contentsRef]));\n    }\n\n    if (this.autoNormalizeCTM) {\n      this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());\n    } // TODO: Clone `Resources` if it is inherited\n\n\n    var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n    var Resources = context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n    this.set(PDFName.Resources, Resources); // TODO: Clone `Font` if it is inherited\n\n    var Font = Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n    Resources.set(PDFName.Font, Font); // TODO: Clone `XObject` if it is inherited\n\n    var XObject = Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n    Resources.set(PDFName.XObject, XObject); // TODO: Clone `ExtGState` if it is inherited\n\n    var ExtGState = Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n    Resources.set(PDFName.ExtGState, ExtGState);\n    var Annots = this.Annots() || context.obj([]);\n    this.set(PDFName.Annots, Annots);\n    this.normalized = true;\n  };\n\n  PDFPageLeaf.prototype.normalizedEntries = function () {\n    this.normalize();\n    var Annots = this.Annots();\n    var Resources = this.Resources();\n    var Contents = this.Contents();\n    return {\n      Annots: Annots,\n      Resources: Resources,\n      Contents: Contents,\n      Font: Resources.lookup(PDFName.Font, PDFDict),\n      XObject: Resources.lookup(PDFName.XObject, PDFDict),\n      ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict)\n    };\n  };\n\n  PDFPageLeaf.InheritableEntries = ['Resources', 'MediaBox', 'CropBox', 'Rotate'];\n\n  PDFPageLeaf.withContextAndParent = function (context, parent) {\n    var dict = new Map();\n    dict.set(PDFName.Type, PDFName.Page);\n    dict.set(PDFName.Parent, parent);\n    dict.set(PDFName.Resources, context.obj({}));\n    dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n    return new PDFPageLeaf(dict, context, false);\n  };\n\n  PDFPageLeaf.fromMapWithContext = function (map, context, autoNormalizeCTM) {\n    if (autoNormalizeCTM === void 0) {\n      autoNormalizeCTM = true;\n    }\n\n    return new PDFPageLeaf(map, context, autoNormalizeCTM);\n  };\n\n  return PDFPageLeaf;\n}(PDFDict);\n\nexport default PDFPageLeaf;","map":{"version":3,"sources":["../../../src/core/structures/PDFPageLeaf.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFArray from \"../objects/PDFArray\";\nimport PDFDict from \"../objects/PDFDict\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFStream from \"../objects/PDFStream\";\nvar PDFPageLeaf = /** @class */ (function (_super) {\n    __extends(PDFPageLeaf, _super);\n    function PDFPageLeaf(map, context, autoNormalizeCTM) {\n        if (autoNormalizeCTM === void 0) { autoNormalizeCTM = true; }\n        var _this = _super.call(this, map, context) || this;\n        _this.normalized = false;\n        _this.autoNormalizeCTM = autoNormalizeCTM;\n        return _this;\n    }\n    PDFPageLeaf.prototype.clone = function (context) {\n        var clone = PDFPageLeaf.fromMapWithContext(new Map(), context || this.context, this.autoNormalizeCTM);\n        var entries = this.entries();\n        for (var idx = 0, len = entries.length; idx < len; idx++) {\n            var _a = entries[idx], key = _a[0], value = _a[1];\n            clone.set(key, value);\n        }\n        return clone;\n    };\n    PDFPageLeaf.prototype.Parent = function () {\n        return this.lookupMaybe(PDFName.Parent, PDFDict);\n    };\n    PDFPageLeaf.prototype.Contents = function () {\n        return this.lookup(PDFName.of('Contents'));\n    };\n    PDFPageLeaf.prototype.Annots = function () {\n        return this.lookupMaybe(PDFName.Annots, PDFArray);\n    };\n    PDFPageLeaf.prototype.BleedBox = function () {\n        return this.lookupMaybe(PDFName.BleedBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.TrimBox = function () {\n        return this.lookupMaybe(PDFName.TrimBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.ArtBox = function () {\n        return this.lookupMaybe(PDFName.ArtBox, PDFArray);\n    };\n    PDFPageLeaf.prototype.Resources = function () {\n        var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n        return this.context.lookupMaybe(dictOrRef, PDFDict);\n    };\n    PDFPageLeaf.prototype.MediaBox = function () {\n        var arrayOrRef = this.getInheritableAttribute(PDFName.MediaBox);\n        return this.context.lookup(arrayOrRef, PDFArray);\n    };\n    PDFPageLeaf.prototype.CropBox = function () {\n        var arrayOrRef = this.getInheritableAttribute(PDFName.CropBox);\n        return this.context.lookupMaybe(arrayOrRef, PDFArray);\n    };\n    PDFPageLeaf.prototype.Rotate = function () {\n        var numberOrRef = this.getInheritableAttribute(PDFName.Rotate);\n        return this.context.lookupMaybe(numberOrRef, PDFNumber);\n    };\n    PDFPageLeaf.prototype.getInheritableAttribute = function (name) {\n        var attribute;\n        this.ascend(function (node) {\n            if (!attribute)\n                attribute = node.get(name);\n        });\n        return attribute;\n    };\n    PDFPageLeaf.prototype.setParent = function (parentRef) {\n        this.set(PDFName.Parent, parentRef);\n    };\n    PDFPageLeaf.prototype.addContentStream = function (contentStreamRef) {\n        var Contents = this.normalizedEntries().Contents || this.context.obj([]);\n        this.set(PDFName.Contents, Contents);\n        Contents.push(contentStreamRef);\n    };\n    PDFPageLeaf.prototype.wrapContentStreams = function (startStream, endStream) {\n        var Contents = this.Contents();\n        if (Contents instanceof PDFArray) {\n            Contents.insert(0, startStream);\n            Contents.push(endStream);\n            return true;\n        }\n        return false;\n    };\n    PDFPageLeaf.prototype.addAnnot = function (annotRef) {\n        var Annots = this.normalizedEntries().Annots;\n        Annots.push(annotRef);\n    };\n    PDFPageLeaf.prototype.removeAnnot = function (annotRef) {\n        var Annots = this.normalizedEntries().Annots;\n        var index = Annots.indexOf(annotRef);\n        if (index !== undefined) {\n            Annots.remove(index);\n        }\n    };\n    PDFPageLeaf.prototype.setFontDictionary = function (name, fontDictRef) {\n        var Font = this.normalizedEntries().Font;\n        Font.set(name, fontDictRef);\n    };\n    PDFPageLeaf.prototype.setXObject = function (name, xObjectRef) {\n        var XObject = this.normalizedEntries().XObject;\n        XObject.set(name, xObjectRef);\n    };\n    PDFPageLeaf.prototype.setExtGState = function (name, extGStateRef) {\n        var ExtGState = this.normalizedEntries().ExtGState;\n        ExtGState.set(name, extGStateRef);\n    };\n    PDFPageLeaf.prototype.ascend = function (visitor) {\n        visitor(this);\n        var Parent = this.Parent();\n        if (Parent)\n            Parent.ascend(visitor);\n    };\n    PDFPageLeaf.prototype.normalize = function () {\n        if (this.normalized)\n            return;\n        var context = this.context;\n        var contentsRef = this.get(PDFName.Contents);\n        var contents = this.context.lookup(contentsRef);\n        if (contents instanceof PDFStream) {\n            this.set(PDFName.Contents, context.obj([contentsRef]));\n        }\n        if (this.autoNormalizeCTM) {\n            this.wrapContentStreams(this.context.getPushGraphicsStateContentStream(), this.context.getPopGraphicsStateContentStream());\n        }\n        // TODO: Clone `Resources` if it is inherited\n        var dictOrRef = this.getInheritableAttribute(PDFName.Resources);\n        var Resources = context.lookupMaybe(dictOrRef, PDFDict) || context.obj({});\n        this.set(PDFName.Resources, Resources);\n        // TODO: Clone `Font` if it is inherited\n        var Font = Resources.lookupMaybe(PDFName.Font, PDFDict) || context.obj({});\n        Resources.set(PDFName.Font, Font);\n        // TODO: Clone `XObject` if it is inherited\n        var XObject = Resources.lookupMaybe(PDFName.XObject, PDFDict) || context.obj({});\n        Resources.set(PDFName.XObject, XObject);\n        // TODO: Clone `ExtGState` if it is inherited\n        var ExtGState = Resources.lookupMaybe(PDFName.ExtGState, PDFDict) || context.obj({});\n        Resources.set(PDFName.ExtGState, ExtGState);\n        var Annots = this.Annots() || context.obj([]);\n        this.set(PDFName.Annots, Annots);\n        this.normalized = true;\n    };\n    PDFPageLeaf.prototype.normalizedEntries = function () {\n        this.normalize();\n        var Annots = this.Annots();\n        var Resources = this.Resources();\n        var Contents = this.Contents();\n        return {\n            Annots: Annots,\n            Resources: Resources,\n            Contents: Contents,\n            Font: Resources.lookup(PDFName.Font, PDFDict),\n            XObject: Resources.lookup(PDFName.XObject, PDFDict),\n            ExtGState: Resources.lookup(PDFName.ExtGState, PDFDict),\n        };\n    };\n    PDFPageLeaf.InheritableEntries = [\n        'Resources',\n        'MediaBox',\n        'CropBox',\n        'Rotate',\n    ];\n    PDFPageLeaf.withContextAndParent = function (context, parent) {\n        var dict = new Map();\n        dict.set(PDFName.Type, PDFName.Page);\n        dict.set(PDFName.Parent, parent);\n        dict.set(PDFName.Resources, context.obj({}));\n        dict.set(PDFName.MediaBox, context.obj([0, 0, 612, 792]));\n        return new PDFPageLeaf(dict, context, false);\n    };\n    PDFPageLeaf.fromMapWithContext = function (map, context, autoNormalizeCTM) {\n        if (autoNormalizeCTM === void 0) { autoNormalizeCTM = true; }\n        return new PDFPageLeaf(map, context, autoNormalizeCTM);\n    };\n    return PDFPageLeaf;\n}(PDFDict));\nexport default PDFPageLeaf;\n//# sourceMappingURL=PDFPageLeaf.js.map"]},"metadata":{},"sourceType":"module"}