{"ast":null,"code":"import { setFillingCmykColor, setFillingGrayscaleColor, setFillingRgbColor, setStrokingCmykColor, setStrokingGrayscaleColor, setStrokingRgbColor } from \"./operators\";\nimport { assertRange, error } from \"../utils\";\nexport var ColorTypes;\n\n(function (ColorTypes) {\n  ColorTypes[\"Grayscale\"] = \"Grayscale\";\n  ColorTypes[\"RGB\"] = \"RGB\";\n  ColorTypes[\"CMYK\"] = \"CMYK\";\n})(ColorTypes || (ColorTypes = {}));\n\nexport var grayscale = function (gray) {\n  assertRange(gray, 'gray', 0.0, 1.0);\n  return {\n    type: ColorTypes.Grayscale,\n    gray: gray\n  };\n};\nexport var rgb = function (red, green, blue) {\n  assertRange(red, 'red', 0, 1);\n  assertRange(green, 'green', 0, 1);\n  assertRange(blue, 'blue', 0, 1);\n  return {\n    type: ColorTypes.RGB,\n    red: red,\n    green: green,\n    blue: blue\n  };\n};\nexport var cmyk = function (cyan, magenta, yellow, key) {\n  assertRange(cyan, 'cyan', 0, 1);\n  assertRange(magenta, 'magenta', 0, 1);\n  assertRange(yellow, 'yellow', 0, 1);\n  assertRange(key, 'key', 0, 1);\n  return {\n    type: ColorTypes.CMYK,\n    cyan: cyan,\n    magenta: magenta,\n    yellow: yellow,\n    key: key\n  };\n};\nvar Grayscale = ColorTypes.Grayscale,\n    RGB = ColorTypes.RGB,\n    CMYK = ColorTypes.CMYK; // prettier-ignore\n\nexport var setFillingColor = function (color) {\n  return color.type === Grayscale ? setFillingGrayscaleColor(color.gray) : color.type === RGB ? setFillingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : error(\"Invalid color: \" + JSON.stringify(color));\n}; // prettier-ignore\n\nexport var setStrokingColor = function (color) {\n  return color.type === Grayscale ? setStrokingGrayscaleColor(color.gray) : color.type === RGB ? setStrokingRgbColor(color.red, color.green, color.blue) : color.type === CMYK ? setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key) : error(\"Invalid color: \" + JSON.stringify(color));\n}; // prettier-ignore\n\nexport var componentsToColor = function (comps, scale) {\n  if (scale === void 0) {\n    scale = 1;\n  }\n\n  return (comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? grayscale(comps[0] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale) : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale) : undefined;\n}; // prettier-ignore\n\nexport var colorToComponents = function (color) {\n  return color.type === Grayscale ? [color.gray] : color.type === RGB ? [color.red, color.green, color.blue] : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key] : error(\"Invalid color: \" + JSON.stringify(color));\n};","map":{"version":3,"sources":["../../src/api/colors.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { setFillingCmykColor, setFillingGrayscaleColor, setFillingRgbColor, setStrokingCmykColor, setStrokingGrayscaleColor, setStrokingRgbColor, } from \"./operators\";\nimport { assertRange, error } from \"../utils\";\nexport var ColorTypes;\n(function (ColorTypes) {\n    ColorTypes[\"Grayscale\"] = \"Grayscale\";\n    ColorTypes[\"RGB\"] = \"RGB\";\n    ColorTypes[\"CMYK\"] = \"CMYK\";\n})(ColorTypes || (ColorTypes = {}));\nexport var grayscale = function (gray) {\n    assertRange(gray, 'gray', 0.0, 1.0);\n    return { type: ColorTypes.Grayscale, gray: gray };\n};\nexport var rgb = function (red, green, blue) {\n    assertRange(red, 'red', 0, 1);\n    assertRange(green, 'green', 0, 1);\n    assertRange(blue, 'blue', 0, 1);\n    return { type: ColorTypes.RGB, red: red, green: green, blue: blue };\n};\nexport var cmyk = function (cyan, magenta, yellow, key) {\n    assertRange(cyan, 'cyan', 0, 1);\n    assertRange(magenta, 'magenta', 0, 1);\n    assertRange(yellow, 'yellow', 0, 1);\n    assertRange(key, 'key', 0, 1);\n    return { type: ColorTypes.CMYK, cyan: cyan, magenta: magenta, yellow: yellow, key: key };\n};\nvar Grayscale = ColorTypes.Grayscale, RGB = ColorTypes.RGB, CMYK = ColorTypes.CMYK;\n// prettier-ignore\nexport var setFillingColor = function (color) {\n    return color.type === Grayscale ? setFillingGrayscaleColor(color.gray)\n        : color.type === RGB ? setFillingRgbColor(color.red, color.green, color.blue)\n            : color.type === CMYK ? setFillingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var setStrokingColor = function (color) {\n    return color.type === Grayscale ? setStrokingGrayscaleColor(color.gray)\n        : color.type === RGB ? setStrokingRgbColor(color.red, color.green, color.blue)\n            : color.type === CMYK ? setStrokingCmykColor(color.cyan, color.magenta, color.yellow, color.key)\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n// prettier-ignore\nexport var componentsToColor = function (comps, scale) {\n    if (scale === void 0) { scale = 1; }\n    return ((comps === null || comps === void 0 ? void 0 : comps.length) === 1 ? grayscale(comps[0] * scale)\n        : (comps === null || comps === void 0 ? void 0 : comps.length) === 3 ? rgb(comps[0] * scale, comps[1] * scale, comps[2] * scale)\n            : (comps === null || comps === void 0 ? void 0 : comps.length) === 4 ? cmyk(comps[0] * scale, comps[1] * scale, comps[2] * scale, comps[3] * scale)\n                : undefined);\n};\n// prettier-ignore\nexport var colorToComponents = function (color) {\n    return color.type === Grayscale ? [color.gray]\n        : color.type === RGB ? [color.red, color.green, color.blue]\n            : color.type === CMYK ? [color.cyan, color.magenta, color.yellow, color.key]\n                : error(\"Invalid color: \" + JSON.stringify(color));\n};\n//# sourceMappingURL=colors.js.map"]},"metadata":{},"sourceType":"module"}