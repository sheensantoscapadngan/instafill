{"ast":null,"code":"import { __assign } from 'tslib';\nimport { distance, pipe } from 'popmotion';\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\nimport { extractEventInfo } from '../events/event-info.js';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\nimport { addPointerEvent } from '../events/use-pointer-event.js';\n/**\r\n * @internal\r\n */\n\nvar PanSession =\n/** @class */\nfunction () {\n  function PanSession(event, handlers, _a) {\n    var _this = this;\n\n    var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;\n    /**\r\n     * @internal\r\n     */\n\n    this.startEvent = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.lastMoveEvent = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n      var timestamp = getFrameData().timestamp;\n\n      _this.history.push(__assign(__assign({}, point), {\n        timestamp: timestamp\n      }));\n\n      var _a = _this.handlers,\n          onStart = _a.onStart,\n          onMove = _a.onMove;\n\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n\n      onMove && onMove(_this.lastMoveEvent, info);\n    };\n\n    this.handlePointerMove = function (event, info) {\n      _this.lastMoveEvent = event;\n      _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n      if (isMouseEvent(event) && event.buttons === 0) {\n        _this.handlePointerUp(event, info);\n\n        return;\n      } // Throttle mouse move event to once per frame\n\n\n      sync.update(_this.updatePoint, true);\n    };\n\n    this.handlePointerUp = function (event, info) {\n      _this.end();\n\n      var onEnd = _this.handlers.onEnd;\n      if (!onEnd || !_this.startEvent) return;\n      var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\n      onEnd && onEnd(event, panInfo);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = getFrameData().timestamp;\n    this.history = [__assign(__assign({}, point), {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n  }\n\n  PanSession.prototype.updateHandlers = function (handlers) {\n    this.handlers = handlers;\n  };\n\n  PanSession.prototype.end = function () {\n    this.removeListeners && this.removeListeners();\n    cancelSync.update(this.updatePoint);\n  };\n\n  return PanSession;\n}();\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction subtractPoint(a, b) {\n  return {\n    x: a.x - b.x,\n    y: a.y - b.y\n  };\n}\n\nfunction getPanInfo(_a, history) {\n  var point = _a.point;\n  return {\n    point: point,\n    delta: subtractPoint(point, lastDevicePoint(history)),\n    offset: subtractPoint(point, startDevicePoint(history)),\n    velocity: getVelocity(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n\nexport { PanSession };","map":{"version":3,"sources":["E:/PROJECTS/instafill_local/instafill/front-end/node_modules/framer-motion/dist/es/gestures/PanSession.js"],"names":["__assign","distance","pipe","isMouseEvent","isTouchEvent","extractEventInfo","sync","getFrameData","cancelSync","secondsToMilliseconds","addPointerEvent","PanSession","event","handlers","_a","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","x","y","point","timestamp","push","onStart","onMove","handlePointerMove","transformPoint","buttons","handlePointerUp","update","end","onEnd","panInfo","touches","length","initialInfo","onSessionStart","removeListeners","window","prototype","updateHandlers","subtractPoint","a","b","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","Infinity"],"mappings":"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","sourcesContent":["import { __assign } from 'tslib';\r\nimport { distance, pipe } from 'popmotion';\r\nimport { isMouseEvent, isTouchEvent } from './utils/event-type.js';\r\nimport { extractEventInfo } from '../events/event-info.js';\r\nimport sync, { getFrameData, cancelSync } from 'framesync';\r\nimport { secondsToMilliseconds } from '../utils/time-conversion.js';\r\nimport { addPointerEvent } from '../events/use-pointer-event.js';\r\n\r\n/**\r\n * @internal\r\n */\r\nvar PanSession = /** @class */ (function () {\r\n    function PanSession(event, handlers, _a) {\r\n        var _this = this;\r\n        var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        this.updatePoint = function () {\r\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\r\n                return;\r\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\r\n            var isPanStarted = _this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            var point = info.point;\r\n            var timestamp = getFrameData().timestamp;\r\n            _this.history.push(__assign(__assign({}, point), { timestamp: timestamp }));\r\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(_this.lastMoveEvent, info);\r\n                _this.startEvent = _this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(_this.lastMoveEvent, info);\r\n        };\r\n        this.handlePointerMove = function (event, info) {\r\n            _this.lastMoveEvent = event;\r\n            _this.lastMoveEventInfo = transformPoint(info, _this.transformPagePoint);\r\n            // Because Safari doesn't trigger mouseup events when it's above a `<select>`\r\n            if (isMouseEvent(event) && event.buttons === 0) {\r\n                _this.handlePointerUp(event, info);\r\n                return;\r\n            }\r\n            // Throttle mouse move event to once per frame\r\n            sync.update(_this.updatePoint, true);\r\n        };\r\n        this.handlePointerUp = function (event, info) {\r\n            _this.end();\r\n            var onEnd = _this.handlers.onEnd;\r\n            if (!onEnd || !_this.startEvent)\r\n                return;\r\n            var panInfo = getPanInfo(transformPoint(info, _this.transformPagePoint), _this.history);\r\n            onEnd && onEnd(event, panInfo);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (isTouchEvent(event) && event.touches.length > 1)\r\n            return;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        var info = extractEventInfo(event);\r\n        var initialInfo = transformPoint(info, this.transformPagePoint);\r\n        var point = initialInfo.point;\r\n        var timestamp = getFrameData().timestamp;\r\n        this.history = [__assign(__assign({}, point), { timestamp: timestamp })];\r\n        var onSessionStart = handlers.onSessionStart;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\r\n    }\r\n    PanSession.prototype.updateHandlers = function (handlers) {\r\n        this.handlers = handlers;\r\n    };\r\n    PanSession.prototype.end = function () {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelSync.update(this.updatePoint);\r\n    };\r\n    return PanSession;\r\n}());\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction subtractPoint(a, b) {\r\n    return { x: a.x - b.x, y: a.y - b.y };\r\n}\r\nfunction getPanInfo(_a, history) {\r\n    var point = _a.point;\r\n    return {\r\n        point: point,\r\n        delta: subtractPoint(point, lastDevicePoint(history)),\r\n        offset: subtractPoint(point, startDevicePoint(history)),\r\n        velocity: getVelocity(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var i = history.length - 1;\r\n    var timestampedPoint = null;\r\n    var lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\r\n\r\nexport { PanSession };\r\n"]},"metadata":{},"sourceType":"module"}