{"ast":null,"code":"import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFFlateStream from \"./PDFFlateStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer, last } from \"../../utils\";\n\nvar PDFObjectStream =\n/** @class */\nfunction (_super) {\n  __extends(PDFObjectStream, _super);\n\n  function PDFObjectStream(context, objects, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n\n    var _this = _super.call(this, context.obj({}), encode) || this;\n\n    _this.objects = objects;\n    _this.offsets = _this.computeObjectOffsets();\n    _this.offsetsString = _this.computeOffsetsString();\n\n    _this.dict.set(PDFName.of('Type'), PDFName.of('ObjStm'));\n\n    _this.dict.set(PDFName.of('N'), PDFNumber.of(_this.objects.length));\n\n    _this.dict.set(PDFName.of('First'), PDFNumber.of(_this.offsetsString.length));\n\n    return _this;\n  }\n\n  PDFObjectStream.prototype.getObjectsCount = function () {\n    return this.objects.length;\n  };\n\n  PDFObjectStream.prototype.clone = function (context) {\n    return PDFObjectStream.withContextAndObjects(context || this.dict.context, this.objects.slice(), this.encode);\n  };\n\n  PDFObjectStream.prototype.getContentsString = function () {\n    var value = this.offsetsString;\n\n    for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n      var _a = this.objects[idx],\n          object = _a[1];\n      value += object + \"\\n\";\n    }\n\n    return value;\n  };\n\n  PDFObjectStream.prototype.getUnencodedContents = function () {\n    var buffer = new Uint8Array(this.getUnencodedContentsSize());\n    var offset = copyStringIntoBuffer(this.offsetsString, buffer, 0);\n\n    for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n      var _a = this.objects[idx],\n          object = _a[1];\n      offset += object.copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Newline;\n    }\n\n    return buffer;\n  };\n\n  PDFObjectStream.prototype.getUnencodedContentsSize = function () {\n    return this.offsetsString.length + last(this.offsets)[1] + last(this.objects)[1].sizeInBytes() + 1;\n  };\n\n  PDFObjectStream.prototype.computeOffsetsString = function () {\n    var offsetsString = '';\n\n    for (var idx = 0, len = this.offsets.length; idx < len; idx++) {\n      var _a = this.offsets[idx],\n          objectNumber = _a[0],\n          offset = _a[1];\n      offsetsString += objectNumber + \" \" + offset + \" \";\n    }\n\n    return offsetsString;\n  };\n\n  PDFObjectStream.prototype.computeObjectOffsets = function () {\n    var offset = 0;\n    var offsets = new Array(this.objects.length);\n\n    for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n      var _a = this.objects[idx],\n          ref = _a[0],\n          object = _a[1];\n      offsets[idx] = [ref.objectNumber, offset];\n      offset += object.sizeInBytes() + 1; // '\\n'\n    }\n\n    return offsets;\n  };\n\n  PDFObjectStream.withContextAndObjects = function (context, objects, encode) {\n    if (encode === void 0) {\n      encode = true;\n    }\n\n    return new PDFObjectStream(context, objects, encode);\n  };\n\n  return PDFObjectStream;\n}(PDFFlateStream);\n\nexport default PDFObjectStream;","map":{"version":3,"sources":["../../../src/core/structures/PDFObjectStream.ts"],"names":[],"mappings":";AAAA,OAAO,OAAP,MAAc,oBAAd;AACA,OAAO,SAAP,MAAgB,sBAAhB;AAIA,OAAO,cAAP,MAAqB,kBAArB;AACA,OAAO,SAAP,MAAgB,qBAAhB;AACA,SAAS,oBAAT,EAA+B,IAA/B,QAAqC,aAArC;;AAIA,IAAA,eAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;;AAW5B,WAAA,eAAA,CACE,OADF,EAEE,OAFF,EAGE,MAHF,EAGe;AAAb,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,IAAA;AAAa;;AAHf,QAAA,KAAA,GAKE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAO,CAAC,GAAR,CAAY,EAAZ,CAAN,EAAuB,MAAvB,KAA8B,IALhC;;AAOE,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,KAAI,CAAC,oBAAL,EAAf;AACA,IAAA,KAAI,CAAC,aAAL,GAAqB,KAAI,CAAC,oBAAL,EAArB;;AAEA,IAAA,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,EAAR,CAAW,MAAX,CAAd,EAAkC,OAAO,CAAC,EAAR,CAAW,QAAX,CAAlC;;AACA,IAAA,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,EAAR,CAAW,GAAX,CAAd,EAA+B,SAAS,CAAC,EAAV,CAAa,KAAI,CAAC,OAAL,CAAa,MAA1B,CAA/B;;AACA,IAAA,KAAI,CAAC,IAAL,CAAU,GAAV,CAAc,OAAO,CAAC,EAAR,CAAW,OAAX,CAAd,EAAmC,SAAS,CAAC,EAAV,CAAa,KAAI,CAAC,aAAL,CAAmB,MAAhC,CAAnC;;;AACD;;AAED,EAAA,eAAA,CAAA,SAAA,CAAA,eAAA,GAAA,YAAA;AACE,WAAO,KAAK,OAAL,CAAa,MAApB;AACD,GAFD;;AAIA,EAAA,eAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,OAAN,EAA0B;AACxB,WAAO,eAAe,CAAC,qBAAhB,CACL,OAAO,IAAI,KAAK,IAAL,CAAU,OADhB,EAEL,KAAK,OAAL,CAAa,KAAb,EAFK,EAGL,KAAK,MAHA,CAAP;AAKD,GAND;;AAQA,EAAA,eAAA,CAAA,SAAA,CAAA,iBAAA,GAAA,YAAA;AACE,QAAI,KAAK,GAAG,KAAK,aAAjB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,OAAL,CAAa,MAArC,EAA6C,GAAG,GAAG,GAAnD,EAAwD,GAAG,EAA3D,EAA+D;AACvD,UAAA,EAAA,GAAa,KAAK,OAAL,CAAa,GAAb,CAAb;AAAA,UAAG,MAAM,GAAA,EAAA,CAAA,CAAA,CAAT;AACN,MAAA,KAAK,IAAO,MAAM,GAAA,IAAlB;AACD;;AACD,WAAO,KAAP;AACD,GAPD;;AASA,EAAA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAA,YAAA;AACE,QAAM,MAAM,GAAG,IAAI,UAAJ,CAAe,KAAK,wBAAL,EAAf,CAAf;AACA,QAAI,MAAM,GAAG,oBAAoB,CAAC,KAAK,aAAN,EAAqB,MAArB,EAA6B,CAA7B,CAAjC;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,OAAL,CAAa,MAArC,EAA6C,GAAG,GAAG,GAAnD,EAAwD,GAAG,EAA3D,EAA+D;AACvD,UAAA,EAAA,GAAa,KAAK,OAAL,CAAa,GAAb,CAAb;AAAA,UAAG,MAAM,GAAA,EAAA,CAAA,CAAA,CAAT;AACN,MAAA,MAAM,IAAI,MAAM,CAAC,aAAP,CAAqB,MAArB,EAA6B,MAA7B,CAAV;AACA,MAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,OAA7B;AACD;;AACD,WAAO,MAAP;AACD,GATD;;AAWA,EAAA,eAAA,CAAA,SAAA,CAAA,wBAAA,GAAA,YAAA;AACE,WACE,KAAK,aAAL,CAAmB,MAAnB,GACA,IAAI,CAAC,KAAK,OAAN,CAAJ,CAAmB,CAAnB,CADA,GAEA,IAAI,CAAC,KAAK,OAAN,CAAJ,CAAmB,CAAnB,EAAsB,WAAtB,EAFA,GAGA,CAJF;AAMD,GAPD;;AASQ,EAAA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,YAAA;AACE,QAAI,aAAa,GAAG,EAApB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,OAAL,CAAa,MAArC,EAA6C,GAAG,GAAG,GAAnD,EAAwD,GAAG,EAA3D,EAA+D;AACvD,UAAA,EAAA,GAAyB,KAAK,OAAL,CAAa,GAAb,CAAzB;AAAA,UAAC,YAAY,GAAA,EAAA,CAAA,CAAA,CAAb;AAAA,UAAe,MAAM,GAAA,EAAA,CAAA,CAAA,CAArB;AACN,MAAA,aAAa,IAAO,YAAY,GAAA,GAAZ,GAAgB,MAAhB,GAAsB,GAA1C;AACD;;AACD,WAAO,aAAP;AACD,GAPO;;AASA,EAAA,eAAA,CAAA,SAAA,CAAA,oBAAA,GAAR,YAAA;AACE,QAAI,MAAM,GAAG,CAAb;AACA,QAAM,OAAO,GAAG,IAAI,KAAJ,CAAU,KAAK,OAAL,CAAa,MAAvB,CAAhB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,OAAL,CAAa,MAArC,EAA6C,GAAG,GAAG,GAAnD,EAAwD,GAAG,EAA3D,EAA+D;AACvD,UAAA,EAAA,GAAgB,KAAK,OAAL,CAAa,GAAb,CAAhB;AAAA,UAAC,GAAG,GAAA,EAAA,CAAA,CAAA,CAAJ;AAAA,UAAM,MAAM,GAAA,EAAA,CAAA,CAAA,CAAZ;AACN,MAAA,OAAO,CAAC,GAAD,CAAP,GAAe,CAAC,GAAG,CAAC,YAAL,EAAmB,MAAnB,CAAf;AACA,MAAA,MAAM,IAAI,MAAM,CAAC,WAAP,KAAuB,CAAjC,CAH6D,CAGzB;AACrC;;AACD,WAAO,OAAP;AACD,GATO;;AA5ED,EAAA,eAAA,CAAA,qBAAA,GAAwB,UAC7B,OAD6B,EAE7B,OAF6B,EAG7B,MAH6B,EAGhB;AAAb,QAAA,MAAA,KAAA,KAAA,CAAA,EAAA;AAAA,MAAA,MAAA,GAAA,IAAA;AAAa;;AACV,WAAA,IAAI,eAAJ,CAAoB,OAApB,EAA6B,OAA7B,EAAsC,MAAtC,CAAA;AAA6C,GAJ3C;;AAsFT,SAAA,eAAA;AAAC,CAvFD,CAA8B,cAA9B,CAAA;;AAyFA,eAAe,eAAf","sourceRoot":"","sourcesContent":["import { __extends } from \"tslib\";\nimport PDFName from \"../objects/PDFName\";\nimport PDFNumber from \"../objects/PDFNumber\";\nimport PDFFlateStream from \"./PDFFlateStream\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { copyStringIntoBuffer, last } from \"../../utils\";\nvar PDFObjectStream = /** @class */ (function (_super) {\n    __extends(PDFObjectStream, _super);\n    function PDFObjectStream(context, objects, encode) {\n        if (encode === void 0) { encode = true; }\n        var _this = _super.call(this, context.obj({}), encode) || this;\n        _this.objects = objects;\n        _this.offsets = _this.computeObjectOffsets();\n        _this.offsetsString = _this.computeOffsetsString();\n        _this.dict.set(PDFName.of('Type'), PDFName.of('ObjStm'));\n        _this.dict.set(PDFName.of('N'), PDFNumber.of(_this.objects.length));\n        _this.dict.set(PDFName.of('First'), PDFNumber.of(_this.offsetsString.length));\n        return _this;\n    }\n    PDFObjectStream.prototype.getObjectsCount = function () {\n        return this.objects.length;\n    };\n    PDFObjectStream.prototype.clone = function (context) {\n        return PDFObjectStream.withContextAndObjects(context || this.dict.context, this.objects.slice(), this.encode);\n    };\n    PDFObjectStream.prototype.getContentsString = function () {\n        var value = this.offsetsString;\n        for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n            var _a = this.objects[idx], object = _a[1];\n            value += object + \"\\n\";\n        }\n        return value;\n    };\n    PDFObjectStream.prototype.getUnencodedContents = function () {\n        var buffer = new Uint8Array(this.getUnencodedContentsSize());\n        var offset = copyStringIntoBuffer(this.offsetsString, buffer, 0);\n        for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n            var _a = this.objects[idx], object = _a[1];\n            offset += object.copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Newline;\n        }\n        return buffer;\n    };\n    PDFObjectStream.prototype.getUnencodedContentsSize = function () {\n        return (this.offsetsString.length +\n            last(this.offsets)[1] +\n            last(this.objects)[1].sizeInBytes() +\n            1);\n    };\n    PDFObjectStream.prototype.computeOffsetsString = function () {\n        var offsetsString = '';\n        for (var idx = 0, len = this.offsets.length; idx < len; idx++) {\n            var _a = this.offsets[idx], objectNumber = _a[0], offset = _a[1];\n            offsetsString += objectNumber + \" \" + offset + \" \";\n        }\n        return offsetsString;\n    };\n    PDFObjectStream.prototype.computeObjectOffsets = function () {\n        var offset = 0;\n        var offsets = new Array(this.objects.length);\n        for (var idx = 0, len = this.objects.length; idx < len; idx++) {\n            var _a = this.objects[idx], ref = _a[0], object = _a[1];\n            offsets[idx] = [ref.objectNumber, offset];\n            offset += object.sizeInBytes() + 1; // '\\n'\n        }\n        return offsets;\n    };\n    PDFObjectStream.withContextAndObjects = function (context, objects, encode) {\n        if (encode === void 0) { encode = true; }\n        return new PDFObjectStream(context, objects, encode);\n    };\n    return PDFObjectStream;\n}(PDFFlateStream));\nexport default PDFObjectStream;\n//# sourceMappingURL=PDFObjectStream.js.map"]},"metadata":{},"sourceType":"module"}