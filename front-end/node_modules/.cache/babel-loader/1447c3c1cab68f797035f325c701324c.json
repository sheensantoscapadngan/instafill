{"ast":null,"code":"var _jsxFileName = \"F:\\\\github_repos\\\\instafill\\\\front-end\\\\src\\\\components\\\\common\\\\dropzone\\\\DropzoneMASTER.jsx\";\nimport React, { useCallback, Component } from 'react';\nimport './Dropzone.css';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fa } from '@fortawesome/free-solid-svg-icons';\nimport { useDropzone, FileError, FileRejection } from 'react-dropzone';\nimport 'react-dropzone-uploader/dist/styles.css';\nimport Dropzone from 'react-dropzone-uploader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlibrary.add(faUpload);\n/*const getColor = (props) => {\r\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }///\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n  border-color: ${props => getColor(props)};\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst DropzoneMASTER = ({setFileUploadMASTER}) => {\r\n\r\n  \r\n  const onDrop = useCallback(acceptedFiles =>{\r\n    setFileUploadMASTER(acceptedFiles);\r\n    ///let formData = new FormData()\r\n    formData.append('master',acceptedFiles[0])\r\n\r\n    \r\n    \r\n    axios({\r\n      url: '/process',\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formData\r\n    }).then((res)=>{\r\n      \r\n    })///\r\n\r\n  }, [])\r\n  \r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.txt',onDrop});\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})} className=\"inner-container\">\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<DropzoneMASTER />\r\nexport default DropzoneMASTER;*/\n\nconst DropzoneMASTER = ({\n  setFileUploadMASTER\n}) => {\n  const getUploadParams = () => {\n    return {\n      url: 'https://httpbin.org/post'\n    };\n    /* filler ra ni guys para mu gana ang progress bar*/\n  };\n\n  const handleChangeStatus = ({\n    meta\n  }, status) => {\n    console.log(status, meta);\n  };\n\n  const handleSubmit = (file, allFiles) => {\n    setFileUploadMASTER(file.map(f => f.file));\n    console.log(file.map(f => f.file));\n    allFiles.forEach(f => f.remove());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inner-container\",\n    children: /*#__PURE__*/_jsxDEV(Dropzone, {\n      getUploadParams: getUploadParams,\n      onChangeStatus: handleChangeStatus,\n      onSubmit: handleSubmit,\n      maxFiles: 1,\n      accept: \".txt\",\n      inputContent: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"filler\",\n          children: [\"_________________________________________\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: \"file-pdf\",\n            color: \"red\",\n            size: \"3x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 70\n          }, this), \"________________________________________\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"DROP MASTER HERE OR \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"browse\",\n            children: \"CLICK TO BROWSE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"filler\",\n          children: \"______________________________________________________________________________________\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this),\n      styles: {\n        dropzone: {\n          minHeight: 400,\n          maxHeight: 250\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DropzoneMASTER;\n\n/*#__PURE__*/\n_jsxDEV(DropzoneMASTER, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 138,\n  columnNumber: 1\n}, this);\n\nexport default DropzoneMASTER;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropzoneMASTER\");","map":{"version":3,"sources":["F:/github_repos/instafill/front-end/src/components/common/dropzone/DropzoneMASTER.jsx"],"names":["React","useCallback","Component","styled","axios","FontAwesomeIcon","library","fa","useDropzone","FileError","FileRejection","Dropzone","add","faUpload","DropzoneMASTER","setFileUploadMASTER","getUploadParams","url","handleChangeStatus","meta","status","console","log","handleSubmit","file","allFiles","map","f","forEach","remove","dropzone","minHeight","maxHeight"],"mappings":"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","sourcesContent":["import React, { useCallback, Component } from 'react';\r\nimport './Dropzone.css'\r\n\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\n\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fa } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport {useDropzone, FileError, FileRejection} from 'react-dropzone';\r\n\r\nimport 'react-dropzone-uploader/dist/styles.css'\r\nimport Dropzone from 'react-dropzone-uploader'\r\n\r\nlibrary.add(faUpload)\r\n\r\n/*const getColor = (props) => {\r\n  /*if (props.isDragAccept) {\r\n      return '#00e676';\r\n  }\r\n  if (props.isDragReject) {\r\n      return '#ff1744';\r\n  }\r\n  if (props.isDragActive) {\r\n      return '#2196f3';\r\n  }///\r\n  return '#00abeb';\r\n}\r\n\r\nconst Container = styled.div`\r\n\r\n  border-color: ${props => getColor(props)};\r\n\r\n`;\r\n\r\n\r\n\r\n\r\nconst DropzoneMASTER = ({setFileUploadMASTER}) => {\r\n\r\n  \r\n  const onDrop = useCallback(acceptedFiles =>{\r\n    setFileUploadMASTER(acceptedFiles);\r\n    ///let formData = new FormData()\r\n    formData.append('master',acceptedFiles[0])\r\n\r\n    \r\n    \r\n    axios({\r\n      url: '/process',\r\n      method: \"POST\",\r\n      headers:{\r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      data: formData\r\n    }).then((res)=>{\r\n      \r\n    })///\r\n\r\n  }, [])\r\n  \r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject,\r\n  } = useDropzone({accept: '.txt',onDrop});\r\n\r\n  \r\n  return (\r\n    <div className=\"container\">\r\n      <Container {...getRootProps({isDragActive, isDragAccept, isDragReject})} className=\"inner-container\">\r\n        <input {...getInputProps()} />\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <FontAwesomeIcon icon=\"upload\" size=\"3x\"/>\r\n        <br></br>\r\n        <br></br>\r\n        <br></br>\r\n        <h1>DROP FILES HERE OR <span className=\"browse\">BROWSE</span></h1>\r\n        <br></br>\r\n        <br></br>\r\n        <p>Drag and drop files in this area for quick upload to the cloud or use file explorer</p>\r\n        \r\n\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n<DropzoneMASTER />\r\nexport default DropzoneMASTER;*/\r\n\r\n\r\nconst DropzoneMASTER = ({setFileUploadMASTER}) => {\r\n  const getUploadParams = () => {\r\n    return { url: 'https://httpbin.org/post' } /* filler ra ni guys para mu gana ang progress bar*/\r\n  }\r\n\r\n  const handleChangeStatus = ({ meta }, status) => {\r\n    console.log(status, meta)\r\n  }\r\n\r\n  const handleSubmit = (file,allFiles) => {\r\n    setFileUploadMASTER(file.map(f => f.file))\r\n    console.log(file.map(f => f.file))\r\n    allFiles.forEach(f => f.remove())\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className=\"inner-container\">\r\n    <Dropzone\r\n      getUploadParams={getUploadParams}\r\n      onChangeStatus={handleChangeStatus}\r\n      onSubmit={handleSubmit}\r\n      maxFiles={1}\r\n      accept=\".txt\"\r\n      inputContent={\r\n      <div className=\"inputContent\">\r\n      <p className=\"filler\">_________________________________________<FontAwesomeIcon icon=\"file-pdf\" color=\"red\" size=\"3x\"/>________________________________________</p>\r\n      <h2>DROP MASTER HERE OR <span className=\"browse\">CLICK TO BROWSE</span></h2>\r\n      <p className=\"filler\">______________________________________________________________________________________</p>\r\n      </div>\r\n      }\r\n      styles={{ dropzone: { minHeight: 400, maxHeight: 250 } }}\r\n      \r\n    />\r\n    </div>\r\n  )\r\n}\r\n\r\n<DropzoneMASTER />\r\nexport default DropzoneMASTER;"]},"metadata":{},"sourceType":"module"}