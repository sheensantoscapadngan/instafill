{"ast":null,"code":"import { __extends, __spreadArrays } from \"tslib\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { PDFArrayIsNotRectangleError } from \"../errors\";\n\nvar PDFArray =\n/** @class */\nfunction (_super) {\n  __extends(PDFArray, _super);\n\n  function PDFArray(context) {\n    var _this = _super.call(this) || this;\n\n    _this.array = [];\n    _this.context = context;\n    return _this;\n  }\n\n  PDFArray.prototype.size = function () {\n    return this.array.length;\n  };\n\n  PDFArray.prototype.push = function (object) {\n    this.array.push(object);\n  };\n\n  PDFArray.prototype.insert = function (index, object) {\n    this.array.splice(index, 0, object);\n  };\n\n  PDFArray.prototype.indexOf = function (object) {\n    var index = this.array.indexOf(object);\n    return index === -1 ? undefined : index;\n  };\n\n  PDFArray.prototype.remove = function (index) {\n    this.array.splice(index, 1);\n  };\n\n  PDFArray.prototype.set = function (idx, object) {\n    this.array[idx] = object;\n  };\n\n  PDFArray.prototype.get = function (index) {\n    return this.array[index];\n  };\n\n  PDFArray.prototype.lookupMaybe = function (index) {\n    var _a;\n\n    var types = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n\n    return (_a = this.context).lookupMaybe.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n\n  PDFArray.prototype.lookup = function (index) {\n    var _a;\n\n    var types = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      types[_i - 1] = arguments[_i];\n    }\n\n    return (_a = this.context).lookup.apply(_a, __spreadArrays([this.get(index)], types));\n  };\n\n  PDFArray.prototype.asRectangle = function () {\n    if (this.size() !== 4) throw new PDFArrayIsNotRectangleError(this.size());\n    var lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n    var lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n    var upperRightX = this.lookup(2, PDFNumber).asNumber();\n    var upperRightY = this.lookup(3, PDFNumber).asNumber();\n    var x = lowerLeftX;\n    var y = lowerLeftY;\n    var width = upperRightX - lowerLeftX;\n    var height = upperRightY - lowerLeftY;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    };\n  };\n\n  PDFArray.prototype.asArray = function () {\n    return this.array.slice();\n  };\n\n  PDFArray.prototype.clone = function (context) {\n    var clone = PDFArray.withContext(context || this.context);\n\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      clone.push(this.array[idx]);\n    }\n\n    return clone;\n  };\n\n  PDFArray.prototype.toString = function () {\n    var arrayString = '[ ';\n\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      arrayString += this.get(idx).toString();\n      arrayString += ' ';\n    }\n\n    arrayString += ']';\n    return arrayString;\n  };\n\n  PDFArray.prototype.sizeInBytes = function () {\n    var size = 3;\n\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      size += this.get(idx).sizeInBytes() + 1;\n    }\n\n    return size;\n  };\n\n  PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n    var initialOffset = offset;\n    buffer[offset++] = CharCodes.LeftSquareBracket;\n    buffer[offset++] = CharCodes.Space;\n\n    for (var idx = 0, len = this.size(); idx < len; idx++) {\n      offset += this.get(idx).copyBytesInto(buffer, offset);\n      buffer[offset++] = CharCodes.Space;\n    }\n\n    buffer[offset++] = CharCodes.RightSquareBracket;\n    return offset - initialOffset;\n  };\n\n  PDFArray.withContext = function (context) {\n    return new PDFArray(context);\n  };\n\n  return PDFArray;\n}(PDFObject);\n\nexport default PDFArray;","map":{"version":3,"sources":["../../../src/core/objects/PDFArray.ts"],"names":[],"mappings":";AAKA,OAAO,SAAP,MAAgB,aAAhB;AACA,OAAO,SAAP,MAAgB,aAAhB;AAKA,OAAO,SAAP,MAAgB,qBAAhB;AACA,SAAS,2BAAT,QAAsC,WAAtC;;AAGA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuB,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAMrB,WAAA,QAAA,CAAoB,OAApB,EAAuC;AAAvC,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADT;;AAEE,IAAA,KAAI,CAAC,KAAL,GAAa,EAAb;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,OAAf;;AACD;;AAED,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,MAAlB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,IAAA,GAAA,UAAK,MAAL,EAAsB;AACpB,SAAK,KAAL,CAAW,IAAX,CAAgB,MAAhB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAsB,MAAtB,EAAuC;AACrC,SAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB,EAA4B,MAA5B;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,UAAQ,MAAR,EAAyB;AACvB,QAAM,KAAK,GAAG,KAAK,KAAL,CAAW,OAAX,CAAmB,MAAnB,CAAd;AACA,WAAO,KAAK,KAAK,CAAC,CAAX,GAAe,SAAf,GAA2B,KAAlC;AACD,GAHD;;AAKA,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAoB;AAClB,SAAK,KAAL,CAAW,MAAX,CAAkB,KAAlB,EAAyB,CAAzB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,GAAJ,EAAiB,MAAjB,EAAkC;AAChC,SAAK,KAAL,CAAW,GAAX,IAAkB,MAAlB;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,KAAJ,EAAiB;AACf,WAAO,KAAK,KAAL,CAAW,KAAX,CAAP;AACD,GAFD;;AA2BA,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,UAAY,KAAZ,EAAyB;;;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACzB,WAAO,CAAA,EAAA,GAAA,KAAK,OAAL,EAAa,WAAb,CAAwB,KAAxB,CAAwB,EAAxB,EAAwB,cAAA,CAAA,CAC7B,KAAK,GAAL,CAAS,KAAT,CAD6B,CAAA,EAG1B,KAH0B,CAAxB,CAAP;AAKD,GAND;;AA0BA,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,KAAP,EAAoB;;;AAAE,QAAA,KAAA,GAAA,EAAA;;SAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAe;AAAf,MAAA,KAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACpB,WAAO,CAAA,EAAA,GAAA,KAAK,OAAL,EAAa,MAAb,CAAmB,KAAnB,CAAmB,EAAnB,EAAmB,cAAA,CAAA,CACxB,KAAK,GAAL,CAAS,KAAT,CADwB,CAAA,EAGrB,KAHqB,CAAnB,CAAP;AAKD,GAND;;AAQA,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAI,KAAK,IAAL,OAAgB,CAApB,EAAuB,MAAM,IAAI,2BAAJ,CAAgC,KAAK,IAAL,EAAhC,CAAN;AAEvB,QAAM,UAAU,GAAG,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAAnB;AACA,QAAM,UAAU,GAAG,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAAnB;AACA,QAAM,WAAW,GAAG,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAApB;AACA,QAAM,WAAW,GAAG,KAAK,MAAL,CAAY,CAAZ,EAAe,SAAf,EAA0B,QAA1B,EAApB;AAEA,QAAM,CAAC,GAAG,UAAV;AACA,QAAM,CAAC,GAAG,UAAV;AACA,QAAM,KAAK,GAAG,WAAW,GAAG,UAA5B;AACA,QAAM,MAAM,GAAG,WAAW,GAAG,UAA7B;AAEA,WAAO;AAAE,MAAA,CAAC,EAAA,CAAH;AAAK,MAAA,CAAC,EAAA,CAAN;AAAQ,MAAA,KAAK,EAAA,KAAb;AAAe,MAAA,MAAM,EAAA;AAArB,KAAP;AACD,GAdD;;AAgBA,EAAA,QAAA,CAAA,SAAA,CAAA,OAAA,GAAA,YAAA;AACE,WAAO,KAAK,KAAL,CAAW,KAAX,EAAP;AACD,GAFD;;AAIA,EAAA,QAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,OAAN,EAA0B;AACxB,QAAM,KAAK,GAAG,QAAQ,CAAC,WAAT,CAAqB,OAAO,IAAI,KAAK,OAArC,CAAd;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,IAAL,EAAxB,EAAqC,GAAG,GAAG,GAA3C,EAAgD,GAAG,EAAnD,EAAuD;AACrD,MAAA,KAAK,CAAC,IAAN,CAAW,KAAK,KAAL,CAAW,GAAX,CAAX;AACD;;AACD,WAAO,KAAP;AACD,GAND;;AAQA,EAAA,QAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA;AACE,QAAI,WAAW,GAAG,IAAlB;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,IAAL,EAAxB,EAAqC,GAAG,GAAG,GAA3C,EAAgD,GAAG,EAAnD,EAAuD;AACrD,MAAA,WAAW,IAAI,KAAK,GAAL,CAAS,GAAT,EAAc,QAAd,EAAf;AACA,MAAA,WAAW,IAAI,GAAf;AACD;;AACD,IAAA,WAAW,IAAI,GAAf;AACA,WAAO,WAAP;AACD,GARD;;AAUA,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAA,YAAA;AACE,QAAI,IAAI,GAAG,CAAX;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,IAAL,EAAxB,EAAqC,GAAG,GAAG,GAA3C,EAAgD,GAAG,EAAnD,EAAuD;AACrD,MAAA,IAAI,IAAI,KAAK,GAAL,CAAS,GAAT,EAAc,WAAd,KAA8B,CAAtC;AACD;;AACD,WAAO,IAAP;AACD,GAND;;AAQA,EAAA,QAAA,CAAA,SAAA,CAAA,aAAA,GAAA,UAAc,MAAd,EAAkC,MAAlC,EAAgD;AAC9C,QAAM,aAAa,GAAG,MAAtB;AAEA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,iBAA7B;AACA,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,KAA7B;;AACA,SAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,KAAK,IAAL,EAAxB,EAAqC,GAAG,GAAG,GAA3C,EAAgD,GAAG,EAAnD,EAAuD;AACrD,MAAA,MAAM,IAAI,KAAK,GAAL,CAAS,GAAT,EAAc,aAAd,CAA4B,MAA5B,EAAoC,MAApC,CAAV;AACA,MAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,KAA7B;AACD;;AACD,IAAA,MAAM,CAAC,MAAM,EAAP,CAAN,GAAmB,SAAS,CAAC,kBAA7B;AAEA,WAAO,MAAM,GAAG,aAAhB;AACD,GAZD;;AA/IO,EAAA,QAAA,CAAA,WAAA,GAAc,UAAC,OAAD,EAAoB;AAAK,WAAA,IAAI,QAAJ,CAAA,OAAA,CAAA;AAAqB,GAA5D;;AA4JT,SAAA,QAAA;AAAC,CA7JD,CAAuB,SAAvB,CAAA;;AA+JA,eAAe,QAAf","sourceRoot":"","sourcesContent":["import { __extends, __spreadArrays } from \"tslib\";\nimport PDFNumber from \"./PDFNumber\";\nimport PDFObject from \"./PDFObject\";\nimport CharCodes from \"../syntax/CharCodes\";\nimport { PDFArrayIsNotRectangleError } from \"../errors\";\nvar PDFArray = /** @class */ (function (_super) {\n    __extends(PDFArray, _super);\n    function PDFArray(context) {\n        var _this = _super.call(this) || this;\n        _this.array = [];\n        _this.context = context;\n        return _this;\n    }\n    PDFArray.prototype.size = function () {\n        return this.array.length;\n    };\n    PDFArray.prototype.push = function (object) {\n        this.array.push(object);\n    };\n    PDFArray.prototype.insert = function (index, object) {\n        this.array.splice(index, 0, object);\n    };\n    PDFArray.prototype.indexOf = function (object) {\n        var index = this.array.indexOf(object);\n        return index === -1 ? undefined : index;\n    };\n    PDFArray.prototype.remove = function (index) {\n        this.array.splice(index, 1);\n    };\n    PDFArray.prototype.set = function (idx, object) {\n        this.array[idx] = object;\n    };\n    PDFArray.prototype.get = function (index) {\n        return this.array[index];\n    };\n    PDFArray.prototype.lookupMaybe = function (index) {\n        var _a;\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        return (_a = this.context).lookupMaybe.apply(_a, __spreadArrays([this.get(index)], types));\n    };\n    PDFArray.prototype.lookup = function (index) {\n        var _a;\n        var types = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            types[_i - 1] = arguments[_i];\n        }\n        return (_a = this.context).lookup.apply(_a, __spreadArrays([this.get(index)], types));\n    };\n    PDFArray.prototype.asRectangle = function () {\n        if (this.size() !== 4)\n            throw new PDFArrayIsNotRectangleError(this.size());\n        var lowerLeftX = this.lookup(0, PDFNumber).asNumber();\n        var lowerLeftY = this.lookup(1, PDFNumber).asNumber();\n        var upperRightX = this.lookup(2, PDFNumber).asNumber();\n        var upperRightY = this.lookup(3, PDFNumber).asNumber();\n        var x = lowerLeftX;\n        var y = lowerLeftY;\n        var width = upperRightX - lowerLeftX;\n        var height = upperRightY - lowerLeftY;\n        return { x: x, y: y, width: width, height: height };\n    };\n    PDFArray.prototype.asArray = function () {\n        return this.array.slice();\n    };\n    PDFArray.prototype.clone = function (context) {\n        var clone = PDFArray.withContext(context || this.context);\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            clone.push(this.array[idx]);\n        }\n        return clone;\n    };\n    PDFArray.prototype.toString = function () {\n        var arrayString = '[ ';\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            arrayString += this.get(idx).toString();\n            arrayString += ' ';\n        }\n        arrayString += ']';\n        return arrayString;\n    };\n    PDFArray.prototype.sizeInBytes = function () {\n        var size = 3;\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            size += this.get(idx).sizeInBytes() + 1;\n        }\n        return size;\n    };\n    PDFArray.prototype.copyBytesInto = function (buffer, offset) {\n        var initialOffset = offset;\n        buffer[offset++] = CharCodes.LeftSquareBracket;\n        buffer[offset++] = CharCodes.Space;\n        for (var idx = 0, len = this.size(); idx < len; idx++) {\n            offset += this.get(idx).copyBytesInto(buffer, offset);\n            buffer[offset++] = CharCodes.Space;\n        }\n        buffer[offset++] = CharCodes.RightSquareBracket;\n        return offset - initialOffset;\n    };\n    PDFArray.withContext = function (context) { return new PDFArray(context); };\n    return PDFArray;\n}(PDFObject));\nexport default PDFArray;\n//# sourceMappingURL=PDFArray.js.map"]},"metadata":{},"sourceType":"module"}