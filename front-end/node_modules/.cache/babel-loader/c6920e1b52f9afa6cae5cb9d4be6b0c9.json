{"ast":null,"code":"import CharCodes from \"./CharCodes\";\nexport var IsDigit = new Uint8Array(256);\nIsDigit[CharCodes.Zero] = 1;\nIsDigit[CharCodes.One] = 1;\nIsDigit[CharCodes.Two] = 1;\nIsDigit[CharCodes.Three] = 1;\nIsDigit[CharCodes.Four] = 1;\nIsDigit[CharCodes.Five] = 1;\nIsDigit[CharCodes.Six] = 1;\nIsDigit[CharCodes.Seven] = 1;\nIsDigit[CharCodes.Eight] = 1;\nIsDigit[CharCodes.Nine] = 1;\nexport var IsNumericPrefix = new Uint8Array(256);\nIsNumericPrefix[CharCodes.Period] = 1;\nIsNumericPrefix[CharCodes.Plus] = 1;\nIsNumericPrefix[CharCodes.Minus] = 1;\nexport var IsNumeric = new Uint8Array(256);\n\nfor (var idx = 0, len = 256; idx < len; idx++) {\n  IsNumeric[idx] = IsDigit[idx] || IsNumericPrefix[idx] ? 1 : 0;\n}","map":{"version":3,"sources":["../../../src/core/syntax/Numeric.ts"],"names":[],"mappings":"AAAA,OAAO,SAAP,MAAgB,aAAhB;AAEA,OAAO,IAAM,OAAO,GAAG,IAAI,UAAJ,CAAe,GAAf,CAAhB;AAEP,OAAO,CAAC,SAAS,CAAC,IAAX,CAAP,GAA0B,CAA1B;AACA,OAAO,CAAC,SAAS,CAAC,GAAX,CAAP,GAAyB,CAAzB;AACA,OAAO,CAAC,SAAS,CAAC,GAAX,CAAP,GAAyB,CAAzB;AACA,OAAO,CAAC,SAAS,CAAC,KAAX,CAAP,GAA2B,CAA3B;AACA,OAAO,CAAC,SAAS,CAAC,IAAX,CAAP,GAA0B,CAA1B;AACA,OAAO,CAAC,SAAS,CAAC,IAAX,CAAP,GAA0B,CAA1B;AACA,OAAO,CAAC,SAAS,CAAC,GAAX,CAAP,GAAyB,CAAzB;AACA,OAAO,CAAC,SAAS,CAAC,KAAX,CAAP,GAA2B,CAA3B;AACA,OAAO,CAAC,SAAS,CAAC,KAAX,CAAP,GAA2B,CAA3B;AACA,OAAO,CAAC,SAAS,CAAC,IAAX,CAAP,GAA0B,CAA1B;AAEA,OAAO,IAAM,eAAe,GAAG,IAAI,UAAJ,CAAe,GAAf,CAAxB;AAEP,eAAe,CAAC,SAAS,CAAC,MAAX,CAAf,GAAoC,CAApC;AACA,eAAe,CAAC,SAAS,CAAC,IAAX,CAAf,GAAkC,CAAlC;AACA,eAAe,CAAC,SAAS,CAAC,KAAX,CAAf,GAAmC,CAAnC;AAEA,OAAO,IAAM,SAAS,GAAG,IAAI,UAAJ,CAAe,GAAf,CAAlB;;AAEP,KAAK,IAAI,GAAG,GAAG,CAAV,EAAa,GAAG,GAAG,GAAxB,EAA6B,GAAG,GAAG,GAAnC,EAAwC,GAAG,EAA3C,EAA+C;AAC7C,EAAA,SAAS,CAAC,GAAD,CAAT,GAAiB,OAAO,CAAC,GAAD,CAAP,IAAgB,eAAe,CAAC,GAAD,CAA/B,GAAuC,CAAvC,GAA2C,CAA5D;AACD","sourceRoot":"","sourcesContent":["import CharCodes from \"./CharCodes\";\nexport var IsDigit = new Uint8Array(256);\nIsDigit[CharCodes.Zero] = 1;\nIsDigit[CharCodes.One] = 1;\nIsDigit[CharCodes.Two] = 1;\nIsDigit[CharCodes.Three] = 1;\nIsDigit[CharCodes.Four] = 1;\nIsDigit[CharCodes.Five] = 1;\nIsDigit[CharCodes.Six] = 1;\nIsDigit[CharCodes.Seven] = 1;\nIsDigit[CharCodes.Eight] = 1;\nIsDigit[CharCodes.Nine] = 1;\nexport var IsNumericPrefix = new Uint8Array(256);\nIsNumericPrefix[CharCodes.Period] = 1;\nIsNumericPrefix[CharCodes.Plus] = 1;\nIsNumericPrefix[CharCodes.Minus] = 1;\nexport var IsNumeric = new Uint8Array(256);\nfor (var idx = 0, len = 256; idx < len; idx++) {\n    IsNumeric[idx] = IsDigit[idx] || IsNumericPrefix[idx] ? 1 : 0;\n}\n//# sourceMappingURL=Numeric.js.map"]},"metadata":{},"sourceType":"module"}